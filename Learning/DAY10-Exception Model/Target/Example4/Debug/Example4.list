
Example4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000012f4  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b0  08001494  08001494  00011494  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001544  08001544  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001544  08001544  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001544  08001544  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001544  08001544  00011544  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001548  08001548  00011548  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800154c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  080015b0  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080015b0  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00001106  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000432  00000000  00000000  0002119a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000120  00000000  00000000  000215d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000000e8  00000000  00000000  000216f0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bf2  00000000  00000000  000217d8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001338  00000000  00000000  000243ca  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00009662  00000000  00000000  00025702  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002ed64  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b8c  00000000  00000000  0002edb4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800147c 	.word	0x0800147c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	0800147c 	.word	0x0800147c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <function_add>:
#include <stdint.h>
#include <stdio.h>
int function_add(int a,int b,int c,int d);

int function_add(int a,int b,int c,int d)
{
 8000280:	b480      	push	{r7}
 8000282:	b087      	sub	sp, #28
 8000284:	af00      	add	r7, sp, #0
 8000286:	60f8      	str	r0, [r7, #12]
 8000288:	60b9      	str	r1, [r7, #8]
 800028a:	607a      	str	r2, [r7, #4]
 800028c:	603b      	str	r3, [r7, #0]
	int sum;
	sum=a+b+c+d;
 800028e:	68fa      	ldr	r2, [r7, #12]
 8000290:	68bb      	ldr	r3, [r7, #8]
 8000292:	441a      	add	r2, r3
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4413      	add	r3, r2
 8000298:	683a      	ldr	r2, [r7, #0]
 800029a:	4413      	add	r3, r2
 800029c:	617b      	str	r3, [r7, #20]
	return sum;
 800029e:	697b      	ldr	r3, [r7, #20]
}
 80002a0:	4618      	mov	r0, r3
 80002a2:	371c      	adds	r7, #28
 80002a4:	46bd      	mov	sp, r7
 80002a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002aa:	4770      	bx	lr

080002ac <main>:

int main(void)
{
 80002ac:	b580      	push	{r7, lr}
 80002ae:	b082      	sub	sp, #8
 80002b0:	af00      	add	r7, sp, #0

	int sum;
	sum=function_add(1,2,3,4);
 80002b2:	2304      	movs	r3, #4
 80002b4:	2203      	movs	r2, #3
 80002b6:	2102      	movs	r1, #2
 80002b8:	2001      	movs	r0, #1
 80002ba:	f7ff ffe1 	bl	8000280 <function_add>
 80002be:	6078      	str	r0, [r7, #4]
    printf("Sum of two numbers %d \n",sum);
 80002c0:	6879      	ldr	r1, [r7, #4]
 80002c2:	4807      	ldr	r0, [pc, #28]	; (80002e0 <main+0x34>)
 80002c4:	f000 fbe6 	bl	8000a94 <iprintf>
    fflush(stdout);
 80002c8:	4b06      	ldr	r3, [pc, #24]	; (80002e4 <main+0x38>)
 80002ca:	681b      	ldr	r3, [r3, #0]
 80002cc:	689b      	ldr	r3, [r3, #8]
 80002ce:	4618      	mov	r0, r3
 80002d0:	f000 f9c8 	bl	8000664 <fflush>
	return 0;
 80002d4:	2300      	movs	r3, #0
}
 80002d6:	4618      	mov	r0, r3
 80002d8:	3708      	adds	r7, #8
 80002da:	46bd      	mov	sp, r7
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	bf00      	nop
 80002e0:	08001494 	.word	0x08001494
 80002e4:	20000000 	.word	0x20000000

080002e8 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80002e8:	b480      	push	{r7}
 80002ea:	b083      	sub	sp, #12
 80002ec:	af00      	add	r7, sp, #0
 80002ee:	4603      	mov	r3, r0
 80002f0:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 80002f2:	4b0f      	ldr	r3, [pc, #60]	; (8000330 <ITM_SendChar+0x48>)
 80002f4:	681b      	ldr	r3, [r3, #0]
 80002f6:	4a0e      	ldr	r2, [pc, #56]	; (8000330 <ITM_SendChar+0x48>)
 80002f8:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80002fc:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 80002fe:	4b0d      	ldr	r3, [pc, #52]	; (8000334 <ITM_SendChar+0x4c>)
 8000300:	681b      	ldr	r3, [r3, #0]
 8000302:	4a0c      	ldr	r2, [pc, #48]	; (8000334 <ITM_SendChar+0x4c>)
 8000304:	f043 0301 	orr.w	r3, r3, #1
 8000308:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800030a:	bf00      	nop
 800030c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 8000310:	681b      	ldr	r3, [r3, #0]
 8000312:	f003 0301 	and.w	r3, r3, #1
 8000316:	2b00      	cmp	r3, #0
 8000318:	d0f8      	beq.n	800030c <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800031a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800031e:	79fb      	ldrb	r3, [r7, #7]
 8000320:	6013      	str	r3, [r2, #0]
}
 8000322:	bf00      	nop
 8000324:	370c      	adds	r7, #12
 8000326:	46bd      	mov	sp, r7
 8000328:	f85d 7b04 	ldr.w	r7, [sp], #4
 800032c:	4770      	bx	lr
 800032e:	bf00      	nop
 8000330:	e000edfc 	.word	0xe000edfc
 8000334:	e0000e00 	.word	0xe0000e00

08000338 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000338:	b580      	push	{r7, lr}
 800033a:	b086      	sub	sp, #24
 800033c:	af00      	add	r7, sp, #0
 800033e:	60f8      	str	r0, [r7, #12]
 8000340:	60b9      	str	r1, [r7, #8]
 8000342:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000344:	2300      	movs	r3, #0
 8000346:	617b      	str	r3, [r7, #20]
 8000348:	e00a      	b.n	8000360 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800034a:	f3af 8000 	nop.w
 800034e:	4601      	mov	r1, r0
 8000350:	68bb      	ldr	r3, [r7, #8]
 8000352:	1c5a      	adds	r2, r3, #1
 8000354:	60ba      	str	r2, [r7, #8]
 8000356:	b2ca      	uxtb	r2, r1
 8000358:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800035a:	697b      	ldr	r3, [r7, #20]
 800035c:	3301      	adds	r3, #1
 800035e:	617b      	str	r3, [r7, #20]
 8000360:	697a      	ldr	r2, [r7, #20]
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	429a      	cmp	r2, r3
 8000366:	dbf0      	blt.n	800034a <_read+0x12>
  }

  return len;
 8000368:	687b      	ldr	r3, [r7, #4]
}
 800036a:	4618      	mov	r0, r3
 800036c:	3718      	adds	r7, #24
 800036e:	46bd      	mov	sp, r7
 8000370:	bd80      	pop	{r7, pc}

08000372 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000372:	b580      	push	{r7, lr}
 8000374:	b086      	sub	sp, #24
 8000376:	af00      	add	r7, sp, #0
 8000378:	60f8      	str	r0, [r7, #12]
 800037a:	60b9      	str	r1, [r7, #8]
 800037c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800037e:	2300      	movs	r3, #0
 8000380:	617b      	str	r3, [r7, #20]
 8000382:	e009      	b.n	8000398 <_write+0x26>
  {
  //  __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000384:	68bb      	ldr	r3, [r7, #8]
 8000386:	1c5a      	adds	r2, r3, #1
 8000388:	60ba      	str	r2, [r7, #8]
 800038a:	781b      	ldrb	r3, [r3, #0]
 800038c:	4618      	mov	r0, r3
 800038e:	f7ff ffab 	bl	80002e8 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000392:	697b      	ldr	r3, [r7, #20]
 8000394:	3301      	adds	r3, #1
 8000396:	617b      	str	r3, [r7, #20]
 8000398:	697a      	ldr	r2, [r7, #20]
 800039a:	687b      	ldr	r3, [r7, #4]
 800039c:	429a      	cmp	r2, r3
 800039e:	dbf1      	blt.n	8000384 <_write+0x12>

  }
  return len;
 80003a0:	687b      	ldr	r3, [r7, #4]
}
 80003a2:	4618      	mov	r0, r3
 80003a4:	3718      	adds	r7, #24
 80003a6:	46bd      	mov	sp, r7
 80003a8:	bd80      	pop	{r7, pc}

080003aa <_close>:

int _close(int file)
{
 80003aa:	b480      	push	{r7}
 80003ac:	b083      	sub	sp, #12
 80003ae:	af00      	add	r7, sp, #0
 80003b0:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003b2:	f04f 33ff 	mov.w	r3, #4294967295
}
 80003b6:	4618      	mov	r0, r3
 80003b8:	370c      	adds	r7, #12
 80003ba:	46bd      	mov	sp, r7
 80003bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003c0:	4770      	bx	lr

080003c2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80003c2:	b480      	push	{r7}
 80003c4:	b083      	sub	sp, #12
 80003c6:	af00      	add	r7, sp, #0
 80003c8:	6078      	str	r0, [r7, #4]
 80003ca:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80003cc:	683b      	ldr	r3, [r7, #0]
 80003ce:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80003d2:	605a      	str	r2, [r3, #4]
  return 0;
 80003d4:	2300      	movs	r3, #0
}
 80003d6:	4618      	mov	r0, r3
 80003d8:	370c      	adds	r7, #12
 80003da:	46bd      	mov	sp, r7
 80003dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e0:	4770      	bx	lr

080003e2 <_isatty>:

int _isatty(int file)
{
 80003e2:	b480      	push	{r7}
 80003e4:	b083      	sub	sp, #12
 80003e6:	af00      	add	r7, sp, #0
 80003e8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80003ea:	2301      	movs	r3, #1
}
 80003ec:	4618      	mov	r0, r3
 80003ee:	370c      	adds	r7, #12
 80003f0:	46bd      	mov	sp, r7
 80003f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003f6:	4770      	bx	lr

080003f8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80003f8:	b480      	push	{r7}
 80003fa:	b085      	sub	sp, #20
 80003fc:	af00      	add	r7, sp, #0
 80003fe:	60f8      	str	r0, [r7, #12]
 8000400:	60b9      	str	r1, [r7, #8]
 8000402:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000404:	2300      	movs	r3, #0
}
 8000406:	4618      	mov	r0, r3
 8000408:	3714      	adds	r7, #20
 800040a:	46bd      	mov	sp, r7
 800040c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000410:	4770      	bx	lr
	...

08000414 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000414:	b580      	push	{r7, lr}
 8000416:	b086      	sub	sp, #24
 8000418:	af00      	add	r7, sp, #0
 800041a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800041c:	4a14      	ldr	r2, [pc, #80]	; (8000470 <_sbrk+0x5c>)
 800041e:	4b15      	ldr	r3, [pc, #84]	; (8000474 <_sbrk+0x60>)
 8000420:	1ad3      	subs	r3, r2, r3
 8000422:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000424:	697b      	ldr	r3, [r7, #20]
 8000426:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000428:	4b13      	ldr	r3, [pc, #76]	; (8000478 <_sbrk+0x64>)
 800042a:	681b      	ldr	r3, [r3, #0]
 800042c:	2b00      	cmp	r3, #0
 800042e:	d102      	bne.n	8000436 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000430:	4b11      	ldr	r3, [pc, #68]	; (8000478 <_sbrk+0x64>)
 8000432:	4a12      	ldr	r2, [pc, #72]	; (800047c <_sbrk+0x68>)
 8000434:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000436:	4b10      	ldr	r3, [pc, #64]	; (8000478 <_sbrk+0x64>)
 8000438:	681a      	ldr	r2, [r3, #0]
 800043a:	687b      	ldr	r3, [r7, #4]
 800043c:	4413      	add	r3, r2
 800043e:	693a      	ldr	r2, [r7, #16]
 8000440:	429a      	cmp	r2, r3
 8000442:	d207      	bcs.n	8000454 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000444:	f000 f846 	bl	80004d4 <__errno>
 8000448:	4603      	mov	r3, r0
 800044a:	220c      	movs	r2, #12
 800044c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800044e:	f04f 33ff 	mov.w	r3, #4294967295
 8000452:	e009      	b.n	8000468 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000454:	4b08      	ldr	r3, [pc, #32]	; (8000478 <_sbrk+0x64>)
 8000456:	681b      	ldr	r3, [r3, #0]
 8000458:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800045a:	4b07      	ldr	r3, [pc, #28]	; (8000478 <_sbrk+0x64>)
 800045c:	681a      	ldr	r2, [r3, #0]
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	4413      	add	r3, r2
 8000462:	4a05      	ldr	r2, [pc, #20]	; (8000478 <_sbrk+0x64>)
 8000464:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000466:	68fb      	ldr	r3, [r7, #12]
}
 8000468:	4618      	mov	r0, r3
 800046a:	3718      	adds	r7, #24
 800046c:	46bd      	mov	sp, r7
 800046e:	bd80      	pop	{r7, pc}
 8000470:	20020000 	.word	0x20020000
 8000474:	00000400 	.word	0x00000400
 8000478:	20000080 	.word	0x20000080
 800047c:	20000098 	.word	0x20000098

08000480 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000480:	480d      	ldr	r0, [pc, #52]	; (80004b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000482:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000484:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000488:	480c      	ldr	r0, [pc, #48]	; (80004bc <LoopForever+0x6>)
  ldr r1, =_edata
 800048a:	490d      	ldr	r1, [pc, #52]	; (80004c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800048c:	4a0d      	ldr	r2, [pc, #52]	; (80004c4 <LoopForever+0xe>)
  movs r3, #0
 800048e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000490:	e002      	b.n	8000498 <LoopCopyDataInit>

08000492 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000492:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000494:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000496:	3304      	adds	r3, #4

08000498 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000498:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800049a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800049c:	d3f9      	bcc.n	8000492 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800049e:	4a0a      	ldr	r2, [pc, #40]	; (80004c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004a0:	4c0a      	ldr	r4, [pc, #40]	; (80004cc <LoopForever+0x16>)
  movs r3, #0
 80004a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004a4:	e001      	b.n	80004aa <LoopFillZerobss>

080004a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004a8:	3204      	adds	r2, #4

080004aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004ac:	d3fb      	bcc.n	80004a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004ae:	f000 f9e1 	bl	8000874 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004b2:	f7ff fefb 	bl	80002ac <main>

080004b6 <LoopForever>:

LoopForever:
  b LoopForever
 80004b6:	e7fe      	b.n	80004b6 <LoopForever>
  ldr   r0, =_estack
 80004b8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80004bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004c0:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 80004c4:	0800154c 	.word	0x0800154c
  ldr r2, =_sbss
 80004c8:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 80004cc:	20000094 	.word	0x20000094

080004d0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004d0:	e7fe      	b.n	80004d0 <ADC_IRQHandler>
	...

080004d4 <__errno>:
 80004d4:	4b01      	ldr	r3, [pc, #4]	; (80004dc <__errno+0x8>)
 80004d6:	6818      	ldr	r0, [r3, #0]
 80004d8:	4770      	bx	lr
 80004da:	bf00      	nop
 80004dc:	20000000 	.word	0x20000000

080004e0 <__sflush_r>:
 80004e0:	898a      	ldrh	r2, [r1, #12]
 80004e2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80004e6:	4605      	mov	r5, r0
 80004e8:	0710      	lsls	r0, r2, #28
 80004ea:	460c      	mov	r4, r1
 80004ec:	d458      	bmi.n	80005a0 <__sflush_r+0xc0>
 80004ee:	684b      	ldr	r3, [r1, #4]
 80004f0:	2b00      	cmp	r3, #0
 80004f2:	dc05      	bgt.n	8000500 <__sflush_r+0x20>
 80004f4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80004f6:	2b00      	cmp	r3, #0
 80004f8:	dc02      	bgt.n	8000500 <__sflush_r+0x20>
 80004fa:	2000      	movs	r0, #0
 80004fc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000500:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000502:	2e00      	cmp	r6, #0
 8000504:	d0f9      	beq.n	80004fa <__sflush_r+0x1a>
 8000506:	2300      	movs	r3, #0
 8000508:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800050c:	682f      	ldr	r7, [r5, #0]
 800050e:	602b      	str	r3, [r5, #0]
 8000510:	d032      	beq.n	8000578 <__sflush_r+0x98>
 8000512:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000514:	89a3      	ldrh	r3, [r4, #12]
 8000516:	075a      	lsls	r2, r3, #29
 8000518:	d505      	bpl.n	8000526 <__sflush_r+0x46>
 800051a:	6863      	ldr	r3, [r4, #4]
 800051c:	1ac0      	subs	r0, r0, r3
 800051e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000520:	b10b      	cbz	r3, 8000526 <__sflush_r+0x46>
 8000522:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000524:	1ac0      	subs	r0, r0, r3
 8000526:	2300      	movs	r3, #0
 8000528:	4602      	mov	r2, r0
 800052a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800052c:	6a21      	ldr	r1, [r4, #32]
 800052e:	4628      	mov	r0, r5
 8000530:	47b0      	blx	r6
 8000532:	1c43      	adds	r3, r0, #1
 8000534:	89a3      	ldrh	r3, [r4, #12]
 8000536:	d106      	bne.n	8000546 <__sflush_r+0x66>
 8000538:	6829      	ldr	r1, [r5, #0]
 800053a:	291d      	cmp	r1, #29
 800053c:	d82c      	bhi.n	8000598 <__sflush_r+0xb8>
 800053e:	4a2a      	ldr	r2, [pc, #168]	; (80005e8 <__sflush_r+0x108>)
 8000540:	40ca      	lsrs	r2, r1
 8000542:	07d6      	lsls	r6, r2, #31
 8000544:	d528      	bpl.n	8000598 <__sflush_r+0xb8>
 8000546:	2200      	movs	r2, #0
 8000548:	6062      	str	r2, [r4, #4]
 800054a:	04d9      	lsls	r1, r3, #19
 800054c:	6922      	ldr	r2, [r4, #16]
 800054e:	6022      	str	r2, [r4, #0]
 8000550:	d504      	bpl.n	800055c <__sflush_r+0x7c>
 8000552:	1c42      	adds	r2, r0, #1
 8000554:	d101      	bne.n	800055a <__sflush_r+0x7a>
 8000556:	682b      	ldr	r3, [r5, #0]
 8000558:	b903      	cbnz	r3, 800055c <__sflush_r+0x7c>
 800055a:	6560      	str	r0, [r4, #84]	; 0x54
 800055c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800055e:	602f      	str	r7, [r5, #0]
 8000560:	2900      	cmp	r1, #0
 8000562:	d0ca      	beq.n	80004fa <__sflush_r+0x1a>
 8000564:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000568:	4299      	cmp	r1, r3
 800056a:	d002      	beq.n	8000572 <__sflush_r+0x92>
 800056c:	4628      	mov	r0, r5
 800056e:	f000 f9b1 	bl	80008d4 <_free_r>
 8000572:	2000      	movs	r0, #0
 8000574:	6360      	str	r0, [r4, #52]	; 0x34
 8000576:	e7c1      	b.n	80004fc <__sflush_r+0x1c>
 8000578:	6a21      	ldr	r1, [r4, #32]
 800057a:	2301      	movs	r3, #1
 800057c:	4628      	mov	r0, r5
 800057e:	47b0      	blx	r6
 8000580:	1c41      	adds	r1, r0, #1
 8000582:	d1c7      	bne.n	8000514 <__sflush_r+0x34>
 8000584:	682b      	ldr	r3, [r5, #0]
 8000586:	2b00      	cmp	r3, #0
 8000588:	d0c4      	beq.n	8000514 <__sflush_r+0x34>
 800058a:	2b1d      	cmp	r3, #29
 800058c:	d001      	beq.n	8000592 <__sflush_r+0xb2>
 800058e:	2b16      	cmp	r3, #22
 8000590:	d101      	bne.n	8000596 <__sflush_r+0xb6>
 8000592:	602f      	str	r7, [r5, #0]
 8000594:	e7b1      	b.n	80004fa <__sflush_r+0x1a>
 8000596:	89a3      	ldrh	r3, [r4, #12]
 8000598:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800059c:	81a3      	strh	r3, [r4, #12]
 800059e:	e7ad      	b.n	80004fc <__sflush_r+0x1c>
 80005a0:	690f      	ldr	r7, [r1, #16]
 80005a2:	2f00      	cmp	r7, #0
 80005a4:	d0a9      	beq.n	80004fa <__sflush_r+0x1a>
 80005a6:	0793      	lsls	r3, r2, #30
 80005a8:	680e      	ldr	r6, [r1, #0]
 80005aa:	bf08      	it	eq
 80005ac:	694b      	ldreq	r3, [r1, #20]
 80005ae:	600f      	str	r7, [r1, #0]
 80005b0:	bf18      	it	ne
 80005b2:	2300      	movne	r3, #0
 80005b4:	eba6 0807 	sub.w	r8, r6, r7
 80005b8:	608b      	str	r3, [r1, #8]
 80005ba:	f1b8 0f00 	cmp.w	r8, #0
 80005be:	dd9c      	ble.n	80004fa <__sflush_r+0x1a>
 80005c0:	6a21      	ldr	r1, [r4, #32]
 80005c2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80005c4:	4643      	mov	r3, r8
 80005c6:	463a      	mov	r2, r7
 80005c8:	4628      	mov	r0, r5
 80005ca:	47b0      	blx	r6
 80005cc:	2800      	cmp	r0, #0
 80005ce:	dc06      	bgt.n	80005de <__sflush_r+0xfe>
 80005d0:	89a3      	ldrh	r3, [r4, #12]
 80005d2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80005d6:	81a3      	strh	r3, [r4, #12]
 80005d8:	f04f 30ff 	mov.w	r0, #4294967295
 80005dc:	e78e      	b.n	80004fc <__sflush_r+0x1c>
 80005de:	4407      	add	r7, r0
 80005e0:	eba8 0800 	sub.w	r8, r8, r0
 80005e4:	e7e9      	b.n	80005ba <__sflush_r+0xda>
 80005e6:	bf00      	nop
 80005e8:	20400001 	.word	0x20400001

080005ec <_fflush_r>:
 80005ec:	b538      	push	{r3, r4, r5, lr}
 80005ee:	690b      	ldr	r3, [r1, #16]
 80005f0:	4605      	mov	r5, r0
 80005f2:	460c      	mov	r4, r1
 80005f4:	b913      	cbnz	r3, 80005fc <_fflush_r+0x10>
 80005f6:	2500      	movs	r5, #0
 80005f8:	4628      	mov	r0, r5
 80005fa:	bd38      	pop	{r3, r4, r5, pc}
 80005fc:	b118      	cbz	r0, 8000606 <_fflush_r+0x1a>
 80005fe:	6983      	ldr	r3, [r0, #24]
 8000600:	b90b      	cbnz	r3, 8000606 <_fflush_r+0x1a>
 8000602:	f000 f899 	bl	8000738 <__sinit>
 8000606:	4b14      	ldr	r3, [pc, #80]	; (8000658 <_fflush_r+0x6c>)
 8000608:	429c      	cmp	r4, r3
 800060a:	d11b      	bne.n	8000644 <_fflush_r+0x58>
 800060c:	686c      	ldr	r4, [r5, #4]
 800060e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000612:	2b00      	cmp	r3, #0
 8000614:	d0ef      	beq.n	80005f6 <_fflush_r+0xa>
 8000616:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000618:	07d0      	lsls	r0, r2, #31
 800061a:	d404      	bmi.n	8000626 <_fflush_r+0x3a>
 800061c:	0599      	lsls	r1, r3, #22
 800061e:	d402      	bmi.n	8000626 <_fflush_r+0x3a>
 8000620:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000622:	f000 f94c 	bl	80008be <__retarget_lock_acquire_recursive>
 8000626:	4628      	mov	r0, r5
 8000628:	4621      	mov	r1, r4
 800062a:	f7ff ff59 	bl	80004e0 <__sflush_r>
 800062e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000630:	07da      	lsls	r2, r3, #31
 8000632:	4605      	mov	r5, r0
 8000634:	d4e0      	bmi.n	80005f8 <_fflush_r+0xc>
 8000636:	89a3      	ldrh	r3, [r4, #12]
 8000638:	059b      	lsls	r3, r3, #22
 800063a:	d4dd      	bmi.n	80005f8 <_fflush_r+0xc>
 800063c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800063e:	f000 f93f 	bl	80008c0 <__retarget_lock_release_recursive>
 8000642:	e7d9      	b.n	80005f8 <_fflush_r+0xc>
 8000644:	4b05      	ldr	r3, [pc, #20]	; (800065c <_fflush_r+0x70>)
 8000646:	429c      	cmp	r4, r3
 8000648:	d101      	bne.n	800064e <_fflush_r+0x62>
 800064a:	68ac      	ldr	r4, [r5, #8]
 800064c:	e7df      	b.n	800060e <_fflush_r+0x22>
 800064e:	4b04      	ldr	r3, [pc, #16]	; (8000660 <_fflush_r+0x74>)
 8000650:	429c      	cmp	r4, r3
 8000652:	bf08      	it	eq
 8000654:	68ec      	ldreq	r4, [r5, #12]
 8000656:	e7da      	b.n	800060e <_fflush_r+0x22>
 8000658:	080014cc 	.word	0x080014cc
 800065c:	080014ec 	.word	0x080014ec
 8000660:	080014ac 	.word	0x080014ac

08000664 <fflush>:
 8000664:	4601      	mov	r1, r0
 8000666:	b920      	cbnz	r0, 8000672 <fflush+0xe>
 8000668:	4b04      	ldr	r3, [pc, #16]	; (800067c <fflush+0x18>)
 800066a:	4905      	ldr	r1, [pc, #20]	; (8000680 <fflush+0x1c>)
 800066c:	6818      	ldr	r0, [r3, #0]
 800066e:	f000 b8e1 	b.w	8000834 <_fwalk_reent>
 8000672:	4b04      	ldr	r3, [pc, #16]	; (8000684 <fflush+0x20>)
 8000674:	6818      	ldr	r0, [r3, #0]
 8000676:	f7ff bfb9 	b.w	80005ec <_fflush_r>
 800067a:	bf00      	nop
 800067c:	0800150c 	.word	0x0800150c
 8000680:	080005ed 	.word	0x080005ed
 8000684:	20000000 	.word	0x20000000

08000688 <std>:
 8000688:	2300      	movs	r3, #0
 800068a:	b510      	push	{r4, lr}
 800068c:	4604      	mov	r4, r0
 800068e:	e9c0 3300 	strd	r3, r3, [r0]
 8000692:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000696:	6083      	str	r3, [r0, #8]
 8000698:	8181      	strh	r1, [r0, #12]
 800069a:	6643      	str	r3, [r0, #100]	; 0x64
 800069c:	81c2      	strh	r2, [r0, #14]
 800069e:	6183      	str	r3, [r0, #24]
 80006a0:	4619      	mov	r1, r3
 80006a2:	2208      	movs	r2, #8
 80006a4:	305c      	adds	r0, #92	; 0x5c
 80006a6:	f000 f90c 	bl	80008c2 <memset>
 80006aa:	4b05      	ldr	r3, [pc, #20]	; (80006c0 <std+0x38>)
 80006ac:	6263      	str	r3, [r4, #36]	; 0x24
 80006ae:	4b05      	ldr	r3, [pc, #20]	; (80006c4 <std+0x3c>)
 80006b0:	62a3      	str	r3, [r4, #40]	; 0x28
 80006b2:	4b05      	ldr	r3, [pc, #20]	; (80006c8 <std+0x40>)
 80006b4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80006b6:	4b05      	ldr	r3, [pc, #20]	; (80006cc <std+0x44>)
 80006b8:	6224      	str	r4, [r4, #32]
 80006ba:	6323      	str	r3, [r4, #48]	; 0x30
 80006bc:	bd10      	pop	{r4, pc}
 80006be:	bf00      	nop
 80006c0:	08000ae5 	.word	0x08000ae5
 80006c4:	08000b07 	.word	0x08000b07
 80006c8:	08000b3f 	.word	0x08000b3f
 80006cc:	08000b63 	.word	0x08000b63

080006d0 <_cleanup_r>:
 80006d0:	4901      	ldr	r1, [pc, #4]	; (80006d8 <_cleanup_r+0x8>)
 80006d2:	f000 b8af 	b.w	8000834 <_fwalk_reent>
 80006d6:	bf00      	nop
 80006d8:	080005ed 	.word	0x080005ed

080006dc <__sfmoreglue>:
 80006dc:	b570      	push	{r4, r5, r6, lr}
 80006de:	2268      	movs	r2, #104	; 0x68
 80006e0:	1e4d      	subs	r5, r1, #1
 80006e2:	4355      	muls	r5, r2
 80006e4:	460e      	mov	r6, r1
 80006e6:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80006ea:	f000 f95f 	bl	80009ac <_malloc_r>
 80006ee:	4604      	mov	r4, r0
 80006f0:	b140      	cbz	r0, 8000704 <__sfmoreglue+0x28>
 80006f2:	2100      	movs	r1, #0
 80006f4:	e9c0 1600 	strd	r1, r6, [r0]
 80006f8:	300c      	adds	r0, #12
 80006fa:	60a0      	str	r0, [r4, #8]
 80006fc:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000700:	f000 f8df 	bl	80008c2 <memset>
 8000704:	4620      	mov	r0, r4
 8000706:	bd70      	pop	{r4, r5, r6, pc}

08000708 <__sfp_lock_acquire>:
 8000708:	4801      	ldr	r0, [pc, #4]	; (8000710 <__sfp_lock_acquire+0x8>)
 800070a:	f000 b8d8 	b.w	80008be <__retarget_lock_acquire_recursive>
 800070e:	bf00      	nop
 8000710:	20000085 	.word	0x20000085

08000714 <__sfp_lock_release>:
 8000714:	4801      	ldr	r0, [pc, #4]	; (800071c <__sfp_lock_release+0x8>)
 8000716:	f000 b8d3 	b.w	80008c0 <__retarget_lock_release_recursive>
 800071a:	bf00      	nop
 800071c:	20000085 	.word	0x20000085

08000720 <__sinit_lock_acquire>:
 8000720:	4801      	ldr	r0, [pc, #4]	; (8000728 <__sinit_lock_acquire+0x8>)
 8000722:	f000 b8cc 	b.w	80008be <__retarget_lock_acquire_recursive>
 8000726:	bf00      	nop
 8000728:	20000086 	.word	0x20000086

0800072c <__sinit_lock_release>:
 800072c:	4801      	ldr	r0, [pc, #4]	; (8000734 <__sinit_lock_release+0x8>)
 800072e:	f000 b8c7 	b.w	80008c0 <__retarget_lock_release_recursive>
 8000732:	bf00      	nop
 8000734:	20000086 	.word	0x20000086

08000738 <__sinit>:
 8000738:	b510      	push	{r4, lr}
 800073a:	4604      	mov	r4, r0
 800073c:	f7ff fff0 	bl	8000720 <__sinit_lock_acquire>
 8000740:	69a3      	ldr	r3, [r4, #24]
 8000742:	b11b      	cbz	r3, 800074c <__sinit+0x14>
 8000744:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000748:	f7ff bff0 	b.w	800072c <__sinit_lock_release>
 800074c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000750:	6523      	str	r3, [r4, #80]	; 0x50
 8000752:	4b13      	ldr	r3, [pc, #76]	; (80007a0 <__sinit+0x68>)
 8000754:	4a13      	ldr	r2, [pc, #76]	; (80007a4 <__sinit+0x6c>)
 8000756:	681b      	ldr	r3, [r3, #0]
 8000758:	62a2      	str	r2, [r4, #40]	; 0x28
 800075a:	42a3      	cmp	r3, r4
 800075c:	bf04      	itt	eq
 800075e:	2301      	moveq	r3, #1
 8000760:	61a3      	streq	r3, [r4, #24]
 8000762:	4620      	mov	r0, r4
 8000764:	f000 f820 	bl	80007a8 <__sfp>
 8000768:	6060      	str	r0, [r4, #4]
 800076a:	4620      	mov	r0, r4
 800076c:	f000 f81c 	bl	80007a8 <__sfp>
 8000770:	60a0      	str	r0, [r4, #8]
 8000772:	4620      	mov	r0, r4
 8000774:	f000 f818 	bl	80007a8 <__sfp>
 8000778:	2200      	movs	r2, #0
 800077a:	60e0      	str	r0, [r4, #12]
 800077c:	2104      	movs	r1, #4
 800077e:	6860      	ldr	r0, [r4, #4]
 8000780:	f7ff ff82 	bl	8000688 <std>
 8000784:	68a0      	ldr	r0, [r4, #8]
 8000786:	2201      	movs	r2, #1
 8000788:	2109      	movs	r1, #9
 800078a:	f7ff ff7d 	bl	8000688 <std>
 800078e:	68e0      	ldr	r0, [r4, #12]
 8000790:	2202      	movs	r2, #2
 8000792:	2112      	movs	r1, #18
 8000794:	f7ff ff78 	bl	8000688 <std>
 8000798:	2301      	movs	r3, #1
 800079a:	61a3      	str	r3, [r4, #24]
 800079c:	e7d2      	b.n	8000744 <__sinit+0xc>
 800079e:	bf00      	nop
 80007a0:	0800150c 	.word	0x0800150c
 80007a4:	080006d1 	.word	0x080006d1

080007a8 <__sfp>:
 80007a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007aa:	4607      	mov	r7, r0
 80007ac:	f7ff ffac 	bl	8000708 <__sfp_lock_acquire>
 80007b0:	4b1e      	ldr	r3, [pc, #120]	; (800082c <__sfp+0x84>)
 80007b2:	681e      	ldr	r6, [r3, #0]
 80007b4:	69b3      	ldr	r3, [r6, #24]
 80007b6:	b913      	cbnz	r3, 80007be <__sfp+0x16>
 80007b8:	4630      	mov	r0, r6
 80007ba:	f7ff ffbd 	bl	8000738 <__sinit>
 80007be:	3648      	adds	r6, #72	; 0x48
 80007c0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80007c4:	3b01      	subs	r3, #1
 80007c6:	d503      	bpl.n	80007d0 <__sfp+0x28>
 80007c8:	6833      	ldr	r3, [r6, #0]
 80007ca:	b30b      	cbz	r3, 8000810 <__sfp+0x68>
 80007cc:	6836      	ldr	r6, [r6, #0]
 80007ce:	e7f7      	b.n	80007c0 <__sfp+0x18>
 80007d0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80007d4:	b9d5      	cbnz	r5, 800080c <__sfp+0x64>
 80007d6:	4b16      	ldr	r3, [pc, #88]	; (8000830 <__sfp+0x88>)
 80007d8:	60e3      	str	r3, [r4, #12]
 80007da:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80007de:	6665      	str	r5, [r4, #100]	; 0x64
 80007e0:	f000 f86c 	bl	80008bc <__retarget_lock_init_recursive>
 80007e4:	f7ff ff96 	bl	8000714 <__sfp_lock_release>
 80007e8:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80007ec:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80007f0:	6025      	str	r5, [r4, #0]
 80007f2:	61a5      	str	r5, [r4, #24]
 80007f4:	2208      	movs	r2, #8
 80007f6:	4629      	mov	r1, r5
 80007f8:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80007fc:	f000 f861 	bl	80008c2 <memset>
 8000800:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000804:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000808:	4620      	mov	r0, r4
 800080a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800080c:	3468      	adds	r4, #104	; 0x68
 800080e:	e7d9      	b.n	80007c4 <__sfp+0x1c>
 8000810:	2104      	movs	r1, #4
 8000812:	4638      	mov	r0, r7
 8000814:	f7ff ff62 	bl	80006dc <__sfmoreglue>
 8000818:	4604      	mov	r4, r0
 800081a:	6030      	str	r0, [r6, #0]
 800081c:	2800      	cmp	r0, #0
 800081e:	d1d5      	bne.n	80007cc <__sfp+0x24>
 8000820:	f7ff ff78 	bl	8000714 <__sfp_lock_release>
 8000824:	230c      	movs	r3, #12
 8000826:	603b      	str	r3, [r7, #0]
 8000828:	e7ee      	b.n	8000808 <__sfp+0x60>
 800082a:	bf00      	nop
 800082c:	0800150c 	.word	0x0800150c
 8000830:	ffff0001 	.word	0xffff0001

08000834 <_fwalk_reent>:
 8000834:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000838:	4606      	mov	r6, r0
 800083a:	4688      	mov	r8, r1
 800083c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000840:	2700      	movs	r7, #0
 8000842:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000846:	f1b9 0901 	subs.w	r9, r9, #1
 800084a:	d505      	bpl.n	8000858 <_fwalk_reent+0x24>
 800084c:	6824      	ldr	r4, [r4, #0]
 800084e:	2c00      	cmp	r4, #0
 8000850:	d1f7      	bne.n	8000842 <_fwalk_reent+0xe>
 8000852:	4638      	mov	r0, r7
 8000854:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000858:	89ab      	ldrh	r3, [r5, #12]
 800085a:	2b01      	cmp	r3, #1
 800085c:	d907      	bls.n	800086e <_fwalk_reent+0x3a>
 800085e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000862:	3301      	adds	r3, #1
 8000864:	d003      	beq.n	800086e <_fwalk_reent+0x3a>
 8000866:	4629      	mov	r1, r5
 8000868:	4630      	mov	r0, r6
 800086a:	47c0      	blx	r8
 800086c:	4307      	orrs	r7, r0
 800086e:	3568      	adds	r5, #104	; 0x68
 8000870:	e7e9      	b.n	8000846 <_fwalk_reent+0x12>
	...

08000874 <__libc_init_array>:
 8000874:	b570      	push	{r4, r5, r6, lr}
 8000876:	4d0d      	ldr	r5, [pc, #52]	; (80008ac <__libc_init_array+0x38>)
 8000878:	4c0d      	ldr	r4, [pc, #52]	; (80008b0 <__libc_init_array+0x3c>)
 800087a:	1b64      	subs	r4, r4, r5
 800087c:	10a4      	asrs	r4, r4, #2
 800087e:	2600      	movs	r6, #0
 8000880:	42a6      	cmp	r6, r4
 8000882:	d109      	bne.n	8000898 <__libc_init_array+0x24>
 8000884:	4d0b      	ldr	r5, [pc, #44]	; (80008b4 <__libc_init_array+0x40>)
 8000886:	4c0c      	ldr	r4, [pc, #48]	; (80008b8 <__libc_init_array+0x44>)
 8000888:	f000 fdf8 	bl	800147c <_init>
 800088c:	1b64      	subs	r4, r4, r5
 800088e:	10a4      	asrs	r4, r4, #2
 8000890:	2600      	movs	r6, #0
 8000892:	42a6      	cmp	r6, r4
 8000894:	d105      	bne.n	80008a2 <__libc_init_array+0x2e>
 8000896:	bd70      	pop	{r4, r5, r6, pc}
 8000898:	f855 3b04 	ldr.w	r3, [r5], #4
 800089c:	4798      	blx	r3
 800089e:	3601      	adds	r6, #1
 80008a0:	e7ee      	b.n	8000880 <__libc_init_array+0xc>
 80008a2:	f855 3b04 	ldr.w	r3, [r5], #4
 80008a6:	4798      	blx	r3
 80008a8:	3601      	adds	r6, #1
 80008aa:	e7f2      	b.n	8000892 <__libc_init_array+0x1e>
 80008ac:	08001544 	.word	0x08001544
 80008b0:	08001544 	.word	0x08001544
 80008b4:	08001544 	.word	0x08001544
 80008b8:	08001548 	.word	0x08001548

080008bc <__retarget_lock_init_recursive>:
 80008bc:	4770      	bx	lr

080008be <__retarget_lock_acquire_recursive>:
 80008be:	4770      	bx	lr

080008c0 <__retarget_lock_release_recursive>:
 80008c0:	4770      	bx	lr

080008c2 <memset>:
 80008c2:	4402      	add	r2, r0
 80008c4:	4603      	mov	r3, r0
 80008c6:	4293      	cmp	r3, r2
 80008c8:	d100      	bne.n	80008cc <memset+0xa>
 80008ca:	4770      	bx	lr
 80008cc:	f803 1b01 	strb.w	r1, [r3], #1
 80008d0:	e7f9      	b.n	80008c6 <memset+0x4>
	...

080008d4 <_free_r>:
 80008d4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80008d6:	2900      	cmp	r1, #0
 80008d8:	d044      	beq.n	8000964 <_free_r+0x90>
 80008da:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008de:	9001      	str	r0, [sp, #4]
 80008e0:	2b00      	cmp	r3, #0
 80008e2:	f1a1 0404 	sub.w	r4, r1, #4
 80008e6:	bfb8      	it	lt
 80008e8:	18e4      	addlt	r4, r4, r3
 80008ea:	f000 f973 	bl	8000bd4 <__malloc_lock>
 80008ee:	4a1e      	ldr	r2, [pc, #120]	; (8000968 <_free_r+0x94>)
 80008f0:	9801      	ldr	r0, [sp, #4]
 80008f2:	6813      	ldr	r3, [r2, #0]
 80008f4:	b933      	cbnz	r3, 8000904 <_free_r+0x30>
 80008f6:	6063      	str	r3, [r4, #4]
 80008f8:	6014      	str	r4, [r2, #0]
 80008fa:	b003      	add	sp, #12
 80008fc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000900:	f000 b96e 	b.w	8000be0 <__malloc_unlock>
 8000904:	42a3      	cmp	r3, r4
 8000906:	d908      	bls.n	800091a <_free_r+0x46>
 8000908:	6825      	ldr	r5, [r4, #0]
 800090a:	1961      	adds	r1, r4, r5
 800090c:	428b      	cmp	r3, r1
 800090e:	bf01      	itttt	eq
 8000910:	6819      	ldreq	r1, [r3, #0]
 8000912:	685b      	ldreq	r3, [r3, #4]
 8000914:	1949      	addeq	r1, r1, r5
 8000916:	6021      	streq	r1, [r4, #0]
 8000918:	e7ed      	b.n	80008f6 <_free_r+0x22>
 800091a:	461a      	mov	r2, r3
 800091c:	685b      	ldr	r3, [r3, #4]
 800091e:	b10b      	cbz	r3, 8000924 <_free_r+0x50>
 8000920:	42a3      	cmp	r3, r4
 8000922:	d9fa      	bls.n	800091a <_free_r+0x46>
 8000924:	6811      	ldr	r1, [r2, #0]
 8000926:	1855      	adds	r5, r2, r1
 8000928:	42a5      	cmp	r5, r4
 800092a:	d10b      	bne.n	8000944 <_free_r+0x70>
 800092c:	6824      	ldr	r4, [r4, #0]
 800092e:	4421      	add	r1, r4
 8000930:	1854      	adds	r4, r2, r1
 8000932:	42a3      	cmp	r3, r4
 8000934:	6011      	str	r1, [r2, #0]
 8000936:	d1e0      	bne.n	80008fa <_free_r+0x26>
 8000938:	681c      	ldr	r4, [r3, #0]
 800093a:	685b      	ldr	r3, [r3, #4]
 800093c:	6053      	str	r3, [r2, #4]
 800093e:	4421      	add	r1, r4
 8000940:	6011      	str	r1, [r2, #0]
 8000942:	e7da      	b.n	80008fa <_free_r+0x26>
 8000944:	d902      	bls.n	800094c <_free_r+0x78>
 8000946:	230c      	movs	r3, #12
 8000948:	6003      	str	r3, [r0, #0]
 800094a:	e7d6      	b.n	80008fa <_free_r+0x26>
 800094c:	6825      	ldr	r5, [r4, #0]
 800094e:	1961      	adds	r1, r4, r5
 8000950:	428b      	cmp	r3, r1
 8000952:	bf04      	itt	eq
 8000954:	6819      	ldreq	r1, [r3, #0]
 8000956:	685b      	ldreq	r3, [r3, #4]
 8000958:	6063      	str	r3, [r4, #4]
 800095a:	bf04      	itt	eq
 800095c:	1949      	addeq	r1, r1, r5
 800095e:	6021      	streq	r1, [r4, #0]
 8000960:	6054      	str	r4, [r2, #4]
 8000962:	e7ca      	b.n	80008fa <_free_r+0x26>
 8000964:	b003      	add	sp, #12
 8000966:	bd30      	pop	{r4, r5, pc}
 8000968:	20000088 	.word	0x20000088

0800096c <sbrk_aligned>:
 800096c:	b570      	push	{r4, r5, r6, lr}
 800096e:	4e0e      	ldr	r6, [pc, #56]	; (80009a8 <sbrk_aligned+0x3c>)
 8000970:	460c      	mov	r4, r1
 8000972:	6831      	ldr	r1, [r6, #0]
 8000974:	4605      	mov	r5, r0
 8000976:	b911      	cbnz	r1, 800097e <sbrk_aligned+0x12>
 8000978:	f000 f8a4 	bl	8000ac4 <_sbrk_r>
 800097c:	6030      	str	r0, [r6, #0]
 800097e:	4621      	mov	r1, r4
 8000980:	4628      	mov	r0, r5
 8000982:	f000 f89f 	bl	8000ac4 <_sbrk_r>
 8000986:	1c43      	adds	r3, r0, #1
 8000988:	d00a      	beq.n	80009a0 <sbrk_aligned+0x34>
 800098a:	1cc4      	adds	r4, r0, #3
 800098c:	f024 0403 	bic.w	r4, r4, #3
 8000990:	42a0      	cmp	r0, r4
 8000992:	d007      	beq.n	80009a4 <sbrk_aligned+0x38>
 8000994:	1a21      	subs	r1, r4, r0
 8000996:	4628      	mov	r0, r5
 8000998:	f000 f894 	bl	8000ac4 <_sbrk_r>
 800099c:	3001      	adds	r0, #1
 800099e:	d101      	bne.n	80009a4 <sbrk_aligned+0x38>
 80009a0:	f04f 34ff 	mov.w	r4, #4294967295
 80009a4:	4620      	mov	r0, r4
 80009a6:	bd70      	pop	{r4, r5, r6, pc}
 80009a8:	2000008c 	.word	0x2000008c

080009ac <_malloc_r>:
 80009ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80009b0:	1ccd      	adds	r5, r1, #3
 80009b2:	f025 0503 	bic.w	r5, r5, #3
 80009b6:	3508      	adds	r5, #8
 80009b8:	2d0c      	cmp	r5, #12
 80009ba:	bf38      	it	cc
 80009bc:	250c      	movcc	r5, #12
 80009be:	2d00      	cmp	r5, #0
 80009c0:	4607      	mov	r7, r0
 80009c2:	db01      	blt.n	80009c8 <_malloc_r+0x1c>
 80009c4:	42a9      	cmp	r1, r5
 80009c6:	d905      	bls.n	80009d4 <_malloc_r+0x28>
 80009c8:	230c      	movs	r3, #12
 80009ca:	603b      	str	r3, [r7, #0]
 80009cc:	2600      	movs	r6, #0
 80009ce:	4630      	mov	r0, r6
 80009d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80009d4:	4e2e      	ldr	r6, [pc, #184]	; (8000a90 <_malloc_r+0xe4>)
 80009d6:	f000 f8fd 	bl	8000bd4 <__malloc_lock>
 80009da:	6833      	ldr	r3, [r6, #0]
 80009dc:	461c      	mov	r4, r3
 80009de:	bb34      	cbnz	r4, 8000a2e <_malloc_r+0x82>
 80009e0:	4629      	mov	r1, r5
 80009e2:	4638      	mov	r0, r7
 80009e4:	f7ff ffc2 	bl	800096c <sbrk_aligned>
 80009e8:	1c43      	adds	r3, r0, #1
 80009ea:	4604      	mov	r4, r0
 80009ec:	d14d      	bne.n	8000a8a <_malloc_r+0xde>
 80009ee:	6834      	ldr	r4, [r6, #0]
 80009f0:	4626      	mov	r6, r4
 80009f2:	2e00      	cmp	r6, #0
 80009f4:	d140      	bne.n	8000a78 <_malloc_r+0xcc>
 80009f6:	6823      	ldr	r3, [r4, #0]
 80009f8:	4631      	mov	r1, r6
 80009fa:	4638      	mov	r0, r7
 80009fc:	eb04 0803 	add.w	r8, r4, r3
 8000a00:	f000 f860 	bl	8000ac4 <_sbrk_r>
 8000a04:	4580      	cmp	r8, r0
 8000a06:	d13a      	bne.n	8000a7e <_malloc_r+0xd2>
 8000a08:	6821      	ldr	r1, [r4, #0]
 8000a0a:	3503      	adds	r5, #3
 8000a0c:	1a6d      	subs	r5, r5, r1
 8000a0e:	f025 0503 	bic.w	r5, r5, #3
 8000a12:	3508      	adds	r5, #8
 8000a14:	2d0c      	cmp	r5, #12
 8000a16:	bf38      	it	cc
 8000a18:	250c      	movcc	r5, #12
 8000a1a:	4629      	mov	r1, r5
 8000a1c:	4638      	mov	r0, r7
 8000a1e:	f7ff ffa5 	bl	800096c <sbrk_aligned>
 8000a22:	3001      	adds	r0, #1
 8000a24:	d02b      	beq.n	8000a7e <_malloc_r+0xd2>
 8000a26:	6823      	ldr	r3, [r4, #0]
 8000a28:	442b      	add	r3, r5
 8000a2a:	6023      	str	r3, [r4, #0]
 8000a2c:	e00e      	b.n	8000a4c <_malloc_r+0xa0>
 8000a2e:	6822      	ldr	r2, [r4, #0]
 8000a30:	1b52      	subs	r2, r2, r5
 8000a32:	d41e      	bmi.n	8000a72 <_malloc_r+0xc6>
 8000a34:	2a0b      	cmp	r2, #11
 8000a36:	d916      	bls.n	8000a66 <_malloc_r+0xba>
 8000a38:	1961      	adds	r1, r4, r5
 8000a3a:	42a3      	cmp	r3, r4
 8000a3c:	6025      	str	r5, [r4, #0]
 8000a3e:	bf18      	it	ne
 8000a40:	6059      	strne	r1, [r3, #4]
 8000a42:	6863      	ldr	r3, [r4, #4]
 8000a44:	bf08      	it	eq
 8000a46:	6031      	streq	r1, [r6, #0]
 8000a48:	5162      	str	r2, [r4, r5]
 8000a4a:	604b      	str	r3, [r1, #4]
 8000a4c:	4638      	mov	r0, r7
 8000a4e:	f104 060b 	add.w	r6, r4, #11
 8000a52:	f000 f8c5 	bl	8000be0 <__malloc_unlock>
 8000a56:	f026 0607 	bic.w	r6, r6, #7
 8000a5a:	1d23      	adds	r3, r4, #4
 8000a5c:	1af2      	subs	r2, r6, r3
 8000a5e:	d0b6      	beq.n	80009ce <_malloc_r+0x22>
 8000a60:	1b9b      	subs	r3, r3, r6
 8000a62:	50a3      	str	r3, [r4, r2]
 8000a64:	e7b3      	b.n	80009ce <_malloc_r+0x22>
 8000a66:	6862      	ldr	r2, [r4, #4]
 8000a68:	42a3      	cmp	r3, r4
 8000a6a:	bf0c      	ite	eq
 8000a6c:	6032      	streq	r2, [r6, #0]
 8000a6e:	605a      	strne	r2, [r3, #4]
 8000a70:	e7ec      	b.n	8000a4c <_malloc_r+0xa0>
 8000a72:	4623      	mov	r3, r4
 8000a74:	6864      	ldr	r4, [r4, #4]
 8000a76:	e7b2      	b.n	80009de <_malloc_r+0x32>
 8000a78:	4634      	mov	r4, r6
 8000a7a:	6876      	ldr	r6, [r6, #4]
 8000a7c:	e7b9      	b.n	80009f2 <_malloc_r+0x46>
 8000a7e:	230c      	movs	r3, #12
 8000a80:	603b      	str	r3, [r7, #0]
 8000a82:	4638      	mov	r0, r7
 8000a84:	f000 f8ac 	bl	8000be0 <__malloc_unlock>
 8000a88:	e7a1      	b.n	80009ce <_malloc_r+0x22>
 8000a8a:	6025      	str	r5, [r4, #0]
 8000a8c:	e7de      	b.n	8000a4c <_malloc_r+0xa0>
 8000a8e:	bf00      	nop
 8000a90:	20000088 	.word	0x20000088

08000a94 <iprintf>:
 8000a94:	b40f      	push	{r0, r1, r2, r3}
 8000a96:	4b0a      	ldr	r3, [pc, #40]	; (8000ac0 <iprintf+0x2c>)
 8000a98:	b513      	push	{r0, r1, r4, lr}
 8000a9a:	681c      	ldr	r4, [r3, #0]
 8000a9c:	b124      	cbz	r4, 8000aa8 <iprintf+0x14>
 8000a9e:	69a3      	ldr	r3, [r4, #24]
 8000aa0:	b913      	cbnz	r3, 8000aa8 <iprintf+0x14>
 8000aa2:	4620      	mov	r0, r4
 8000aa4:	f7ff fe48 	bl	8000738 <__sinit>
 8000aa8:	ab05      	add	r3, sp, #20
 8000aaa:	9a04      	ldr	r2, [sp, #16]
 8000aac:	68a1      	ldr	r1, [r4, #8]
 8000aae:	9301      	str	r3, [sp, #4]
 8000ab0:	4620      	mov	r0, r4
 8000ab2:	f000 f8c5 	bl	8000c40 <_vfiprintf_r>
 8000ab6:	b002      	add	sp, #8
 8000ab8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000abc:	b004      	add	sp, #16
 8000abe:	4770      	bx	lr
 8000ac0:	20000000 	.word	0x20000000

08000ac4 <_sbrk_r>:
 8000ac4:	b538      	push	{r3, r4, r5, lr}
 8000ac6:	4d06      	ldr	r5, [pc, #24]	; (8000ae0 <_sbrk_r+0x1c>)
 8000ac8:	2300      	movs	r3, #0
 8000aca:	4604      	mov	r4, r0
 8000acc:	4608      	mov	r0, r1
 8000ace:	602b      	str	r3, [r5, #0]
 8000ad0:	f7ff fca0 	bl	8000414 <_sbrk>
 8000ad4:	1c43      	adds	r3, r0, #1
 8000ad6:	d102      	bne.n	8000ade <_sbrk_r+0x1a>
 8000ad8:	682b      	ldr	r3, [r5, #0]
 8000ada:	b103      	cbz	r3, 8000ade <_sbrk_r+0x1a>
 8000adc:	6023      	str	r3, [r4, #0]
 8000ade:	bd38      	pop	{r3, r4, r5, pc}
 8000ae0:	20000090 	.word	0x20000090

08000ae4 <__sread>:
 8000ae4:	b510      	push	{r4, lr}
 8000ae6:	460c      	mov	r4, r1
 8000ae8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000aec:	f000 fb6c 	bl	80011c8 <_read_r>
 8000af0:	2800      	cmp	r0, #0
 8000af2:	bfab      	itete	ge
 8000af4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000af6:	89a3      	ldrhlt	r3, [r4, #12]
 8000af8:	181b      	addge	r3, r3, r0
 8000afa:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000afe:	bfac      	ite	ge
 8000b00:	6563      	strge	r3, [r4, #84]	; 0x54
 8000b02:	81a3      	strhlt	r3, [r4, #12]
 8000b04:	bd10      	pop	{r4, pc}

08000b06 <__swrite>:
 8000b06:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000b0a:	461f      	mov	r7, r3
 8000b0c:	898b      	ldrh	r3, [r1, #12]
 8000b0e:	05db      	lsls	r3, r3, #23
 8000b10:	4605      	mov	r5, r0
 8000b12:	460c      	mov	r4, r1
 8000b14:	4616      	mov	r6, r2
 8000b16:	d505      	bpl.n	8000b24 <__swrite+0x1e>
 8000b18:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b1c:	2302      	movs	r3, #2
 8000b1e:	2200      	movs	r2, #0
 8000b20:	f000 f846 	bl	8000bb0 <_lseek_r>
 8000b24:	89a3      	ldrh	r3, [r4, #12]
 8000b26:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b2a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000b2e:	81a3      	strh	r3, [r4, #12]
 8000b30:	4632      	mov	r2, r6
 8000b32:	463b      	mov	r3, r7
 8000b34:	4628      	mov	r0, r5
 8000b36:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000b3a:	f000 b817 	b.w	8000b6c <_write_r>

08000b3e <__sseek>:
 8000b3e:	b510      	push	{r4, lr}
 8000b40:	460c      	mov	r4, r1
 8000b42:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b46:	f000 f833 	bl	8000bb0 <_lseek_r>
 8000b4a:	1c43      	adds	r3, r0, #1
 8000b4c:	89a3      	ldrh	r3, [r4, #12]
 8000b4e:	bf15      	itete	ne
 8000b50:	6560      	strne	r0, [r4, #84]	; 0x54
 8000b52:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000b56:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000b5a:	81a3      	strheq	r3, [r4, #12]
 8000b5c:	bf18      	it	ne
 8000b5e:	81a3      	strhne	r3, [r4, #12]
 8000b60:	bd10      	pop	{r4, pc}

08000b62 <__sclose>:
 8000b62:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b66:	f000 b813 	b.w	8000b90 <_close_r>
	...

08000b6c <_write_r>:
 8000b6c:	b538      	push	{r3, r4, r5, lr}
 8000b6e:	4d07      	ldr	r5, [pc, #28]	; (8000b8c <_write_r+0x20>)
 8000b70:	4604      	mov	r4, r0
 8000b72:	4608      	mov	r0, r1
 8000b74:	4611      	mov	r1, r2
 8000b76:	2200      	movs	r2, #0
 8000b78:	602a      	str	r2, [r5, #0]
 8000b7a:	461a      	mov	r2, r3
 8000b7c:	f7ff fbf9 	bl	8000372 <_write>
 8000b80:	1c43      	adds	r3, r0, #1
 8000b82:	d102      	bne.n	8000b8a <_write_r+0x1e>
 8000b84:	682b      	ldr	r3, [r5, #0]
 8000b86:	b103      	cbz	r3, 8000b8a <_write_r+0x1e>
 8000b88:	6023      	str	r3, [r4, #0]
 8000b8a:	bd38      	pop	{r3, r4, r5, pc}
 8000b8c:	20000090 	.word	0x20000090

08000b90 <_close_r>:
 8000b90:	b538      	push	{r3, r4, r5, lr}
 8000b92:	4d06      	ldr	r5, [pc, #24]	; (8000bac <_close_r+0x1c>)
 8000b94:	2300      	movs	r3, #0
 8000b96:	4604      	mov	r4, r0
 8000b98:	4608      	mov	r0, r1
 8000b9a:	602b      	str	r3, [r5, #0]
 8000b9c:	f7ff fc05 	bl	80003aa <_close>
 8000ba0:	1c43      	adds	r3, r0, #1
 8000ba2:	d102      	bne.n	8000baa <_close_r+0x1a>
 8000ba4:	682b      	ldr	r3, [r5, #0]
 8000ba6:	b103      	cbz	r3, 8000baa <_close_r+0x1a>
 8000ba8:	6023      	str	r3, [r4, #0]
 8000baa:	bd38      	pop	{r3, r4, r5, pc}
 8000bac:	20000090 	.word	0x20000090

08000bb0 <_lseek_r>:
 8000bb0:	b538      	push	{r3, r4, r5, lr}
 8000bb2:	4d07      	ldr	r5, [pc, #28]	; (8000bd0 <_lseek_r+0x20>)
 8000bb4:	4604      	mov	r4, r0
 8000bb6:	4608      	mov	r0, r1
 8000bb8:	4611      	mov	r1, r2
 8000bba:	2200      	movs	r2, #0
 8000bbc:	602a      	str	r2, [r5, #0]
 8000bbe:	461a      	mov	r2, r3
 8000bc0:	f7ff fc1a 	bl	80003f8 <_lseek>
 8000bc4:	1c43      	adds	r3, r0, #1
 8000bc6:	d102      	bne.n	8000bce <_lseek_r+0x1e>
 8000bc8:	682b      	ldr	r3, [r5, #0]
 8000bca:	b103      	cbz	r3, 8000bce <_lseek_r+0x1e>
 8000bcc:	6023      	str	r3, [r4, #0]
 8000bce:	bd38      	pop	{r3, r4, r5, pc}
 8000bd0:	20000090 	.word	0x20000090

08000bd4 <__malloc_lock>:
 8000bd4:	4801      	ldr	r0, [pc, #4]	; (8000bdc <__malloc_lock+0x8>)
 8000bd6:	f7ff be72 	b.w	80008be <__retarget_lock_acquire_recursive>
 8000bda:	bf00      	nop
 8000bdc:	20000084 	.word	0x20000084

08000be0 <__malloc_unlock>:
 8000be0:	4801      	ldr	r0, [pc, #4]	; (8000be8 <__malloc_unlock+0x8>)
 8000be2:	f7ff be6d 	b.w	80008c0 <__retarget_lock_release_recursive>
 8000be6:	bf00      	nop
 8000be8:	20000084 	.word	0x20000084

08000bec <__sfputc_r>:
 8000bec:	6893      	ldr	r3, [r2, #8]
 8000bee:	3b01      	subs	r3, #1
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	b410      	push	{r4}
 8000bf4:	6093      	str	r3, [r2, #8]
 8000bf6:	da08      	bge.n	8000c0a <__sfputc_r+0x1e>
 8000bf8:	6994      	ldr	r4, [r2, #24]
 8000bfa:	42a3      	cmp	r3, r4
 8000bfc:	db01      	blt.n	8000c02 <__sfputc_r+0x16>
 8000bfe:	290a      	cmp	r1, #10
 8000c00:	d103      	bne.n	8000c0a <__sfputc_r+0x1e>
 8000c02:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c06:	f000 baf1 	b.w	80011ec <__swbuf_r>
 8000c0a:	6813      	ldr	r3, [r2, #0]
 8000c0c:	1c58      	adds	r0, r3, #1
 8000c0e:	6010      	str	r0, [r2, #0]
 8000c10:	7019      	strb	r1, [r3, #0]
 8000c12:	4608      	mov	r0, r1
 8000c14:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000c18:	4770      	bx	lr

08000c1a <__sfputs_r>:
 8000c1a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000c1c:	4606      	mov	r6, r0
 8000c1e:	460f      	mov	r7, r1
 8000c20:	4614      	mov	r4, r2
 8000c22:	18d5      	adds	r5, r2, r3
 8000c24:	42ac      	cmp	r4, r5
 8000c26:	d101      	bne.n	8000c2c <__sfputs_r+0x12>
 8000c28:	2000      	movs	r0, #0
 8000c2a:	e007      	b.n	8000c3c <__sfputs_r+0x22>
 8000c2c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c30:	463a      	mov	r2, r7
 8000c32:	4630      	mov	r0, r6
 8000c34:	f7ff ffda 	bl	8000bec <__sfputc_r>
 8000c38:	1c43      	adds	r3, r0, #1
 8000c3a:	d1f3      	bne.n	8000c24 <__sfputs_r+0xa>
 8000c3c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000c40 <_vfiprintf_r>:
 8000c40:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000c44:	460d      	mov	r5, r1
 8000c46:	b09d      	sub	sp, #116	; 0x74
 8000c48:	4614      	mov	r4, r2
 8000c4a:	4698      	mov	r8, r3
 8000c4c:	4606      	mov	r6, r0
 8000c4e:	b118      	cbz	r0, 8000c58 <_vfiprintf_r+0x18>
 8000c50:	6983      	ldr	r3, [r0, #24]
 8000c52:	b90b      	cbnz	r3, 8000c58 <_vfiprintf_r+0x18>
 8000c54:	f7ff fd70 	bl	8000738 <__sinit>
 8000c58:	4b89      	ldr	r3, [pc, #548]	; (8000e80 <_vfiprintf_r+0x240>)
 8000c5a:	429d      	cmp	r5, r3
 8000c5c:	d11b      	bne.n	8000c96 <_vfiprintf_r+0x56>
 8000c5e:	6875      	ldr	r5, [r6, #4]
 8000c60:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c62:	07d9      	lsls	r1, r3, #31
 8000c64:	d405      	bmi.n	8000c72 <_vfiprintf_r+0x32>
 8000c66:	89ab      	ldrh	r3, [r5, #12]
 8000c68:	059a      	lsls	r2, r3, #22
 8000c6a:	d402      	bmi.n	8000c72 <_vfiprintf_r+0x32>
 8000c6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c6e:	f7ff fe26 	bl	80008be <__retarget_lock_acquire_recursive>
 8000c72:	89ab      	ldrh	r3, [r5, #12]
 8000c74:	071b      	lsls	r3, r3, #28
 8000c76:	d501      	bpl.n	8000c7c <_vfiprintf_r+0x3c>
 8000c78:	692b      	ldr	r3, [r5, #16]
 8000c7a:	b9eb      	cbnz	r3, 8000cb8 <_vfiprintf_r+0x78>
 8000c7c:	4629      	mov	r1, r5
 8000c7e:	4630      	mov	r0, r6
 8000c80:	f000 fb06 	bl	8001290 <__swsetup_r>
 8000c84:	b1c0      	cbz	r0, 8000cb8 <_vfiprintf_r+0x78>
 8000c86:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c88:	07dc      	lsls	r4, r3, #31
 8000c8a:	d50e      	bpl.n	8000caa <_vfiprintf_r+0x6a>
 8000c8c:	f04f 30ff 	mov.w	r0, #4294967295
 8000c90:	b01d      	add	sp, #116	; 0x74
 8000c92:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000c96:	4b7b      	ldr	r3, [pc, #492]	; (8000e84 <_vfiprintf_r+0x244>)
 8000c98:	429d      	cmp	r5, r3
 8000c9a:	d101      	bne.n	8000ca0 <_vfiprintf_r+0x60>
 8000c9c:	68b5      	ldr	r5, [r6, #8]
 8000c9e:	e7df      	b.n	8000c60 <_vfiprintf_r+0x20>
 8000ca0:	4b79      	ldr	r3, [pc, #484]	; (8000e88 <_vfiprintf_r+0x248>)
 8000ca2:	429d      	cmp	r5, r3
 8000ca4:	bf08      	it	eq
 8000ca6:	68f5      	ldreq	r5, [r6, #12]
 8000ca8:	e7da      	b.n	8000c60 <_vfiprintf_r+0x20>
 8000caa:	89ab      	ldrh	r3, [r5, #12]
 8000cac:	0598      	lsls	r0, r3, #22
 8000cae:	d4ed      	bmi.n	8000c8c <_vfiprintf_r+0x4c>
 8000cb0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000cb2:	f7ff fe05 	bl	80008c0 <__retarget_lock_release_recursive>
 8000cb6:	e7e9      	b.n	8000c8c <_vfiprintf_r+0x4c>
 8000cb8:	2300      	movs	r3, #0
 8000cba:	9309      	str	r3, [sp, #36]	; 0x24
 8000cbc:	2320      	movs	r3, #32
 8000cbe:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000cc2:	f8cd 800c 	str.w	r8, [sp, #12]
 8000cc6:	2330      	movs	r3, #48	; 0x30
 8000cc8:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000e8c <_vfiprintf_r+0x24c>
 8000ccc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000cd0:	f04f 0901 	mov.w	r9, #1
 8000cd4:	4623      	mov	r3, r4
 8000cd6:	469a      	mov	sl, r3
 8000cd8:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000cdc:	b10a      	cbz	r2, 8000ce2 <_vfiprintf_r+0xa2>
 8000cde:	2a25      	cmp	r2, #37	; 0x25
 8000ce0:	d1f9      	bne.n	8000cd6 <_vfiprintf_r+0x96>
 8000ce2:	ebba 0b04 	subs.w	fp, sl, r4
 8000ce6:	d00b      	beq.n	8000d00 <_vfiprintf_r+0xc0>
 8000ce8:	465b      	mov	r3, fp
 8000cea:	4622      	mov	r2, r4
 8000cec:	4629      	mov	r1, r5
 8000cee:	4630      	mov	r0, r6
 8000cf0:	f7ff ff93 	bl	8000c1a <__sfputs_r>
 8000cf4:	3001      	adds	r0, #1
 8000cf6:	f000 80aa 	beq.w	8000e4e <_vfiprintf_r+0x20e>
 8000cfa:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000cfc:	445a      	add	r2, fp
 8000cfe:	9209      	str	r2, [sp, #36]	; 0x24
 8000d00:	f89a 3000 	ldrb.w	r3, [sl]
 8000d04:	2b00      	cmp	r3, #0
 8000d06:	f000 80a2 	beq.w	8000e4e <_vfiprintf_r+0x20e>
 8000d0a:	2300      	movs	r3, #0
 8000d0c:	f04f 32ff 	mov.w	r2, #4294967295
 8000d10:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000d14:	f10a 0a01 	add.w	sl, sl, #1
 8000d18:	9304      	str	r3, [sp, #16]
 8000d1a:	9307      	str	r3, [sp, #28]
 8000d1c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000d20:	931a      	str	r3, [sp, #104]	; 0x68
 8000d22:	4654      	mov	r4, sl
 8000d24:	2205      	movs	r2, #5
 8000d26:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d2a:	4858      	ldr	r0, [pc, #352]	; (8000e8c <_vfiprintf_r+0x24c>)
 8000d2c:	f7ff fa58 	bl	80001e0 <memchr>
 8000d30:	9a04      	ldr	r2, [sp, #16]
 8000d32:	b9d8      	cbnz	r0, 8000d6c <_vfiprintf_r+0x12c>
 8000d34:	06d1      	lsls	r1, r2, #27
 8000d36:	bf44      	itt	mi
 8000d38:	2320      	movmi	r3, #32
 8000d3a:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d3e:	0713      	lsls	r3, r2, #28
 8000d40:	bf44      	itt	mi
 8000d42:	232b      	movmi	r3, #43	; 0x2b
 8000d44:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000d48:	f89a 3000 	ldrb.w	r3, [sl]
 8000d4c:	2b2a      	cmp	r3, #42	; 0x2a
 8000d4e:	d015      	beq.n	8000d7c <_vfiprintf_r+0x13c>
 8000d50:	9a07      	ldr	r2, [sp, #28]
 8000d52:	4654      	mov	r4, sl
 8000d54:	2000      	movs	r0, #0
 8000d56:	f04f 0c0a 	mov.w	ip, #10
 8000d5a:	4621      	mov	r1, r4
 8000d5c:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000d60:	3b30      	subs	r3, #48	; 0x30
 8000d62:	2b09      	cmp	r3, #9
 8000d64:	d94e      	bls.n	8000e04 <_vfiprintf_r+0x1c4>
 8000d66:	b1b0      	cbz	r0, 8000d96 <_vfiprintf_r+0x156>
 8000d68:	9207      	str	r2, [sp, #28]
 8000d6a:	e014      	b.n	8000d96 <_vfiprintf_r+0x156>
 8000d6c:	eba0 0308 	sub.w	r3, r0, r8
 8000d70:	fa09 f303 	lsl.w	r3, r9, r3
 8000d74:	4313      	orrs	r3, r2
 8000d76:	9304      	str	r3, [sp, #16]
 8000d78:	46a2      	mov	sl, r4
 8000d7a:	e7d2      	b.n	8000d22 <_vfiprintf_r+0xe2>
 8000d7c:	9b03      	ldr	r3, [sp, #12]
 8000d7e:	1d19      	adds	r1, r3, #4
 8000d80:	681b      	ldr	r3, [r3, #0]
 8000d82:	9103      	str	r1, [sp, #12]
 8000d84:	2b00      	cmp	r3, #0
 8000d86:	bfbb      	ittet	lt
 8000d88:	425b      	neglt	r3, r3
 8000d8a:	f042 0202 	orrlt.w	r2, r2, #2
 8000d8e:	9307      	strge	r3, [sp, #28]
 8000d90:	9307      	strlt	r3, [sp, #28]
 8000d92:	bfb8      	it	lt
 8000d94:	9204      	strlt	r2, [sp, #16]
 8000d96:	7823      	ldrb	r3, [r4, #0]
 8000d98:	2b2e      	cmp	r3, #46	; 0x2e
 8000d9a:	d10c      	bne.n	8000db6 <_vfiprintf_r+0x176>
 8000d9c:	7863      	ldrb	r3, [r4, #1]
 8000d9e:	2b2a      	cmp	r3, #42	; 0x2a
 8000da0:	d135      	bne.n	8000e0e <_vfiprintf_r+0x1ce>
 8000da2:	9b03      	ldr	r3, [sp, #12]
 8000da4:	1d1a      	adds	r2, r3, #4
 8000da6:	681b      	ldr	r3, [r3, #0]
 8000da8:	9203      	str	r2, [sp, #12]
 8000daa:	2b00      	cmp	r3, #0
 8000dac:	bfb8      	it	lt
 8000dae:	f04f 33ff 	movlt.w	r3, #4294967295
 8000db2:	3402      	adds	r4, #2
 8000db4:	9305      	str	r3, [sp, #20]
 8000db6:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000e9c <_vfiprintf_r+0x25c>
 8000dba:	7821      	ldrb	r1, [r4, #0]
 8000dbc:	2203      	movs	r2, #3
 8000dbe:	4650      	mov	r0, sl
 8000dc0:	f7ff fa0e 	bl	80001e0 <memchr>
 8000dc4:	b140      	cbz	r0, 8000dd8 <_vfiprintf_r+0x198>
 8000dc6:	2340      	movs	r3, #64	; 0x40
 8000dc8:	eba0 000a 	sub.w	r0, r0, sl
 8000dcc:	fa03 f000 	lsl.w	r0, r3, r0
 8000dd0:	9b04      	ldr	r3, [sp, #16]
 8000dd2:	4303      	orrs	r3, r0
 8000dd4:	3401      	adds	r4, #1
 8000dd6:	9304      	str	r3, [sp, #16]
 8000dd8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ddc:	482c      	ldr	r0, [pc, #176]	; (8000e90 <_vfiprintf_r+0x250>)
 8000dde:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000de2:	2206      	movs	r2, #6
 8000de4:	f7ff f9fc 	bl	80001e0 <memchr>
 8000de8:	2800      	cmp	r0, #0
 8000dea:	d03f      	beq.n	8000e6c <_vfiprintf_r+0x22c>
 8000dec:	4b29      	ldr	r3, [pc, #164]	; (8000e94 <_vfiprintf_r+0x254>)
 8000dee:	bb1b      	cbnz	r3, 8000e38 <_vfiprintf_r+0x1f8>
 8000df0:	9b03      	ldr	r3, [sp, #12]
 8000df2:	3307      	adds	r3, #7
 8000df4:	f023 0307 	bic.w	r3, r3, #7
 8000df8:	3308      	adds	r3, #8
 8000dfa:	9303      	str	r3, [sp, #12]
 8000dfc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000dfe:	443b      	add	r3, r7
 8000e00:	9309      	str	r3, [sp, #36]	; 0x24
 8000e02:	e767      	b.n	8000cd4 <_vfiprintf_r+0x94>
 8000e04:	fb0c 3202 	mla	r2, ip, r2, r3
 8000e08:	460c      	mov	r4, r1
 8000e0a:	2001      	movs	r0, #1
 8000e0c:	e7a5      	b.n	8000d5a <_vfiprintf_r+0x11a>
 8000e0e:	2300      	movs	r3, #0
 8000e10:	3401      	adds	r4, #1
 8000e12:	9305      	str	r3, [sp, #20]
 8000e14:	4619      	mov	r1, r3
 8000e16:	f04f 0c0a 	mov.w	ip, #10
 8000e1a:	4620      	mov	r0, r4
 8000e1c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000e20:	3a30      	subs	r2, #48	; 0x30
 8000e22:	2a09      	cmp	r2, #9
 8000e24:	d903      	bls.n	8000e2e <_vfiprintf_r+0x1ee>
 8000e26:	2b00      	cmp	r3, #0
 8000e28:	d0c5      	beq.n	8000db6 <_vfiprintf_r+0x176>
 8000e2a:	9105      	str	r1, [sp, #20]
 8000e2c:	e7c3      	b.n	8000db6 <_vfiprintf_r+0x176>
 8000e2e:	fb0c 2101 	mla	r1, ip, r1, r2
 8000e32:	4604      	mov	r4, r0
 8000e34:	2301      	movs	r3, #1
 8000e36:	e7f0      	b.n	8000e1a <_vfiprintf_r+0x1da>
 8000e38:	ab03      	add	r3, sp, #12
 8000e3a:	9300      	str	r3, [sp, #0]
 8000e3c:	462a      	mov	r2, r5
 8000e3e:	4b16      	ldr	r3, [pc, #88]	; (8000e98 <_vfiprintf_r+0x258>)
 8000e40:	a904      	add	r1, sp, #16
 8000e42:	4630      	mov	r0, r6
 8000e44:	f3af 8000 	nop.w
 8000e48:	4607      	mov	r7, r0
 8000e4a:	1c78      	adds	r0, r7, #1
 8000e4c:	d1d6      	bne.n	8000dfc <_vfiprintf_r+0x1bc>
 8000e4e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e50:	07d9      	lsls	r1, r3, #31
 8000e52:	d405      	bmi.n	8000e60 <_vfiprintf_r+0x220>
 8000e54:	89ab      	ldrh	r3, [r5, #12]
 8000e56:	059a      	lsls	r2, r3, #22
 8000e58:	d402      	bmi.n	8000e60 <_vfiprintf_r+0x220>
 8000e5a:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000e5c:	f7ff fd30 	bl	80008c0 <__retarget_lock_release_recursive>
 8000e60:	89ab      	ldrh	r3, [r5, #12]
 8000e62:	065b      	lsls	r3, r3, #25
 8000e64:	f53f af12 	bmi.w	8000c8c <_vfiprintf_r+0x4c>
 8000e68:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000e6a:	e711      	b.n	8000c90 <_vfiprintf_r+0x50>
 8000e6c:	ab03      	add	r3, sp, #12
 8000e6e:	9300      	str	r3, [sp, #0]
 8000e70:	462a      	mov	r2, r5
 8000e72:	4b09      	ldr	r3, [pc, #36]	; (8000e98 <_vfiprintf_r+0x258>)
 8000e74:	a904      	add	r1, sp, #16
 8000e76:	4630      	mov	r0, r6
 8000e78:	f000 f880 	bl	8000f7c <_printf_i>
 8000e7c:	e7e4      	b.n	8000e48 <_vfiprintf_r+0x208>
 8000e7e:	bf00      	nop
 8000e80:	080014cc 	.word	0x080014cc
 8000e84:	080014ec 	.word	0x080014ec
 8000e88:	080014ac 	.word	0x080014ac
 8000e8c:	08001510 	.word	0x08001510
 8000e90:	0800151a 	.word	0x0800151a
 8000e94:	00000000 	.word	0x00000000
 8000e98:	08000c1b 	.word	0x08000c1b
 8000e9c:	08001516 	.word	0x08001516

08000ea0 <_printf_common>:
 8000ea0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000ea4:	4616      	mov	r6, r2
 8000ea6:	4699      	mov	r9, r3
 8000ea8:	688a      	ldr	r2, [r1, #8]
 8000eaa:	690b      	ldr	r3, [r1, #16]
 8000eac:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000eb0:	4293      	cmp	r3, r2
 8000eb2:	bfb8      	it	lt
 8000eb4:	4613      	movlt	r3, r2
 8000eb6:	6033      	str	r3, [r6, #0]
 8000eb8:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000ebc:	4607      	mov	r7, r0
 8000ebe:	460c      	mov	r4, r1
 8000ec0:	b10a      	cbz	r2, 8000ec6 <_printf_common+0x26>
 8000ec2:	3301      	adds	r3, #1
 8000ec4:	6033      	str	r3, [r6, #0]
 8000ec6:	6823      	ldr	r3, [r4, #0]
 8000ec8:	0699      	lsls	r1, r3, #26
 8000eca:	bf42      	ittt	mi
 8000ecc:	6833      	ldrmi	r3, [r6, #0]
 8000ece:	3302      	addmi	r3, #2
 8000ed0:	6033      	strmi	r3, [r6, #0]
 8000ed2:	6825      	ldr	r5, [r4, #0]
 8000ed4:	f015 0506 	ands.w	r5, r5, #6
 8000ed8:	d106      	bne.n	8000ee8 <_printf_common+0x48>
 8000eda:	f104 0a19 	add.w	sl, r4, #25
 8000ede:	68e3      	ldr	r3, [r4, #12]
 8000ee0:	6832      	ldr	r2, [r6, #0]
 8000ee2:	1a9b      	subs	r3, r3, r2
 8000ee4:	42ab      	cmp	r3, r5
 8000ee6:	dc26      	bgt.n	8000f36 <_printf_common+0x96>
 8000ee8:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000eec:	1e13      	subs	r3, r2, #0
 8000eee:	6822      	ldr	r2, [r4, #0]
 8000ef0:	bf18      	it	ne
 8000ef2:	2301      	movne	r3, #1
 8000ef4:	0692      	lsls	r2, r2, #26
 8000ef6:	d42b      	bmi.n	8000f50 <_printf_common+0xb0>
 8000ef8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000efc:	4649      	mov	r1, r9
 8000efe:	4638      	mov	r0, r7
 8000f00:	47c0      	blx	r8
 8000f02:	3001      	adds	r0, #1
 8000f04:	d01e      	beq.n	8000f44 <_printf_common+0xa4>
 8000f06:	6823      	ldr	r3, [r4, #0]
 8000f08:	68e5      	ldr	r5, [r4, #12]
 8000f0a:	6832      	ldr	r2, [r6, #0]
 8000f0c:	f003 0306 	and.w	r3, r3, #6
 8000f10:	2b04      	cmp	r3, #4
 8000f12:	bf08      	it	eq
 8000f14:	1aad      	subeq	r5, r5, r2
 8000f16:	68a3      	ldr	r3, [r4, #8]
 8000f18:	6922      	ldr	r2, [r4, #16]
 8000f1a:	bf0c      	ite	eq
 8000f1c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000f20:	2500      	movne	r5, #0
 8000f22:	4293      	cmp	r3, r2
 8000f24:	bfc4      	itt	gt
 8000f26:	1a9b      	subgt	r3, r3, r2
 8000f28:	18ed      	addgt	r5, r5, r3
 8000f2a:	2600      	movs	r6, #0
 8000f2c:	341a      	adds	r4, #26
 8000f2e:	42b5      	cmp	r5, r6
 8000f30:	d11a      	bne.n	8000f68 <_printf_common+0xc8>
 8000f32:	2000      	movs	r0, #0
 8000f34:	e008      	b.n	8000f48 <_printf_common+0xa8>
 8000f36:	2301      	movs	r3, #1
 8000f38:	4652      	mov	r2, sl
 8000f3a:	4649      	mov	r1, r9
 8000f3c:	4638      	mov	r0, r7
 8000f3e:	47c0      	blx	r8
 8000f40:	3001      	adds	r0, #1
 8000f42:	d103      	bne.n	8000f4c <_printf_common+0xac>
 8000f44:	f04f 30ff 	mov.w	r0, #4294967295
 8000f48:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f4c:	3501      	adds	r5, #1
 8000f4e:	e7c6      	b.n	8000ede <_printf_common+0x3e>
 8000f50:	18e1      	adds	r1, r4, r3
 8000f52:	1c5a      	adds	r2, r3, #1
 8000f54:	2030      	movs	r0, #48	; 0x30
 8000f56:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000f5a:	4422      	add	r2, r4
 8000f5c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000f60:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000f64:	3302      	adds	r3, #2
 8000f66:	e7c7      	b.n	8000ef8 <_printf_common+0x58>
 8000f68:	2301      	movs	r3, #1
 8000f6a:	4622      	mov	r2, r4
 8000f6c:	4649      	mov	r1, r9
 8000f6e:	4638      	mov	r0, r7
 8000f70:	47c0      	blx	r8
 8000f72:	3001      	adds	r0, #1
 8000f74:	d0e6      	beq.n	8000f44 <_printf_common+0xa4>
 8000f76:	3601      	adds	r6, #1
 8000f78:	e7d9      	b.n	8000f2e <_printf_common+0x8e>
	...

08000f7c <_printf_i>:
 8000f7c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000f80:	7e0f      	ldrb	r7, [r1, #24]
 8000f82:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000f84:	2f78      	cmp	r7, #120	; 0x78
 8000f86:	4691      	mov	r9, r2
 8000f88:	4680      	mov	r8, r0
 8000f8a:	460c      	mov	r4, r1
 8000f8c:	469a      	mov	sl, r3
 8000f8e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000f92:	d807      	bhi.n	8000fa4 <_printf_i+0x28>
 8000f94:	2f62      	cmp	r7, #98	; 0x62
 8000f96:	d80a      	bhi.n	8000fae <_printf_i+0x32>
 8000f98:	2f00      	cmp	r7, #0
 8000f9a:	f000 80d8 	beq.w	800114e <_printf_i+0x1d2>
 8000f9e:	2f58      	cmp	r7, #88	; 0x58
 8000fa0:	f000 80a3 	beq.w	80010ea <_printf_i+0x16e>
 8000fa4:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000fa8:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000fac:	e03a      	b.n	8001024 <_printf_i+0xa8>
 8000fae:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000fb2:	2b15      	cmp	r3, #21
 8000fb4:	d8f6      	bhi.n	8000fa4 <_printf_i+0x28>
 8000fb6:	a101      	add	r1, pc, #4	; (adr r1, 8000fbc <_printf_i+0x40>)
 8000fb8:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000fbc:	08001015 	.word	0x08001015
 8000fc0:	08001029 	.word	0x08001029
 8000fc4:	08000fa5 	.word	0x08000fa5
 8000fc8:	08000fa5 	.word	0x08000fa5
 8000fcc:	08000fa5 	.word	0x08000fa5
 8000fd0:	08000fa5 	.word	0x08000fa5
 8000fd4:	08001029 	.word	0x08001029
 8000fd8:	08000fa5 	.word	0x08000fa5
 8000fdc:	08000fa5 	.word	0x08000fa5
 8000fe0:	08000fa5 	.word	0x08000fa5
 8000fe4:	08000fa5 	.word	0x08000fa5
 8000fe8:	08001135 	.word	0x08001135
 8000fec:	08001059 	.word	0x08001059
 8000ff0:	08001117 	.word	0x08001117
 8000ff4:	08000fa5 	.word	0x08000fa5
 8000ff8:	08000fa5 	.word	0x08000fa5
 8000ffc:	08001157 	.word	0x08001157
 8001000:	08000fa5 	.word	0x08000fa5
 8001004:	08001059 	.word	0x08001059
 8001008:	08000fa5 	.word	0x08000fa5
 800100c:	08000fa5 	.word	0x08000fa5
 8001010:	0800111f 	.word	0x0800111f
 8001014:	682b      	ldr	r3, [r5, #0]
 8001016:	1d1a      	adds	r2, r3, #4
 8001018:	681b      	ldr	r3, [r3, #0]
 800101a:	602a      	str	r2, [r5, #0]
 800101c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001020:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001024:	2301      	movs	r3, #1
 8001026:	e0a3      	b.n	8001170 <_printf_i+0x1f4>
 8001028:	6820      	ldr	r0, [r4, #0]
 800102a:	6829      	ldr	r1, [r5, #0]
 800102c:	0606      	lsls	r6, r0, #24
 800102e:	f101 0304 	add.w	r3, r1, #4
 8001032:	d50a      	bpl.n	800104a <_printf_i+0xce>
 8001034:	680e      	ldr	r6, [r1, #0]
 8001036:	602b      	str	r3, [r5, #0]
 8001038:	2e00      	cmp	r6, #0
 800103a:	da03      	bge.n	8001044 <_printf_i+0xc8>
 800103c:	232d      	movs	r3, #45	; 0x2d
 800103e:	4276      	negs	r6, r6
 8001040:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001044:	485e      	ldr	r0, [pc, #376]	; (80011c0 <_printf_i+0x244>)
 8001046:	230a      	movs	r3, #10
 8001048:	e019      	b.n	800107e <_printf_i+0x102>
 800104a:	680e      	ldr	r6, [r1, #0]
 800104c:	602b      	str	r3, [r5, #0]
 800104e:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001052:	bf18      	it	ne
 8001054:	b236      	sxthne	r6, r6
 8001056:	e7ef      	b.n	8001038 <_printf_i+0xbc>
 8001058:	682b      	ldr	r3, [r5, #0]
 800105a:	6820      	ldr	r0, [r4, #0]
 800105c:	1d19      	adds	r1, r3, #4
 800105e:	6029      	str	r1, [r5, #0]
 8001060:	0601      	lsls	r1, r0, #24
 8001062:	d501      	bpl.n	8001068 <_printf_i+0xec>
 8001064:	681e      	ldr	r6, [r3, #0]
 8001066:	e002      	b.n	800106e <_printf_i+0xf2>
 8001068:	0646      	lsls	r6, r0, #25
 800106a:	d5fb      	bpl.n	8001064 <_printf_i+0xe8>
 800106c:	881e      	ldrh	r6, [r3, #0]
 800106e:	4854      	ldr	r0, [pc, #336]	; (80011c0 <_printf_i+0x244>)
 8001070:	2f6f      	cmp	r7, #111	; 0x6f
 8001072:	bf0c      	ite	eq
 8001074:	2308      	moveq	r3, #8
 8001076:	230a      	movne	r3, #10
 8001078:	2100      	movs	r1, #0
 800107a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800107e:	6865      	ldr	r5, [r4, #4]
 8001080:	60a5      	str	r5, [r4, #8]
 8001082:	2d00      	cmp	r5, #0
 8001084:	bfa2      	ittt	ge
 8001086:	6821      	ldrge	r1, [r4, #0]
 8001088:	f021 0104 	bicge.w	r1, r1, #4
 800108c:	6021      	strge	r1, [r4, #0]
 800108e:	b90e      	cbnz	r6, 8001094 <_printf_i+0x118>
 8001090:	2d00      	cmp	r5, #0
 8001092:	d04d      	beq.n	8001130 <_printf_i+0x1b4>
 8001094:	4615      	mov	r5, r2
 8001096:	fbb6 f1f3 	udiv	r1, r6, r3
 800109a:	fb03 6711 	mls	r7, r3, r1, r6
 800109e:	5dc7      	ldrb	r7, [r0, r7]
 80010a0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80010a4:	4637      	mov	r7, r6
 80010a6:	42bb      	cmp	r3, r7
 80010a8:	460e      	mov	r6, r1
 80010aa:	d9f4      	bls.n	8001096 <_printf_i+0x11a>
 80010ac:	2b08      	cmp	r3, #8
 80010ae:	d10b      	bne.n	80010c8 <_printf_i+0x14c>
 80010b0:	6823      	ldr	r3, [r4, #0]
 80010b2:	07de      	lsls	r6, r3, #31
 80010b4:	d508      	bpl.n	80010c8 <_printf_i+0x14c>
 80010b6:	6923      	ldr	r3, [r4, #16]
 80010b8:	6861      	ldr	r1, [r4, #4]
 80010ba:	4299      	cmp	r1, r3
 80010bc:	bfde      	ittt	le
 80010be:	2330      	movle	r3, #48	; 0x30
 80010c0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80010c4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80010c8:	1b52      	subs	r2, r2, r5
 80010ca:	6122      	str	r2, [r4, #16]
 80010cc:	f8cd a000 	str.w	sl, [sp]
 80010d0:	464b      	mov	r3, r9
 80010d2:	aa03      	add	r2, sp, #12
 80010d4:	4621      	mov	r1, r4
 80010d6:	4640      	mov	r0, r8
 80010d8:	f7ff fee2 	bl	8000ea0 <_printf_common>
 80010dc:	3001      	adds	r0, #1
 80010de:	d14c      	bne.n	800117a <_printf_i+0x1fe>
 80010e0:	f04f 30ff 	mov.w	r0, #4294967295
 80010e4:	b004      	add	sp, #16
 80010e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010ea:	4835      	ldr	r0, [pc, #212]	; (80011c0 <_printf_i+0x244>)
 80010ec:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 80010f0:	6829      	ldr	r1, [r5, #0]
 80010f2:	6823      	ldr	r3, [r4, #0]
 80010f4:	f851 6b04 	ldr.w	r6, [r1], #4
 80010f8:	6029      	str	r1, [r5, #0]
 80010fa:	061d      	lsls	r5, r3, #24
 80010fc:	d514      	bpl.n	8001128 <_printf_i+0x1ac>
 80010fe:	07df      	lsls	r7, r3, #31
 8001100:	bf44      	itt	mi
 8001102:	f043 0320 	orrmi.w	r3, r3, #32
 8001106:	6023      	strmi	r3, [r4, #0]
 8001108:	b91e      	cbnz	r6, 8001112 <_printf_i+0x196>
 800110a:	6823      	ldr	r3, [r4, #0]
 800110c:	f023 0320 	bic.w	r3, r3, #32
 8001110:	6023      	str	r3, [r4, #0]
 8001112:	2310      	movs	r3, #16
 8001114:	e7b0      	b.n	8001078 <_printf_i+0xfc>
 8001116:	6823      	ldr	r3, [r4, #0]
 8001118:	f043 0320 	orr.w	r3, r3, #32
 800111c:	6023      	str	r3, [r4, #0]
 800111e:	2378      	movs	r3, #120	; 0x78
 8001120:	4828      	ldr	r0, [pc, #160]	; (80011c4 <_printf_i+0x248>)
 8001122:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001126:	e7e3      	b.n	80010f0 <_printf_i+0x174>
 8001128:	0659      	lsls	r1, r3, #25
 800112a:	bf48      	it	mi
 800112c:	b2b6      	uxthmi	r6, r6
 800112e:	e7e6      	b.n	80010fe <_printf_i+0x182>
 8001130:	4615      	mov	r5, r2
 8001132:	e7bb      	b.n	80010ac <_printf_i+0x130>
 8001134:	682b      	ldr	r3, [r5, #0]
 8001136:	6826      	ldr	r6, [r4, #0]
 8001138:	6961      	ldr	r1, [r4, #20]
 800113a:	1d18      	adds	r0, r3, #4
 800113c:	6028      	str	r0, [r5, #0]
 800113e:	0635      	lsls	r5, r6, #24
 8001140:	681b      	ldr	r3, [r3, #0]
 8001142:	d501      	bpl.n	8001148 <_printf_i+0x1cc>
 8001144:	6019      	str	r1, [r3, #0]
 8001146:	e002      	b.n	800114e <_printf_i+0x1d2>
 8001148:	0670      	lsls	r0, r6, #25
 800114a:	d5fb      	bpl.n	8001144 <_printf_i+0x1c8>
 800114c:	8019      	strh	r1, [r3, #0]
 800114e:	2300      	movs	r3, #0
 8001150:	6123      	str	r3, [r4, #16]
 8001152:	4615      	mov	r5, r2
 8001154:	e7ba      	b.n	80010cc <_printf_i+0x150>
 8001156:	682b      	ldr	r3, [r5, #0]
 8001158:	1d1a      	adds	r2, r3, #4
 800115a:	602a      	str	r2, [r5, #0]
 800115c:	681d      	ldr	r5, [r3, #0]
 800115e:	6862      	ldr	r2, [r4, #4]
 8001160:	2100      	movs	r1, #0
 8001162:	4628      	mov	r0, r5
 8001164:	f7ff f83c 	bl	80001e0 <memchr>
 8001168:	b108      	cbz	r0, 800116e <_printf_i+0x1f2>
 800116a:	1b40      	subs	r0, r0, r5
 800116c:	6060      	str	r0, [r4, #4]
 800116e:	6863      	ldr	r3, [r4, #4]
 8001170:	6123      	str	r3, [r4, #16]
 8001172:	2300      	movs	r3, #0
 8001174:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001178:	e7a8      	b.n	80010cc <_printf_i+0x150>
 800117a:	6923      	ldr	r3, [r4, #16]
 800117c:	462a      	mov	r2, r5
 800117e:	4649      	mov	r1, r9
 8001180:	4640      	mov	r0, r8
 8001182:	47d0      	blx	sl
 8001184:	3001      	adds	r0, #1
 8001186:	d0ab      	beq.n	80010e0 <_printf_i+0x164>
 8001188:	6823      	ldr	r3, [r4, #0]
 800118a:	079b      	lsls	r3, r3, #30
 800118c:	d413      	bmi.n	80011b6 <_printf_i+0x23a>
 800118e:	68e0      	ldr	r0, [r4, #12]
 8001190:	9b03      	ldr	r3, [sp, #12]
 8001192:	4298      	cmp	r0, r3
 8001194:	bfb8      	it	lt
 8001196:	4618      	movlt	r0, r3
 8001198:	e7a4      	b.n	80010e4 <_printf_i+0x168>
 800119a:	2301      	movs	r3, #1
 800119c:	4632      	mov	r2, r6
 800119e:	4649      	mov	r1, r9
 80011a0:	4640      	mov	r0, r8
 80011a2:	47d0      	blx	sl
 80011a4:	3001      	adds	r0, #1
 80011a6:	d09b      	beq.n	80010e0 <_printf_i+0x164>
 80011a8:	3501      	adds	r5, #1
 80011aa:	68e3      	ldr	r3, [r4, #12]
 80011ac:	9903      	ldr	r1, [sp, #12]
 80011ae:	1a5b      	subs	r3, r3, r1
 80011b0:	42ab      	cmp	r3, r5
 80011b2:	dcf2      	bgt.n	800119a <_printf_i+0x21e>
 80011b4:	e7eb      	b.n	800118e <_printf_i+0x212>
 80011b6:	2500      	movs	r5, #0
 80011b8:	f104 0619 	add.w	r6, r4, #25
 80011bc:	e7f5      	b.n	80011aa <_printf_i+0x22e>
 80011be:	bf00      	nop
 80011c0:	08001521 	.word	0x08001521
 80011c4:	08001532 	.word	0x08001532

080011c8 <_read_r>:
 80011c8:	b538      	push	{r3, r4, r5, lr}
 80011ca:	4d07      	ldr	r5, [pc, #28]	; (80011e8 <_read_r+0x20>)
 80011cc:	4604      	mov	r4, r0
 80011ce:	4608      	mov	r0, r1
 80011d0:	4611      	mov	r1, r2
 80011d2:	2200      	movs	r2, #0
 80011d4:	602a      	str	r2, [r5, #0]
 80011d6:	461a      	mov	r2, r3
 80011d8:	f7ff f8ae 	bl	8000338 <_read>
 80011dc:	1c43      	adds	r3, r0, #1
 80011de:	d102      	bne.n	80011e6 <_read_r+0x1e>
 80011e0:	682b      	ldr	r3, [r5, #0]
 80011e2:	b103      	cbz	r3, 80011e6 <_read_r+0x1e>
 80011e4:	6023      	str	r3, [r4, #0]
 80011e6:	bd38      	pop	{r3, r4, r5, pc}
 80011e8:	20000090 	.word	0x20000090

080011ec <__swbuf_r>:
 80011ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80011ee:	460e      	mov	r6, r1
 80011f0:	4614      	mov	r4, r2
 80011f2:	4605      	mov	r5, r0
 80011f4:	b118      	cbz	r0, 80011fe <__swbuf_r+0x12>
 80011f6:	6983      	ldr	r3, [r0, #24]
 80011f8:	b90b      	cbnz	r3, 80011fe <__swbuf_r+0x12>
 80011fa:	f7ff fa9d 	bl	8000738 <__sinit>
 80011fe:	4b21      	ldr	r3, [pc, #132]	; (8001284 <__swbuf_r+0x98>)
 8001200:	429c      	cmp	r4, r3
 8001202:	d12b      	bne.n	800125c <__swbuf_r+0x70>
 8001204:	686c      	ldr	r4, [r5, #4]
 8001206:	69a3      	ldr	r3, [r4, #24]
 8001208:	60a3      	str	r3, [r4, #8]
 800120a:	89a3      	ldrh	r3, [r4, #12]
 800120c:	071a      	lsls	r2, r3, #28
 800120e:	d52f      	bpl.n	8001270 <__swbuf_r+0x84>
 8001210:	6923      	ldr	r3, [r4, #16]
 8001212:	b36b      	cbz	r3, 8001270 <__swbuf_r+0x84>
 8001214:	6923      	ldr	r3, [r4, #16]
 8001216:	6820      	ldr	r0, [r4, #0]
 8001218:	1ac0      	subs	r0, r0, r3
 800121a:	6963      	ldr	r3, [r4, #20]
 800121c:	b2f6      	uxtb	r6, r6
 800121e:	4283      	cmp	r3, r0
 8001220:	4637      	mov	r7, r6
 8001222:	dc04      	bgt.n	800122e <__swbuf_r+0x42>
 8001224:	4621      	mov	r1, r4
 8001226:	4628      	mov	r0, r5
 8001228:	f7ff f9e0 	bl	80005ec <_fflush_r>
 800122c:	bb30      	cbnz	r0, 800127c <__swbuf_r+0x90>
 800122e:	68a3      	ldr	r3, [r4, #8]
 8001230:	3b01      	subs	r3, #1
 8001232:	60a3      	str	r3, [r4, #8]
 8001234:	6823      	ldr	r3, [r4, #0]
 8001236:	1c5a      	adds	r2, r3, #1
 8001238:	6022      	str	r2, [r4, #0]
 800123a:	701e      	strb	r6, [r3, #0]
 800123c:	6963      	ldr	r3, [r4, #20]
 800123e:	3001      	adds	r0, #1
 8001240:	4283      	cmp	r3, r0
 8001242:	d004      	beq.n	800124e <__swbuf_r+0x62>
 8001244:	89a3      	ldrh	r3, [r4, #12]
 8001246:	07db      	lsls	r3, r3, #31
 8001248:	d506      	bpl.n	8001258 <__swbuf_r+0x6c>
 800124a:	2e0a      	cmp	r6, #10
 800124c:	d104      	bne.n	8001258 <__swbuf_r+0x6c>
 800124e:	4621      	mov	r1, r4
 8001250:	4628      	mov	r0, r5
 8001252:	f7ff f9cb 	bl	80005ec <_fflush_r>
 8001256:	b988      	cbnz	r0, 800127c <__swbuf_r+0x90>
 8001258:	4638      	mov	r0, r7
 800125a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800125c:	4b0a      	ldr	r3, [pc, #40]	; (8001288 <__swbuf_r+0x9c>)
 800125e:	429c      	cmp	r4, r3
 8001260:	d101      	bne.n	8001266 <__swbuf_r+0x7a>
 8001262:	68ac      	ldr	r4, [r5, #8]
 8001264:	e7cf      	b.n	8001206 <__swbuf_r+0x1a>
 8001266:	4b09      	ldr	r3, [pc, #36]	; (800128c <__swbuf_r+0xa0>)
 8001268:	429c      	cmp	r4, r3
 800126a:	bf08      	it	eq
 800126c:	68ec      	ldreq	r4, [r5, #12]
 800126e:	e7ca      	b.n	8001206 <__swbuf_r+0x1a>
 8001270:	4621      	mov	r1, r4
 8001272:	4628      	mov	r0, r5
 8001274:	f000 f80c 	bl	8001290 <__swsetup_r>
 8001278:	2800      	cmp	r0, #0
 800127a:	d0cb      	beq.n	8001214 <__swbuf_r+0x28>
 800127c:	f04f 37ff 	mov.w	r7, #4294967295
 8001280:	e7ea      	b.n	8001258 <__swbuf_r+0x6c>
 8001282:	bf00      	nop
 8001284:	080014cc 	.word	0x080014cc
 8001288:	080014ec 	.word	0x080014ec
 800128c:	080014ac 	.word	0x080014ac

08001290 <__swsetup_r>:
 8001290:	4b32      	ldr	r3, [pc, #200]	; (800135c <__swsetup_r+0xcc>)
 8001292:	b570      	push	{r4, r5, r6, lr}
 8001294:	681d      	ldr	r5, [r3, #0]
 8001296:	4606      	mov	r6, r0
 8001298:	460c      	mov	r4, r1
 800129a:	b125      	cbz	r5, 80012a6 <__swsetup_r+0x16>
 800129c:	69ab      	ldr	r3, [r5, #24]
 800129e:	b913      	cbnz	r3, 80012a6 <__swsetup_r+0x16>
 80012a0:	4628      	mov	r0, r5
 80012a2:	f7ff fa49 	bl	8000738 <__sinit>
 80012a6:	4b2e      	ldr	r3, [pc, #184]	; (8001360 <__swsetup_r+0xd0>)
 80012a8:	429c      	cmp	r4, r3
 80012aa:	d10f      	bne.n	80012cc <__swsetup_r+0x3c>
 80012ac:	686c      	ldr	r4, [r5, #4]
 80012ae:	89a3      	ldrh	r3, [r4, #12]
 80012b0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80012b4:	0719      	lsls	r1, r3, #28
 80012b6:	d42c      	bmi.n	8001312 <__swsetup_r+0x82>
 80012b8:	06dd      	lsls	r5, r3, #27
 80012ba:	d411      	bmi.n	80012e0 <__swsetup_r+0x50>
 80012bc:	2309      	movs	r3, #9
 80012be:	6033      	str	r3, [r6, #0]
 80012c0:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 80012c4:	81a3      	strh	r3, [r4, #12]
 80012c6:	f04f 30ff 	mov.w	r0, #4294967295
 80012ca:	e03e      	b.n	800134a <__swsetup_r+0xba>
 80012cc:	4b25      	ldr	r3, [pc, #148]	; (8001364 <__swsetup_r+0xd4>)
 80012ce:	429c      	cmp	r4, r3
 80012d0:	d101      	bne.n	80012d6 <__swsetup_r+0x46>
 80012d2:	68ac      	ldr	r4, [r5, #8]
 80012d4:	e7eb      	b.n	80012ae <__swsetup_r+0x1e>
 80012d6:	4b24      	ldr	r3, [pc, #144]	; (8001368 <__swsetup_r+0xd8>)
 80012d8:	429c      	cmp	r4, r3
 80012da:	bf08      	it	eq
 80012dc:	68ec      	ldreq	r4, [r5, #12]
 80012de:	e7e6      	b.n	80012ae <__swsetup_r+0x1e>
 80012e0:	0758      	lsls	r0, r3, #29
 80012e2:	d512      	bpl.n	800130a <__swsetup_r+0x7a>
 80012e4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012e6:	b141      	cbz	r1, 80012fa <__swsetup_r+0x6a>
 80012e8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012ec:	4299      	cmp	r1, r3
 80012ee:	d002      	beq.n	80012f6 <__swsetup_r+0x66>
 80012f0:	4630      	mov	r0, r6
 80012f2:	f7ff faef 	bl	80008d4 <_free_r>
 80012f6:	2300      	movs	r3, #0
 80012f8:	6363      	str	r3, [r4, #52]	; 0x34
 80012fa:	89a3      	ldrh	r3, [r4, #12]
 80012fc:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001300:	81a3      	strh	r3, [r4, #12]
 8001302:	2300      	movs	r3, #0
 8001304:	6063      	str	r3, [r4, #4]
 8001306:	6923      	ldr	r3, [r4, #16]
 8001308:	6023      	str	r3, [r4, #0]
 800130a:	89a3      	ldrh	r3, [r4, #12]
 800130c:	f043 0308 	orr.w	r3, r3, #8
 8001310:	81a3      	strh	r3, [r4, #12]
 8001312:	6923      	ldr	r3, [r4, #16]
 8001314:	b94b      	cbnz	r3, 800132a <__swsetup_r+0x9a>
 8001316:	89a3      	ldrh	r3, [r4, #12]
 8001318:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800131c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001320:	d003      	beq.n	800132a <__swsetup_r+0x9a>
 8001322:	4621      	mov	r1, r4
 8001324:	4630      	mov	r0, r6
 8001326:	f000 f847 	bl	80013b8 <__smakebuf_r>
 800132a:	89a0      	ldrh	r0, [r4, #12]
 800132c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001330:	f010 0301 	ands.w	r3, r0, #1
 8001334:	d00a      	beq.n	800134c <__swsetup_r+0xbc>
 8001336:	2300      	movs	r3, #0
 8001338:	60a3      	str	r3, [r4, #8]
 800133a:	6963      	ldr	r3, [r4, #20]
 800133c:	425b      	negs	r3, r3
 800133e:	61a3      	str	r3, [r4, #24]
 8001340:	6923      	ldr	r3, [r4, #16]
 8001342:	b943      	cbnz	r3, 8001356 <__swsetup_r+0xc6>
 8001344:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8001348:	d1ba      	bne.n	80012c0 <__swsetup_r+0x30>
 800134a:	bd70      	pop	{r4, r5, r6, pc}
 800134c:	0781      	lsls	r1, r0, #30
 800134e:	bf58      	it	pl
 8001350:	6963      	ldrpl	r3, [r4, #20]
 8001352:	60a3      	str	r3, [r4, #8]
 8001354:	e7f4      	b.n	8001340 <__swsetup_r+0xb0>
 8001356:	2000      	movs	r0, #0
 8001358:	e7f7      	b.n	800134a <__swsetup_r+0xba>
 800135a:	bf00      	nop
 800135c:	20000000 	.word	0x20000000
 8001360:	080014cc 	.word	0x080014cc
 8001364:	080014ec 	.word	0x080014ec
 8001368:	080014ac 	.word	0x080014ac

0800136c <__swhatbuf_r>:
 800136c:	b570      	push	{r4, r5, r6, lr}
 800136e:	460e      	mov	r6, r1
 8001370:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001374:	2900      	cmp	r1, #0
 8001376:	b096      	sub	sp, #88	; 0x58
 8001378:	4614      	mov	r4, r2
 800137a:	461d      	mov	r5, r3
 800137c:	da08      	bge.n	8001390 <__swhatbuf_r+0x24>
 800137e:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8001382:	2200      	movs	r2, #0
 8001384:	602a      	str	r2, [r5, #0]
 8001386:	061a      	lsls	r2, r3, #24
 8001388:	d410      	bmi.n	80013ac <__swhatbuf_r+0x40>
 800138a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800138e:	e00e      	b.n	80013ae <__swhatbuf_r+0x42>
 8001390:	466a      	mov	r2, sp
 8001392:	f000 f851 	bl	8001438 <_fstat_r>
 8001396:	2800      	cmp	r0, #0
 8001398:	dbf1      	blt.n	800137e <__swhatbuf_r+0x12>
 800139a:	9a01      	ldr	r2, [sp, #4]
 800139c:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80013a0:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80013a4:	425a      	negs	r2, r3
 80013a6:	415a      	adcs	r2, r3
 80013a8:	602a      	str	r2, [r5, #0]
 80013aa:	e7ee      	b.n	800138a <__swhatbuf_r+0x1e>
 80013ac:	2340      	movs	r3, #64	; 0x40
 80013ae:	2000      	movs	r0, #0
 80013b0:	6023      	str	r3, [r4, #0]
 80013b2:	b016      	add	sp, #88	; 0x58
 80013b4:	bd70      	pop	{r4, r5, r6, pc}
	...

080013b8 <__smakebuf_r>:
 80013b8:	898b      	ldrh	r3, [r1, #12]
 80013ba:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80013bc:	079d      	lsls	r5, r3, #30
 80013be:	4606      	mov	r6, r0
 80013c0:	460c      	mov	r4, r1
 80013c2:	d507      	bpl.n	80013d4 <__smakebuf_r+0x1c>
 80013c4:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80013c8:	6023      	str	r3, [r4, #0]
 80013ca:	6123      	str	r3, [r4, #16]
 80013cc:	2301      	movs	r3, #1
 80013ce:	6163      	str	r3, [r4, #20]
 80013d0:	b002      	add	sp, #8
 80013d2:	bd70      	pop	{r4, r5, r6, pc}
 80013d4:	ab01      	add	r3, sp, #4
 80013d6:	466a      	mov	r2, sp
 80013d8:	f7ff ffc8 	bl	800136c <__swhatbuf_r>
 80013dc:	9900      	ldr	r1, [sp, #0]
 80013de:	4605      	mov	r5, r0
 80013e0:	4630      	mov	r0, r6
 80013e2:	f7ff fae3 	bl	80009ac <_malloc_r>
 80013e6:	b948      	cbnz	r0, 80013fc <__smakebuf_r+0x44>
 80013e8:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80013ec:	059a      	lsls	r2, r3, #22
 80013ee:	d4ef      	bmi.n	80013d0 <__smakebuf_r+0x18>
 80013f0:	f023 0303 	bic.w	r3, r3, #3
 80013f4:	f043 0302 	orr.w	r3, r3, #2
 80013f8:	81a3      	strh	r3, [r4, #12]
 80013fa:	e7e3      	b.n	80013c4 <__smakebuf_r+0xc>
 80013fc:	4b0d      	ldr	r3, [pc, #52]	; (8001434 <__smakebuf_r+0x7c>)
 80013fe:	62b3      	str	r3, [r6, #40]	; 0x28
 8001400:	89a3      	ldrh	r3, [r4, #12]
 8001402:	6020      	str	r0, [r4, #0]
 8001404:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001408:	81a3      	strh	r3, [r4, #12]
 800140a:	9b00      	ldr	r3, [sp, #0]
 800140c:	6163      	str	r3, [r4, #20]
 800140e:	9b01      	ldr	r3, [sp, #4]
 8001410:	6120      	str	r0, [r4, #16]
 8001412:	b15b      	cbz	r3, 800142c <__smakebuf_r+0x74>
 8001414:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001418:	4630      	mov	r0, r6
 800141a:	f000 f81f 	bl	800145c <_isatty_r>
 800141e:	b128      	cbz	r0, 800142c <__smakebuf_r+0x74>
 8001420:	89a3      	ldrh	r3, [r4, #12]
 8001422:	f023 0303 	bic.w	r3, r3, #3
 8001426:	f043 0301 	orr.w	r3, r3, #1
 800142a:	81a3      	strh	r3, [r4, #12]
 800142c:	89a0      	ldrh	r0, [r4, #12]
 800142e:	4305      	orrs	r5, r0
 8001430:	81a5      	strh	r5, [r4, #12]
 8001432:	e7cd      	b.n	80013d0 <__smakebuf_r+0x18>
 8001434:	080006d1 	.word	0x080006d1

08001438 <_fstat_r>:
 8001438:	b538      	push	{r3, r4, r5, lr}
 800143a:	4d07      	ldr	r5, [pc, #28]	; (8001458 <_fstat_r+0x20>)
 800143c:	2300      	movs	r3, #0
 800143e:	4604      	mov	r4, r0
 8001440:	4608      	mov	r0, r1
 8001442:	4611      	mov	r1, r2
 8001444:	602b      	str	r3, [r5, #0]
 8001446:	f7fe ffbc 	bl	80003c2 <_fstat>
 800144a:	1c43      	adds	r3, r0, #1
 800144c:	d102      	bne.n	8001454 <_fstat_r+0x1c>
 800144e:	682b      	ldr	r3, [r5, #0]
 8001450:	b103      	cbz	r3, 8001454 <_fstat_r+0x1c>
 8001452:	6023      	str	r3, [r4, #0]
 8001454:	bd38      	pop	{r3, r4, r5, pc}
 8001456:	bf00      	nop
 8001458:	20000090 	.word	0x20000090

0800145c <_isatty_r>:
 800145c:	b538      	push	{r3, r4, r5, lr}
 800145e:	4d06      	ldr	r5, [pc, #24]	; (8001478 <_isatty_r+0x1c>)
 8001460:	2300      	movs	r3, #0
 8001462:	4604      	mov	r4, r0
 8001464:	4608      	mov	r0, r1
 8001466:	602b      	str	r3, [r5, #0]
 8001468:	f7fe ffbb 	bl	80003e2 <_isatty>
 800146c:	1c43      	adds	r3, r0, #1
 800146e:	d102      	bne.n	8001476 <_isatty_r+0x1a>
 8001470:	682b      	ldr	r3, [r5, #0]
 8001472:	b103      	cbz	r3, 8001476 <_isatty_r+0x1a>
 8001474:	6023      	str	r3, [r4, #0]
 8001476:	bd38      	pop	{r3, r4, r5, pc}
 8001478:	20000090 	.word	0x20000090

0800147c <_init>:
 800147c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800147e:	bf00      	nop
 8001480:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001482:	bc08      	pop	{r3}
 8001484:	469e      	mov	lr, r3
 8001486:	4770      	bx	lr

08001488 <_fini>:
 8001488:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148a:	bf00      	nop
 800148c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800148e:	bc08      	pop	{r3}
 8001490:	469e      	mov	lr, r3
 8001492:	4770      	bx	lr
