
UART Interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001440  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000084  080015e0  080015e0  000025e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001664  08001664  00003088  2**0
                  CONTENTS
  4 .ARM          00000008  08001664  08001664  00002664  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800166c  0800166c  00003088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800166c  0800166c  0000266c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001670  08001670  00002670  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000088  20000000  08001674  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000088  080016fc  00003088  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001f4  080016fc  000031f4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00003088  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a82  00000000  00000000  000030b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000003d8  00000000  00000000  00003b3a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000138  00000000  00000000  00003f18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000d7  00000000  00000000  00004050  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000029b1  00000000  00000000  00004127  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001416  00000000  00000000  00006ad8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000981e  00000000  00000000  00007eee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0001170c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bcc  00000000  00000000  00011750  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000096  00000000  00000000  0001231c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000088 	.word	0x20000088
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080015c8 	.word	0x080015c8

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000008c 	.word	0x2000008c
 80001dc:	080015c8 	.word	0x080015c8

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <Uart_Init>:
void Uart_Write(int ch);
char Uart_Read(void);


void Uart_Init(void)
{
 8000280:	b480      	push	{r7}
 8000282:	af00      	add	r7, sp, #0
	//1) Enable the clock access for GPIOA

	  *pAHB1ENR   |=(1U<<0);
 8000284:	4b58      	ldr	r3, [pc, #352]	@ (80003e8 <Uart_Init+0x168>)
 8000286:	681b      	ldr	r3, [r3, #0]
 8000288:	681a      	ldr	r2, [r3, #0]
 800028a:	4b57      	ldr	r3, [pc, #348]	@ (80003e8 <Uart_Init+0x168>)
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	f042 0201 	orr.w	r2, r2, #1
 8000292:	601a      	str	r2, [r3, #0]

	//2) Enable the clock access for usart2
	  *pAPB1ENR  |=(1U<<17);
 8000294:	4b55      	ldr	r3, [pc, #340]	@ (80003ec <Uart_Init+0x16c>)
 8000296:	681b      	ldr	r3, [r3, #0]
 8000298:	681a      	ldr	r2, [r3, #0]
 800029a:	4b54      	ldr	r3, [pc, #336]	@ (80003ec <Uart_Init+0x16c>)
 800029c:	681b      	ldr	r3, [r3, #0]
 800029e:	f442 3200 	orr.w	r2, r2, #131072	@ 0x20000
 80002a2:	601a      	str	r2, [r3, #0]
	//3)Configure the gpio MODE REGISTERS to alt function
	  //SET PA2 AS ALT FUNC
	  *pGPIOAMODER  &=~(1U<<4);
 80002a4:	4b52      	ldr	r3, [pc, #328]	@ (80003f0 <Uart_Init+0x170>)
 80002a6:	681b      	ldr	r3, [r3, #0]
 80002a8:	681a      	ldr	r2, [r3, #0]
 80002aa:	4b51      	ldr	r3, [pc, #324]	@ (80003f0 <Uart_Init+0x170>)
 80002ac:	681b      	ldr	r3, [r3, #0]
 80002ae:	f022 0210 	bic.w	r2, r2, #16
 80002b2:	601a      	str	r2, [r3, #0]
	  *pGPIOAMODER   |=(1U<<5);
 80002b4:	4b4e      	ldr	r3, [pc, #312]	@ (80003f0 <Uart_Init+0x170>)
 80002b6:	681b      	ldr	r3, [r3, #0]
 80002b8:	681a      	ldr	r2, [r3, #0]
 80002ba:	4b4d      	ldr	r3, [pc, #308]	@ (80003f0 <Uart_Init+0x170>)
 80002bc:	681b      	ldr	r3, [r3, #0]
 80002be:	f042 0220 	orr.w	r2, r2, #32
 80002c2:	601a      	str	r2, [r3, #0]
	  //SET PA3 AS ALT FUNC
	  *pGPIOAMODER  &=~(1U<<6);
 80002c4:	4b4a      	ldr	r3, [pc, #296]	@ (80003f0 <Uart_Init+0x170>)
 80002c6:	681b      	ldr	r3, [r3, #0]
 80002c8:	681a      	ldr	r2, [r3, #0]
 80002ca:	4b49      	ldr	r3, [pc, #292]	@ (80003f0 <Uart_Init+0x170>)
 80002cc:	681b      	ldr	r3, [r3, #0]
 80002ce:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 80002d2:	601a      	str	r2, [r3, #0]
	  *pGPIOAMODER   |=(1U<<7);
 80002d4:	4b46      	ldr	r3, [pc, #280]	@ (80003f0 <Uart_Init+0x170>)
 80002d6:	681b      	ldr	r3, [r3, #0]
 80002d8:	681a      	ldr	r2, [r3, #0]
 80002da:	4b45      	ldr	r3, [pc, #276]	@ (80003f0 <Uart_Init+0x170>)
 80002dc:	681b      	ldr	r3, [r3, #0]
 80002de:	f042 0280 	orr.w	r2, r2, #128	@ 0x80
 80002e2:	601a      	str	r2, [r3, #0]


	//4)Configure the gpio to o/p function
	  //SET PA5 AS 0/P
	   *pGPIOAMODER   |=(1U<<10);
 80002e4:	4b42      	ldr	r3, [pc, #264]	@ (80003f0 <Uart_Init+0x170>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	681a      	ldr	r2, [r3, #0]
 80002ea:	4b41      	ldr	r3, [pc, #260]	@ (80003f0 <Uart_Init+0x170>)
 80002ec:	681b      	ldr	r3, [r3, #0]
 80002ee:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 80002f2:	601a      	str	r2, [r3, #0]
	  *pGPIOAMODER  &=~(1U<<11);
 80002f4:	4b3e      	ldr	r3, [pc, #248]	@ (80003f0 <Uart_Init+0x170>)
 80002f6:	681b      	ldr	r3, [r3, #0]
 80002f8:	681a      	ldr	r2, [r3, #0]
 80002fa:	4b3d      	ldr	r3, [pc, #244]	@ (80003f0 <Uart_Init+0x170>)
 80002fc:	681b      	ldr	r3, [r3, #0]
 80002fe:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8000302:	601a      	str	r2, [r3, #0]

	//5) configure the ALT FUNCTION to AFRL FOR PA2 and PA3
	  *pGPIOAAFRL |=(1U<<8);
 8000304:	4b3b      	ldr	r3, [pc, #236]	@ (80003f4 <Uart_Init+0x174>)
 8000306:	681b      	ldr	r3, [r3, #0]
 8000308:	681a      	ldr	r2, [r3, #0]
 800030a:	4b3a      	ldr	r3, [pc, #232]	@ (80003f4 <Uart_Init+0x174>)
 800030c:	681b      	ldr	r3, [r3, #0]
 800030e:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8000312:	601a      	str	r2, [r3, #0]
	  *pGPIOAAFRL |=(1U<<9);
 8000314:	4b37      	ldr	r3, [pc, #220]	@ (80003f4 <Uart_Init+0x174>)
 8000316:	681b      	ldr	r3, [r3, #0]
 8000318:	681a      	ldr	r2, [r3, #0]
 800031a:	4b36      	ldr	r3, [pc, #216]	@ (80003f4 <Uart_Init+0x174>)
 800031c:	681b      	ldr	r3, [r3, #0]
 800031e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8000322:	601a      	str	r2, [r3, #0]
	  *pGPIOAAFRL |=(1U<<10);
 8000324:	4b33      	ldr	r3, [pc, #204]	@ (80003f4 <Uart_Init+0x174>)
 8000326:	681b      	ldr	r3, [r3, #0]
 8000328:	681a      	ldr	r2, [r3, #0]
 800032a:	4b32      	ldr	r3, [pc, #200]	@ (80003f4 <Uart_Init+0x174>)
 800032c:	681b      	ldr	r3, [r3, #0]
 800032e:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8000332:	601a      	str	r2, [r3, #0]
	  *pGPIOAAFRL &=~(1U<<11);
 8000334:	4b2f      	ldr	r3, [pc, #188]	@ (80003f4 <Uart_Init+0x174>)
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	681a      	ldr	r2, [r3, #0]
 800033a:	4b2e      	ldr	r3, [pc, #184]	@ (80003f4 <Uart_Init+0x174>)
 800033c:	681b      	ldr	r3, [r3, #0]
 800033e:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8000342:	601a      	str	r2, [r3, #0]

	  *pGPIOAAFRL |=(1U<<12);
 8000344:	4b2b      	ldr	r3, [pc, #172]	@ (80003f4 <Uart_Init+0x174>)
 8000346:	681b      	ldr	r3, [r3, #0]
 8000348:	681a      	ldr	r2, [r3, #0]
 800034a:	4b2a      	ldr	r3, [pc, #168]	@ (80003f4 <Uart_Init+0x174>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000352:	601a      	str	r2, [r3, #0]
	  *pGPIOAAFRL |=(1U<<13);
 8000354:	4b27      	ldr	r3, [pc, #156]	@ (80003f4 <Uart_Init+0x174>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	681a      	ldr	r2, [r3, #0]
 800035a:	4b26      	ldr	r3, [pc, #152]	@ (80003f4 <Uart_Init+0x174>)
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8000362:	601a      	str	r2, [r3, #0]
	  *pGPIOAAFRL |=(1U<<14);
 8000364:	4b23      	ldr	r3, [pc, #140]	@ (80003f4 <Uart_Init+0x174>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	681a      	ldr	r2, [r3, #0]
 800036a:	4b22      	ldr	r3, [pc, #136]	@ (80003f4 <Uart_Init+0x174>)
 800036c:	681b      	ldr	r3, [r3, #0]
 800036e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8000372:	601a      	str	r2, [r3, #0]
	  *pGPIOAAFRL &=~(1U<<15);
 8000374:	4b1f      	ldr	r3, [pc, #124]	@ (80003f4 <Uart_Init+0x174>)
 8000376:	681b      	ldr	r3, [r3, #0]
 8000378:	681a      	ldr	r2, [r3, #0]
 800037a:	4b1e      	ldr	r3, [pc, #120]	@ (80003f4 <Uart_Init+0x174>)
 800037c:	681b      	ldr	r3, [r3, #0]
 800037e:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8000382:	601a      	str	r2, [r3, #0]

	//6)Configure the BRR TO 9600

	  *pUSART2_BRR =0X0683;
 8000384:	4b1c      	ldr	r3, [pc, #112]	@ (80003f8 <Uart_Init+0x178>)
 8000386:	681b      	ldr	r3, [r3, #0]
 8000388:	f240 6283 	movw	r2, #1667	@ 0x683
 800038c:	601a      	str	r2, [r3, #0]

	//7)Configure the UART FOR TX AND RX

	  *pUSART2_CR1 |=0X0008;
 800038e:	4b1b      	ldr	r3, [pc, #108]	@ (80003fc <Uart_Init+0x17c>)
 8000390:	681b      	ldr	r3, [r3, #0]
 8000392:	681a      	ldr	r2, [r3, #0]
 8000394:	4b19      	ldr	r3, [pc, #100]	@ (80003fc <Uart_Init+0x17c>)
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	f042 0208 	orr.w	r2, r2, #8
 800039c:	601a      	str	r2, [r3, #0]
	  *pUSART2_CR1 |=0X0004;
 800039e:	4b17      	ldr	r3, [pc, #92]	@ (80003fc <Uart_Init+0x17c>)
 80003a0:	681b      	ldr	r3, [r3, #0]
 80003a2:	681a      	ldr	r2, [r3, #0]
 80003a4:	4b15      	ldr	r3, [pc, #84]	@ (80003fc <Uart_Init+0x17c>)
 80003a6:	681b      	ldr	r3, [r3, #0]
 80003a8:	f042 0204 	orr.w	r2, r2, #4
 80003ac:	601a      	str	r2, [r3, #0]
	  *pUSART2_CR1 |=(1U<<5);
 80003ae:	4b13      	ldr	r3, [pc, #76]	@ (80003fc <Uart_Init+0x17c>)
 80003b0:	681b      	ldr	r3, [r3, #0]
 80003b2:	681a      	ldr	r2, [r3, #0]
 80003b4:	4b11      	ldr	r3, [pc, #68]	@ (80003fc <Uart_Init+0x17c>)
 80003b6:	681b      	ldr	r3, [r3, #0]
 80003b8:	f042 0220 	orr.w	r2, r2, #32
 80003bc:	601a      	str	r2, [r3, #0]
	  *pUSART2_CR1 |=0X2000;
 80003be:	4b0f      	ldr	r3, [pc, #60]	@ (80003fc <Uart_Init+0x17c>)
 80003c0:	681b      	ldr	r3, [r3, #0]
 80003c2:	681a      	ldr	r2, [r3, #0]
 80003c4:	4b0d      	ldr	r3, [pc, #52]	@ (80003fc <Uart_Init+0x17c>)
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80003cc:	601a      	str	r2, [r3, #0]

	  *pNVIC_ISER1 |= (1<<(USART2_IRQNO%32));
 80003ce:	4b0c      	ldr	r3, [pc, #48]	@ (8000400 <Uart_Init+0x180>)
 80003d0:	681b      	ldr	r3, [r3, #0]
 80003d2:	681a      	ldr	r2, [r3, #0]
 80003d4:	4b0a      	ldr	r3, [pc, #40]	@ (8000400 <Uart_Init+0x180>)
 80003d6:	681b      	ldr	r3, [r3, #0]
 80003d8:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80003dc:	601a      	str	r2, [r3, #0]
}
 80003de:	bf00      	nop
 80003e0:	46bd      	mov	sp, r7
 80003e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003e6:	4770      	bx	lr
 80003e8:	20000000 	.word	0x20000000
 80003ec:	20000004 	.word	0x20000004
 80003f0:	20000008 	.word	0x20000008
 80003f4:	20000010 	.word	0x20000010
 80003f8:	2000001c 	.word	0x2000001c
 80003fc:	20000020 	.word	0x20000020
 8000400:	20000024 	.word	0x20000024

08000404 <Uart_Write>:

void Uart_Write(int ch)
{
 8000404:	b480      	push	{r7}
 8000406:	b083      	sub	sp, #12
 8000408:	af00      	add	r7, sp, #0
 800040a:	6078      	str	r0, [r7, #4]
	//Make sure the transmit data register is empty

	while(!(*pUSART2_SR &0x0080)){}
 800040c:	bf00      	nop
 800040e:	4b09      	ldr	r3, [pc, #36]	@ (8000434 <Uart_Write+0x30>)
 8000410:	681b      	ldr	r3, [r3, #0]
 8000412:	681b      	ldr	r3, [r3, #0]
 8000414:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000418:	2b00      	cmp	r3, #0
 800041a:	d0f8      	beq.n	800040e <Uart_Write+0xa>
	*pUSART2_DR =(ch&0xff);
 800041c:	687a      	ldr	r2, [r7, #4]
 800041e:	4b06      	ldr	r3, [pc, #24]	@ (8000438 <Uart_Write+0x34>)
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	b2d2      	uxtb	r2, r2
 8000424:	601a      	str	r2, [r3, #0]

}
 8000426:	bf00      	nop
 8000428:	370c      	adds	r7, #12
 800042a:	46bd      	mov	sp, r7
 800042c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000430:	4770      	bx	lr
 8000432:	bf00      	nop
 8000434:	20000014 	.word	0x20000014
 8000438:	20000018 	.word	0x20000018

0800043c <Uart_Read>:
char Uart_Read(void)
{
 800043c:	b480      	push	{r7}
 800043e:	af00      	add	r7, sp, #0

	while(!(*pUSART2_SR &0x0020)){}
 8000440:	bf00      	nop
 8000442:	4b08      	ldr	r3, [pc, #32]	@ (8000464 <Uart_Read+0x28>)
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	681b      	ldr	r3, [r3, #0]
 8000448:	f003 0320 	and.w	r3, r3, #32
 800044c:	2b00      	cmp	r3, #0
 800044e:	d0f8      	beq.n	8000442 <Uart_Read+0x6>
	return	*pUSART2_DR;
 8000450:	4b05      	ldr	r3, [pc, #20]	@ (8000468 <Uart_Read+0x2c>)
 8000452:	681b      	ldr	r3, [r3, #0]
 8000454:	681b      	ldr	r3, [r3, #0]
 8000456:	b2db      	uxtb	r3, r3

}
 8000458:	4618      	mov	r0, r3
 800045a:	46bd      	mov	sp, r7
 800045c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000460:	4770      	bx	lr
 8000462:	bf00      	nop
 8000464:	20000014 	.word	0x20000014
 8000468:	20000018 	.word	0x20000018

0800046c <__io_putchar>:

int __io_putchar(int ch)
{
 800046c:	b580      	push	{r7, lr}
 800046e:	b082      	sub	sp, #8
 8000470:	af00      	add	r7, sp, #0
 8000472:	6078      	str	r0, [r7, #4]
	Uart_Write(ch);
 8000474:	6878      	ldr	r0, [r7, #4]
 8000476:	f7ff ffc5 	bl	8000404 <Uart_Write>
	return ch;
 800047a:	687b      	ldr	r3, [r7, #4]
}
 800047c:	4618      	mov	r0, r3
 800047e:	3708      	adds	r7, #8
 8000480:	46bd      	mov	sp, r7
 8000482:	bd80      	pop	{r7, pc}

08000484 <main>:

int main(void)
{
 8000484:	b580      	push	{r7, lr}
 8000486:	af00      	add	r7, sp, #0
	Uart_Init();
 8000488:	f7ff fefa 	bl	8000280 <Uart_Init>
	printf("transmit 'a' to turn ON LED \n");
 800048c:	4802      	ldr	r0, [pc, #8]	@ (8000498 <main+0x14>)
 800048e:	f000 fa37 	bl	8000900 <puts>

	while(1)
 8000492:	bf00      	nop
 8000494:	e7fd      	b.n	8000492 <main+0xe>
 8000496:	bf00      	nop
 8000498:	080015e0 	.word	0x080015e0

0800049c <USART2_IRQHandler>:
	{

	}
}

void USART2_IRQHandler(void){
 800049c:	b580      	push	{r7, lr}
 800049e:	b082      	sub	sp, #8
 80004a0:	af00      	add	r7, sp, #0

	*pNVIC_ISPR1 |= (1<<(USART2_IRQNO%32));
 80004a2:	4b17      	ldr	r3, [pc, #92]	@ (8000500 <USART2_IRQHandler+0x64>)
 80004a4:	681b      	ldr	r3, [r3, #0]
 80004a6:	681a      	ldr	r2, [r3, #0]
 80004a8:	4b15      	ldr	r3, [pc, #84]	@ (8000500 <USART2_IRQHandler+0x64>)
 80004aa:	681b      	ldr	r3, [r3, #0]
 80004ac:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80004b0:	601a      	str	r2, [r3, #0]
	char ch;

	ch=Uart_Read();
 80004b2:	f7ff ffc3 	bl	800043c <Uart_Read>
 80004b6:	4603      	mov	r3, r0
 80004b8:	71fb      	strb	r3, [r7, #7]
	if (ch=='a')
 80004ba:	79fb      	ldrb	r3, [r7, #7]
 80004bc:	2b61      	cmp	r3, #97	@ 0x61
 80004be:	d10d      	bne.n	80004dc <USART2_IRQHandler+0x40>
	{
		 *pGPIOAODR |=(1<<5);
 80004c0:	4b10      	ldr	r3, [pc, #64]	@ (8000504 <USART2_IRQHandler+0x68>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	681a      	ldr	r2, [r3, #0]
 80004c6:	4b0f      	ldr	r3, [pc, #60]	@ (8000504 <USART2_IRQHandler+0x68>)
 80004c8:	681b      	ldr	r3, [r3, #0]
 80004ca:	f042 0220 	orr.w	r2, r2, #32
 80004ce:	601a      	str	r2, [r3, #0]
		 printf("LED on, Data is  %c \n", ch);
 80004d0:	79fb      	ldrb	r3, [r7, #7]
 80004d2:	4619      	mov	r1, r3
 80004d4:	480c      	ldr	r0, [pc, #48]	@ (8000508 <USART2_IRQHandler+0x6c>)
 80004d6:	f000 f9ab 	bl	8000830 <iprintf>
	}else
	{
		 *pGPIOAODR &=~(1<<5);
		 printf("LED off, Data is  %c \n", ch);
	}
}
 80004da:	e00c      	b.n	80004f6 <USART2_IRQHandler+0x5a>
		 *pGPIOAODR &=~(1<<5);
 80004dc:	4b09      	ldr	r3, [pc, #36]	@ (8000504 <USART2_IRQHandler+0x68>)
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	681a      	ldr	r2, [r3, #0]
 80004e2:	4b08      	ldr	r3, [pc, #32]	@ (8000504 <USART2_IRQHandler+0x68>)
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	f022 0220 	bic.w	r2, r2, #32
 80004ea:	601a      	str	r2, [r3, #0]
		 printf("LED off, Data is  %c \n", ch);
 80004ec:	79fb      	ldrb	r3, [r7, #7]
 80004ee:	4619      	mov	r1, r3
 80004f0:	4806      	ldr	r0, [pc, #24]	@ (800050c <USART2_IRQHandler+0x70>)
 80004f2:	f000 f99d 	bl	8000830 <iprintf>
}
 80004f6:	bf00      	nop
 80004f8:	3708      	adds	r7, #8
 80004fa:	46bd      	mov	sp, r7
 80004fc:	bd80      	pop	{r7, pc}
 80004fe:	bf00      	nop
 8000500:	20000028 	.word	0x20000028
 8000504:	2000000c 	.word	0x2000000c
 8000508:	08001600 	.word	0x08001600
 800050c:	08001618 	.word	0x08001618

08000510 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000510:	b580      	push	{r7, lr}
 8000512:	b086      	sub	sp, #24
 8000514:	af00      	add	r7, sp, #0
 8000516:	60f8      	str	r0, [r7, #12]
 8000518:	60b9      	str	r1, [r7, #8]
 800051a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800051c:	2300      	movs	r3, #0
 800051e:	617b      	str	r3, [r7, #20]
 8000520:	e00a      	b.n	8000538 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000522:	f3af 8000 	nop.w
 8000526:	4601      	mov	r1, r0
 8000528:	68bb      	ldr	r3, [r7, #8]
 800052a:	1c5a      	adds	r2, r3, #1
 800052c:	60ba      	str	r2, [r7, #8]
 800052e:	b2ca      	uxtb	r2, r1
 8000530:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000532:	697b      	ldr	r3, [r7, #20]
 8000534:	3301      	adds	r3, #1
 8000536:	617b      	str	r3, [r7, #20]
 8000538:	697a      	ldr	r2, [r7, #20]
 800053a:	687b      	ldr	r3, [r7, #4]
 800053c:	429a      	cmp	r2, r3
 800053e:	dbf0      	blt.n	8000522 <_read+0x12>
  }

  return len;
 8000540:	687b      	ldr	r3, [r7, #4]
}
 8000542:	4618      	mov	r0, r3
 8000544:	3718      	adds	r7, #24
 8000546:	46bd      	mov	sp, r7
 8000548:	bd80      	pop	{r7, pc}

0800054a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800054a:	b580      	push	{r7, lr}
 800054c:	b086      	sub	sp, #24
 800054e:	af00      	add	r7, sp, #0
 8000550:	60f8      	str	r0, [r7, #12]
 8000552:	60b9      	str	r1, [r7, #8]
 8000554:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000556:	2300      	movs	r3, #0
 8000558:	617b      	str	r3, [r7, #20]
 800055a:	e009      	b.n	8000570 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800055c:	68bb      	ldr	r3, [r7, #8]
 800055e:	1c5a      	adds	r2, r3, #1
 8000560:	60ba      	str	r2, [r7, #8]
 8000562:	781b      	ldrb	r3, [r3, #0]
 8000564:	4618      	mov	r0, r3
 8000566:	f7ff ff81 	bl	800046c <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800056a:	697b      	ldr	r3, [r7, #20]
 800056c:	3301      	adds	r3, #1
 800056e:	617b      	str	r3, [r7, #20]
 8000570:	697a      	ldr	r2, [r7, #20]
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	429a      	cmp	r2, r3
 8000576:	dbf1      	blt.n	800055c <_write+0x12>
  }
  return len;
 8000578:	687b      	ldr	r3, [r7, #4]
}
 800057a:	4618      	mov	r0, r3
 800057c:	3718      	adds	r7, #24
 800057e:	46bd      	mov	sp, r7
 8000580:	bd80      	pop	{r7, pc}

08000582 <_close>:

int _close(int file)
{
 8000582:	b480      	push	{r7}
 8000584:	b083      	sub	sp, #12
 8000586:	af00      	add	r7, sp, #0
 8000588:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800058a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800058e:	4618      	mov	r0, r3
 8000590:	370c      	adds	r7, #12
 8000592:	46bd      	mov	sp, r7
 8000594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000598:	4770      	bx	lr

0800059a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800059a:	b480      	push	{r7}
 800059c:	b083      	sub	sp, #12
 800059e:	af00      	add	r7, sp, #0
 80005a0:	6078      	str	r0, [r7, #4]
 80005a2:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80005a4:	683b      	ldr	r3, [r7, #0]
 80005a6:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80005aa:	605a      	str	r2, [r3, #4]
  return 0;
 80005ac:	2300      	movs	r3, #0
}
 80005ae:	4618      	mov	r0, r3
 80005b0:	370c      	adds	r7, #12
 80005b2:	46bd      	mov	sp, r7
 80005b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b8:	4770      	bx	lr

080005ba <_isatty>:

int _isatty(int file)
{
 80005ba:	b480      	push	{r7}
 80005bc:	b083      	sub	sp, #12
 80005be:	af00      	add	r7, sp, #0
 80005c0:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80005c2:	2301      	movs	r3, #1
}
 80005c4:	4618      	mov	r0, r3
 80005c6:	370c      	adds	r7, #12
 80005c8:	46bd      	mov	sp, r7
 80005ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ce:	4770      	bx	lr

080005d0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80005d0:	b480      	push	{r7}
 80005d2:	b085      	sub	sp, #20
 80005d4:	af00      	add	r7, sp, #0
 80005d6:	60f8      	str	r0, [r7, #12]
 80005d8:	60b9      	str	r1, [r7, #8]
 80005da:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80005dc:	2300      	movs	r3, #0
}
 80005de:	4618      	mov	r0, r3
 80005e0:	3714      	adds	r7, #20
 80005e2:	46bd      	mov	sp, r7
 80005e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e8:	4770      	bx	lr
	...

080005ec <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80005ec:	b580      	push	{r7, lr}
 80005ee:	b086      	sub	sp, #24
 80005f0:	af00      	add	r7, sp, #0
 80005f2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80005f4:	4a14      	ldr	r2, [pc, #80]	@ (8000648 <_sbrk+0x5c>)
 80005f6:	4b15      	ldr	r3, [pc, #84]	@ (800064c <_sbrk+0x60>)
 80005f8:	1ad3      	subs	r3, r2, r3
 80005fa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80005fc:	697b      	ldr	r3, [r7, #20]
 80005fe:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000600:	4b13      	ldr	r3, [pc, #76]	@ (8000650 <_sbrk+0x64>)
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	2b00      	cmp	r3, #0
 8000606:	d102      	bne.n	800060e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000608:	4b11      	ldr	r3, [pc, #68]	@ (8000650 <_sbrk+0x64>)
 800060a:	4a12      	ldr	r2, [pc, #72]	@ (8000654 <_sbrk+0x68>)
 800060c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800060e:	4b10      	ldr	r3, [pc, #64]	@ (8000650 <_sbrk+0x64>)
 8000610:	681a      	ldr	r2, [r3, #0]
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	4413      	add	r3, r2
 8000616:	693a      	ldr	r2, [r7, #16]
 8000618:	429a      	cmp	r2, r3
 800061a:	d207      	bcs.n	800062c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800061c:	f000 fa9e 	bl	8000b5c <__errno>
 8000620:	4603      	mov	r3, r0
 8000622:	220c      	movs	r2, #12
 8000624:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000626:	f04f 33ff 	mov.w	r3, #4294967295
 800062a:	e009      	b.n	8000640 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800062c:	4b08      	ldr	r3, [pc, #32]	@ (8000650 <_sbrk+0x64>)
 800062e:	681b      	ldr	r3, [r3, #0]
 8000630:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000632:	4b07      	ldr	r3, [pc, #28]	@ (8000650 <_sbrk+0x64>)
 8000634:	681a      	ldr	r2, [r3, #0]
 8000636:	687b      	ldr	r3, [r7, #4]
 8000638:	4413      	add	r3, r2
 800063a:	4a05      	ldr	r2, [pc, #20]	@ (8000650 <_sbrk+0x64>)
 800063c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800063e:	68fb      	ldr	r3, [r7, #12]
}
 8000640:	4618      	mov	r0, r3
 8000642:	3718      	adds	r7, #24
 8000644:	46bd      	mov	sp, r7
 8000646:	bd80      	pop	{r7, pc}
 8000648:	20018000 	.word	0x20018000
 800064c:	00000400 	.word	0x00000400
 8000650:	200000a4 	.word	0x200000a4
 8000654:	200001f8 	.word	0x200001f8

08000658 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000658:	480d      	ldr	r0, [pc, #52]	@ (8000690 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800065a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800065c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000660:	480c      	ldr	r0, [pc, #48]	@ (8000694 <LoopForever+0x6>)
  ldr r1, =_edata
 8000662:	490d      	ldr	r1, [pc, #52]	@ (8000698 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000664:	4a0d      	ldr	r2, [pc, #52]	@ (800069c <LoopForever+0xe>)
  movs r3, #0
 8000666:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000668:	e002      	b.n	8000670 <LoopCopyDataInit>

0800066a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800066a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800066c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800066e:	3304      	adds	r3, #4

08000670 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000670:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000672:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000674:	d3f9      	bcc.n	800066a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000676:	4a0a      	ldr	r2, [pc, #40]	@ (80006a0 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000678:	4c0a      	ldr	r4, [pc, #40]	@ (80006a4 <LoopForever+0x16>)
  movs r3, #0
 800067a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800067c:	e001      	b.n	8000682 <LoopFillZerobss>

0800067e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800067e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000680:	3204      	adds	r2, #4

08000682 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000682:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000684:	d3fb      	bcc.n	800067e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000686:	f000 fa6f 	bl	8000b68 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800068a:	f7ff fefb 	bl	8000484 <main>

0800068e <LoopForever>:

LoopForever:
  b LoopForever
 800068e:	e7fe      	b.n	800068e <LoopForever>
  ldr   r0, =_estack
 8000690:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000694:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000698:	20000088 	.word	0x20000088
  ldr r2, =_sidata
 800069c:	08001674 	.word	0x08001674
  ldr r2, =_sbss
 80006a0:	20000088 	.word	0x20000088
  ldr r4, =_ebss
 80006a4:	200001f4 	.word	0x200001f4

080006a8 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80006a8:	e7fe      	b.n	80006a8 <ADC_IRQHandler>
	...

080006ac <std>:
 80006ac:	2300      	movs	r3, #0
 80006ae:	b510      	push	{r4, lr}
 80006b0:	4604      	mov	r4, r0
 80006b2:	e9c0 3300 	strd	r3, r3, [r0]
 80006b6:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006ba:	6083      	str	r3, [r0, #8]
 80006bc:	8181      	strh	r1, [r0, #12]
 80006be:	6643      	str	r3, [r0, #100]	@ 0x64
 80006c0:	81c2      	strh	r2, [r0, #14]
 80006c2:	6183      	str	r3, [r0, #24]
 80006c4:	4619      	mov	r1, r3
 80006c6:	2208      	movs	r2, #8
 80006c8:	305c      	adds	r0, #92	@ 0x5c
 80006ca:	f000 f9f9 	bl	8000ac0 <memset>
 80006ce:	4b0d      	ldr	r3, [pc, #52]	@ (8000704 <std+0x58>)
 80006d0:	6263      	str	r3, [r4, #36]	@ 0x24
 80006d2:	4b0d      	ldr	r3, [pc, #52]	@ (8000708 <std+0x5c>)
 80006d4:	62a3      	str	r3, [r4, #40]	@ 0x28
 80006d6:	4b0d      	ldr	r3, [pc, #52]	@ (800070c <std+0x60>)
 80006d8:	62e3      	str	r3, [r4, #44]	@ 0x2c
 80006da:	4b0d      	ldr	r3, [pc, #52]	@ (8000710 <std+0x64>)
 80006dc:	6323      	str	r3, [r4, #48]	@ 0x30
 80006de:	4b0d      	ldr	r3, [pc, #52]	@ (8000714 <std+0x68>)
 80006e0:	6224      	str	r4, [r4, #32]
 80006e2:	429c      	cmp	r4, r3
 80006e4:	d006      	beq.n	80006f4 <std+0x48>
 80006e6:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 80006ea:	4294      	cmp	r4, r2
 80006ec:	d002      	beq.n	80006f4 <std+0x48>
 80006ee:	33d0      	adds	r3, #208	@ 0xd0
 80006f0:	429c      	cmp	r4, r3
 80006f2:	d105      	bne.n	8000700 <std+0x54>
 80006f4:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 80006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006fc:	f000 ba58 	b.w	8000bb0 <__retarget_lock_init_recursive>
 8000700:	bd10      	pop	{r4, pc}
 8000702:	bf00      	nop
 8000704:	08000911 	.word	0x08000911
 8000708:	08000933 	.word	0x08000933
 800070c:	0800096b 	.word	0x0800096b
 8000710:	0800098f 	.word	0x0800098f
 8000714:	200000a8 	.word	0x200000a8

08000718 <stdio_exit_handler>:
 8000718:	4a02      	ldr	r2, [pc, #8]	@ (8000724 <stdio_exit_handler+0xc>)
 800071a:	4903      	ldr	r1, [pc, #12]	@ (8000728 <stdio_exit_handler+0x10>)
 800071c:	4803      	ldr	r0, [pc, #12]	@ (800072c <stdio_exit_handler+0x14>)
 800071e:	f000 b869 	b.w	80007f4 <_fwalk_sglue>
 8000722:	bf00      	nop
 8000724:	2000002c 	.word	0x2000002c
 8000728:	08001451 	.word	0x08001451
 800072c:	2000003c 	.word	0x2000003c

08000730 <cleanup_stdio>:
 8000730:	6841      	ldr	r1, [r0, #4]
 8000732:	4b0c      	ldr	r3, [pc, #48]	@ (8000764 <cleanup_stdio+0x34>)
 8000734:	4299      	cmp	r1, r3
 8000736:	b510      	push	{r4, lr}
 8000738:	4604      	mov	r4, r0
 800073a:	d001      	beq.n	8000740 <cleanup_stdio+0x10>
 800073c:	f000 fe88 	bl	8001450 <_fflush_r>
 8000740:	68a1      	ldr	r1, [r4, #8]
 8000742:	4b09      	ldr	r3, [pc, #36]	@ (8000768 <cleanup_stdio+0x38>)
 8000744:	4299      	cmp	r1, r3
 8000746:	d002      	beq.n	800074e <cleanup_stdio+0x1e>
 8000748:	4620      	mov	r0, r4
 800074a:	f000 fe81 	bl	8001450 <_fflush_r>
 800074e:	68e1      	ldr	r1, [r4, #12]
 8000750:	4b06      	ldr	r3, [pc, #24]	@ (800076c <cleanup_stdio+0x3c>)
 8000752:	4299      	cmp	r1, r3
 8000754:	d004      	beq.n	8000760 <cleanup_stdio+0x30>
 8000756:	4620      	mov	r0, r4
 8000758:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800075c:	f000 be78 	b.w	8001450 <_fflush_r>
 8000760:	bd10      	pop	{r4, pc}
 8000762:	bf00      	nop
 8000764:	200000a8 	.word	0x200000a8
 8000768:	20000110 	.word	0x20000110
 800076c:	20000178 	.word	0x20000178

08000770 <global_stdio_init.part.0>:
 8000770:	b510      	push	{r4, lr}
 8000772:	4b0b      	ldr	r3, [pc, #44]	@ (80007a0 <global_stdio_init.part.0+0x30>)
 8000774:	4c0b      	ldr	r4, [pc, #44]	@ (80007a4 <global_stdio_init.part.0+0x34>)
 8000776:	4a0c      	ldr	r2, [pc, #48]	@ (80007a8 <global_stdio_init.part.0+0x38>)
 8000778:	601a      	str	r2, [r3, #0]
 800077a:	4620      	mov	r0, r4
 800077c:	2200      	movs	r2, #0
 800077e:	2104      	movs	r1, #4
 8000780:	f7ff ff94 	bl	80006ac <std>
 8000784:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000788:	2201      	movs	r2, #1
 800078a:	2109      	movs	r1, #9
 800078c:	f7ff ff8e 	bl	80006ac <std>
 8000790:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000794:	2202      	movs	r2, #2
 8000796:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800079a:	2112      	movs	r1, #18
 800079c:	f7ff bf86 	b.w	80006ac <std>
 80007a0:	200001e0 	.word	0x200001e0
 80007a4:	200000a8 	.word	0x200000a8
 80007a8:	08000719 	.word	0x08000719

080007ac <__sfp_lock_acquire>:
 80007ac:	4801      	ldr	r0, [pc, #4]	@ (80007b4 <__sfp_lock_acquire+0x8>)
 80007ae:	f000 ba00 	b.w	8000bb2 <__retarget_lock_acquire_recursive>
 80007b2:	bf00      	nop
 80007b4:	200001e9 	.word	0x200001e9

080007b8 <__sfp_lock_release>:
 80007b8:	4801      	ldr	r0, [pc, #4]	@ (80007c0 <__sfp_lock_release+0x8>)
 80007ba:	f000 b9fb 	b.w	8000bb4 <__retarget_lock_release_recursive>
 80007be:	bf00      	nop
 80007c0:	200001e9 	.word	0x200001e9

080007c4 <__sinit>:
 80007c4:	b510      	push	{r4, lr}
 80007c6:	4604      	mov	r4, r0
 80007c8:	f7ff fff0 	bl	80007ac <__sfp_lock_acquire>
 80007cc:	6a23      	ldr	r3, [r4, #32]
 80007ce:	b11b      	cbz	r3, 80007d8 <__sinit+0x14>
 80007d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007d4:	f7ff bff0 	b.w	80007b8 <__sfp_lock_release>
 80007d8:	4b04      	ldr	r3, [pc, #16]	@ (80007ec <__sinit+0x28>)
 80007da:	6223      	str	r3, [r4, #32]
 80007dc:	4b04      	ldr	r3, [pc, #16]	@ (80007f0 <__sinit+0x2c>)
 80007de:	681b      	ldr	r3, [r3, #0]
 80007e0:	2b00      	cmp	r3, #0
 80007e2:	d1f5      	bne.n	80007d0 <__sinit+0xc>
 80007e4:	f7ff ffc4 	bl	8000770 <global_stdio_init.part.0>
 80007e8:	e7f2      	b.n	80007d0 <__sinit+0xc>
 80007ea:	bf00      	nop
 80007ec:	08000731 	.word	0x08000731
 80007f0:	200001e0 	.word	0x200001e0

080007f4 <_fwalk_sglue>:
 80007f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80007f8:	4607      	mov	r7, r0
 80007fa:	4688      	mov	r8, r1
 80007fc:	4614      	mov	r4, r2
 80007fe:	2600      	movs	r6, #0
 8000800:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000804:	f1b9 0901 	subs.w	r9, r9, #1
 8000808:	d505      	bpl.n	8000816 <_fwalk_sglue+0x22>
 800080a:	6824      	ldr	r4, [r4, #0]
 800080c:	2c00      	cmp	r4, #0
 800080e:	d1f7      	bne.n	8000800 <_fwalk_sglue+0xc>
 8000810:	4630      	mov	r0, r6
 8000812:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000816:	89ab      	ldrh	r3, [r5, #12]
 8000818:	2b01      	cmp	r3, #1
 800081a:	d907      	bls.n	800082c <_fwalk_sglue+0x38>
 800081c:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000820:	3301      	adds	r3, #1
 8000822:	d003      	beq.n	800082c <_fwalk_sglue+0x38>
 8000824:	4629      	mov	r1, r5
 8000826:	4638      	mov	r0, r7
 8000828:	47c0      	blx	r8
 800082a:	4306      	orrs	r6, r0
 800082c:	3568      	adds	r5, #104	@ 0x68
 800082e:	e7e9      	b.n	8000804 <_fwalk_sglue+0x10>

08000830 <iprintf>:
 8000830:	b40f      	push	{r0, r1, r2, r3}
 8000832:	b507      	push	{r0, r1, r2, lr}
 8000834:	4906      	ldr	r1, [pc, #24]	@ (8000850 <iprintf+0x20>)
 8000836:	ab04      	add	r3, sp, #16
 8000838:	6808      	ldr	r0, [r1, #0]
 800083a:	f853 2b04 	ldr.w	r2, [r3], #4
 800083e:	6881      	ldr	r1, [r0, #8]
 8000840:	9301      	str	r3, [sp, #4]
 8000842:	f000 fadb 	bl	8000dfc <_vfiprintf_r>
 8000846:	b003      	add	sp, #12
 8000848:	f85d eb04 	ldr.w	lr, [sp], #4
 800084c:	b004      	add	sp, #16
 800084e:	4770      	bx	lr
 8000850:	20000038 	.word	0x20000038

08000854 <_puts_r>:
 8000854:	6a03      	ldr	r3, [r0, #32]
 8000856:	b570      	push	{r4, r5, r6, lr}
 8000858:	6884      	ldr	r4, [r0, #8]
 800085a:	4605      	mov	r5, r0
 800085c:	460e      	mov	r6, r1
 800085e:	b90b      	cbnz	r3, 8000864 <_puts_r+0x10>
 8000860:	f7ff ffb0 	bl	80007c4 <__sinit>
 8000864:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000866:	07db      	lsls	r3, r3, #31
 8000868:	d405      	bmi.n	8000876 <_puts_r+0x22>
 800086a:	89a3      	ldrh	r3, [r4, #12]
 800086c:	0598      	lsls	r0, r3, #22
 800086e:	d402      	bmi.n	8000876 <_puts_r+0x22>
 8000870:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8000872:	f000 f99e 	bl	8000bb2 <__retarget_lock_acquire_recursive>
 8000876:	89a3      	ldrh	r3, [r4, #12]
 8000878:	0719      	lsls	r1, r3, #28
 800087a:	d502      	bpl.n	8000882 <_puts_r+0x2e>
 800087c:	6923      	ldr	r3, [r4, #16]
 800087e:	2b00      	cmp	r3, #0
 8000880:	d135      	bne.n	80008ee <_puts_r+0x9a>
 8000882:	4621      	mov	r1, r4
 8000884:	4628      	mov	r0, r5
 8000886:	f000 f8c5 	bl	8000a14 <__swsetup_r>
 800088a:	b380      	cbz	r0, 80008ee <_puts_r+0x9a>
 800088c:	f04f 35ff 	mov.w	r5, #4294967295
 8000890:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8000892:	07da      	lsls	r2, r3, #31
 8000894:	d405      	bmi.n	80008a2 <_puts_r+0x4e>
 8000896:	89a3      	ldrh	r3, [r4, #12]
 8000898:	059b      	lsls	r3, r3, #22
 800089a:	d402      	bmi.n	80008a2 <_puts_r+0x4e>
 800089c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800089e:	f000 f989 	bl	8000bb4 <__retarget_lock_release_recursive>
 80008a2:	4628      	mov	r0, r5
 80008a4:	bd70      	pop	{r4, r5, r6, pc}
 80008a6:	2b00      	cmp	r3, #0
 80008a8:	da04      	bge.n	80008b4 <_puts_r+0x60>
 80008aa:	69a2      	ldr	r2, [r4, #24]
 80008ac:	429a      	cmp	r2, r3
 80008ae:	dc17      	bgt.n	80008e0 <_puts_r+0x8c>
 80008b0:	290a      	cmp	r1, #10
 80008b2:	d015      	beq.n	80008e0 <_puts_r+0x8c>
 80008b4:	6823      	ldr	r3, [r4, #0]
 80008b6:	1c5a      	adds	r2, r3, #1
 80008b8:	6022      	str	r2, [r4, #0]
 80008ba:	7019      	strb	r1, [r3, #0]
 80008bc:	68a3      	ldr	r3, [r4, #8]
 80008be:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80008c2:	3b01      	subs	r3, #1
 80008c4:	60a3      	str	r3, [r4, #8]
 80008c6:	2900      	cmp	r1, #0
 80008c8:	d1ed      	bne.n	80008a6 <_puts_r+0x52>
 80008ca:	2b00      	cmp	r3, #0
 80008cc:	da11      	bge.n	80008f2 <_puts_r+0x9e>
 80008ce:	4622      	mov	r2, r4
 80008d0:	210a      	movs	r1, #10
 80008d2:	4628      	mov	r0, r5
 80008d4:	f000 f85f 	bl	8000996 <__swbuf_r>
 80008d8:	3001      	adds	r0, #1
 80008da:	d0d7      	beq.n	800088c <_puts_r+0x38>
 80008dc:	250a      	movs	r5, #10
 80008de:	e7d7      	b.n	8000890 <_puts_r+0x3c>
 80008e0:	4622      	mov	r2, r4
 80008e2:	4628      	mov	r0, r5
 80008e4:	f000 f857 	bl	8000996 <__swbuf_r>
 80008e8:	3001      	adds	r0, #1
 80008ea:	d1e7      	bne.n	80008bc <_puts_r+0x68>
 80008ec:	e7ce      	b.n	800088c <_puts_r+0x38>
 80008ee:	3e01      	subs	r6, #1
 80008f0:	e7e4      	b.n	80008bc <_puts_r+0x68>
 80008f2:	6823      	ldr	r3, [r4, #0]
 80008f4:	1c5a      	adds	r2, r3, #1
 80008f6:	6022      	str	r2, [r4, #0]
 80008f8:	220a      	movs	r2, #10
 80008fa:	701a      	strb	r2, [r3, #0]
 80008fc:	e7ee      	b.n	80008dc <_puts_r+0x88>
	...

08000900 <puts>:
 8000900:	4b02      	ldr	r3, [pc, #8]	@ (800090c <puts+0xc>)
 8000902:	4601      	mov	r1, r0
 8000904:	6818      	ldr	r0, [r3, #0]
 8000906:	f7ff bfa5 	b.w	8000854 <_puts_r>
 800090a:	bf00      	nop
 800090c:	20000038 	.word	0x20000038

08000910 <__sread>:
 8000910:	b510      	push	{r4, lr}
 8000912:	460c      	mov	r4, r1
 8000914:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000918:	f000 f8fc 	bl	8000b14 <_read_r>
 800091c:	2800      	cmp	r0, #0
 800091e:	bfab      	itete	ge
 8000920:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000922:	89a3      	ldrhlt	r3, [r4, #12]
 8000924:	181b      	addge	r3, r3, r0
 8000926:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800092a:	bfac      	ite	ge
 800092c:	6563      	strge	r3, [r4, #84]	@ 0x54
 800092e:	81a3      	strhlt	r3, [r4, #12]
 8000930:	bd10      	pop	{r4, pc}

08000932 <__swrite>:
 8000932:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000936:	461f      	mov	r7, r3
 8000938:	898b      	ldrh	r3, [r1, #12]
 800093a:	05db      	lsls	r3, r3, #23
 800093c:	4605      	mov	r5, r0
 800093e:	460c      	mov	r4, r1
 8000940:	4616      	mov	r6, r2
 8000942:	d505      	bpl.n	8000950 <__swrite+0x1e>
 8000944:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000948:	2302      	movs	r3, #2
 800094a:	2200      	movs	r2, #0
 800094c:	f000 f8d0 	bl	8000af0 <_lseek_r>
 8000950:	89a3      	ldrh	r3, [r4, #12]
 8000952:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000956:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800095a:	81a3      	strh	r3, [r4, #12]
 800095c:	4632      	mov	r2, r6
 800095e:	463b      	mov	r3, r7
 8000960:	4628      	mov	r0, r5
 8000962:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000966:	f000 b8e7 	b.w	8000b38 <_write_r>

0800096a <__sseek>:
 800096a:	b510      	push	{r4, lr}
 800096c:	460c      	mov	r4, r1
 800096e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000972:	f000 f8bd 	bl	8000af0 <_lseek_r>
 8000976:	1c43      	adds	r3, r0, #1
 8000978:	89a3      	ldrh	r3, [r4, #12]
 800097a:	bf15      	itete	ne
 800097c:	6560      	strne	r0, [r4, #84]	@ 0x54
 800097e:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000982:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000986:	81a3      	strheq	r3, [r4, #12]
 8000988:	bf18      	it	ne
 800098a:	81a3      	strhne	r3, [r4, #12]
 800098c:	bd10      	pop	{r4, pc}

0800098e <__sclose>:
 800098e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000992:	f000 b89d 	b.w	8000ad0 <_close_r>

08000996 <__swbuf_r>:
 8000996:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000998:	460e      	mov	r6, r1
 800099a:	4614      	mov	r4, r2
 800099c:	4605      	mov	r5, r0
 800099e:	b118      	cbz	r0, 80009a8 <__swbuf_r+0x12>
 80009a0:	6a03      	ldr	r3, [r0, #32]
 80009a2:	b90b      	cbnz	r3, 80009a8 <__swbuf_r+0x12>
 80009a4:	f7ff ff0e 	bl	80007c4 <__sinit>
 80009a8:	69a3      	ldr	r3, [r4, #24]
 80009aa:	60a3      	str	r3, [r4, #8]
 80009ac:	89a3      	ldrh	r3, [r4, #12]
 80009ae:	071a      	lsls	r2, r3, #28
 80009b0:	d501      	bpl.n	80009b6 <__swbuf_r+0x20>
 80009b2:	6923      	ldr	r3, [r4, #16]
 80009b4:	b943      	cbnz	r3, 80009c8 <__swbuf_r+0x32>
 80009b6:	4621      	mov	r1, r4
 80009b8:	4628      	mov	r0, r5
 80009ba:	f000 f82b 	bl	8000a14 <__swsetup_r>
 80009be:	b118      	cbz	r0, 80009c8 <__swbuf_r+0x32>
 80009c0:	f04f 37ff 	mov.w	r7, #4294967295
 80009c4:	4638      	mov	r0, r7
 80009c6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80009c8:	6823      	ldr	r3, [r4, #0]
 80009ca:	6922      	ldr	r2, [r4, #16]
 80009cc:	1a98      	subs	r0, r3, r2
 80009ce:	6963      	ldr	r3, [r4, #20]
 80009d0:	b2f6      	uxtb	r6, r6
 80009d2:	4283      	cmp	r3, r0
 80009d4:	4637      	mov	r7, r6
 80009d6:	dc05      	bgt.n	80009e4 <__swbuf_r+0x4e>
 80009d8:	4621      	mov	r1, r4
 80009da:	4628      	mov	r0, r5
 80009dc:	f000 fd38 	bl	8001450 <_fflush_r>
 80009e0:	2800      	cmp	r0, #0
 80009e2:	d1ed      	bne.n	80009c0 <__swbuf_r+0x2a>
 80009e4:	68a3      	ldr	r3, [r4, #8]
 80009e6:	3b01      	subs	r3, #1
 80009e8:	60a3      	str	r3, [r4, #8]
 80009ea:	6823      	ldr	r3, [r4, #0]
 80009ec:	1c5a      	adds	r2, r3, #1
 80009ee:	6022      	str	r2, [r4, #0]
 80009f0:	701e      	strb	r6, [r3, #0]
 80009f2:	6962      	ldr	r2, [r4, #20]
 80009f4:	1c43      	adds	r3, r0, #1
 80009f6:	429a      	cmp	r2, r3
 80009f8:	d004      	beq.n	8000a04 <__swbuf_r+0x6e>
 80009fa:	89a3      	ldrh	r3, [r4, #12]
 80009fc:	07db      	lsls	r3, r3, #31
 80009fe:	d5e1      	bpl.n	80009c4 <__swbuf_r+0x2e>
 8000a00:	2e0a      	cmp	r6, #10
 8000a02:	d1df      	bne.n	80009c4 <__swbuf_r+0x2e>
 8000a04:	4621      	mov	r1, r4
 8000a06:	4628      	mov	r0, r5
 8000a08:	f000 fd22 	bl	8001450 <_fflush_r>
 8000a0c:	2800      	cmp	r0, #0
 8000a0e:	d0d9      	beq.n	80009c4 <__swbuf_r+0x2e>
 8000a10:	e7d6      	b.n	80009c0 <__swbuf_r+0x2a>
	...

08000a14 <__swsetup_r>:
 8000a14:	b538      	push	{r3, r4, r5, lr}
 8000a16:	4b29      	ldr	r3, [pc, #164]	@ (8000abc <__swsetup_r+0xa8>)
 8000a18:	4605      	mov	r5, r0
 8000a1a:	6818      	ldr	r0, [r3, #0]
 8000a1c:	460c      	mov	r4, r1
 8000a1e:	b118      	cbz	r0, 8000a28 <__swsetup_r+0x14>
 8000a20:	6a03      	ldr	r3, [r0, #32]
 8000a22:	b90b      	cbnz	r3, 8000a28 <__swsetup_r+0x14>
 8000a24:	f7ff fece 	bl	80007c4 <__sinit>
 8000a28:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a2c:	0719      	lsls	r1, r3, #28
 8000a2e:	d422      	bmi.n	8000a76 <__swsetup_r+0x62>
 8000a30:	06da      	lsls	r2, r3, #27
 8000a32:	d407      	bmi.n	8000a44 <__swsetup_r+0x30>
 8000a34:	2209      	movs	r2, #9
 8000a36:	602a      	str	r2, [r5, #0]
 8000a38:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000a3c:	81a3      	strh	r3, [r4, #12]
 8000a3e:	f04f 30ff 	mov.w	r0, #4294967295
 8000a42:	e033      	b.n	8000aac <__swsetup_r+0x98>
 8000a44:	0758      	lsls	r0, r3, #29
 8000a46:	d512      	bpl.n	8000a6e <__swsetup_r+0x5a>
 8000a48:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000a4a:	b141      	cbz	r1, 8000a5e <__swsetup_r+0x4a>
 8000a4c:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000a50:	4299      	cmp	r1, r3
 8000a52:	d002      	beq.n	8000a5a <__swsetup_r+0x46>
 8000a54:	4628      	mov	r0, r5
 8000a56:	f000 f8af 	bl	8000bb8 <_free_r>
 8000a5a:	2300      	movs	r3, #0
 8000a5c:	6363      	str	r3, [r4, #52]	@ 0x34
 8000a5e:	89a3      	ldrh	r3, [r4, #12]
 8000a60:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000a64:	81a3      	strh	r3, [r4, #12]
 8000a66:	2300      	movs	r3, #0
 8000a68:	6063      	str	r3, [r4, #4]
 8000a6a:	6923      	ldr	r3, [r4, #16]
 8000a6c:	6023      	str	r3, [r4, #0]
 8000a6e:	89a3      	ldrh	r3, [r4, #12]
 8000a70:	f043 0308 	orr.w	r3, r3, #8
 8000a74:	81a3      	strh	r3, [r4, #12]
 8000a76:	6923      	ldr	r3, [r4, #16]
 8000a78:	b94b      	cbnz	r3, 8000a8e <__swsetup_r+0x7a>
 8000a7a:	89a3      	ldrh	r3, [r4, #12]
 8000a7c:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000a80:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000a84:	d003      	beq.n	8000a8e <__swsetup_r+0x7a>
 8000a86:	4621      	mov	r1, r4
 8000a88:	4628      	mov	r0, r5
 8000a8a:	f000 fd2f 	bl	80014ec <__smakebuf_r>
 8000a8e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000a92:	f013 0201 	ands.w	r2, r3, #1
 8000a96:	d00a      	beq.n	8000aae <__swsetup_r+0x9a>
 8000a98:	2200      	movs	r2, #0
 8000a9a:	60a2      	str	r2, [r4, #8]
 8000a9c:	6962      	ldr	r2, [r4, #20]
 8000a9e:	4252      	negs	r2, r2
 8000aa0:	61a2      	str	r2, [r4, #24]
 8000aa2:	6922      	ldr	r2, [r4, #16]
 8000aa4:	b942      	cbnz	r2, 8000ab8 <__swsetup_r+0xa4>
 8000aa6:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000aaa:	d1c5      	bne.n	8000a38 <__swsetup_r+0x24>
 8000aac:	bd38      	pop	{r3, r4, r5, pc}
 8000aae:	0799      	lsls	r1, r3, #30
 8000ab0:	bf58      	it	pl
 8000ab2:	6962      	ldrpl	r2, [r4, #20]
 8000ab4:	60a2      	str	r2, [r4, #8]
 8000ab6:	e7f4      	b.n	8000aa2 <__swsetup_r+0x8e>
 8000ab8:	2000      	movs	r0, #0
 8000aba:	e7f7      	b.n	8000aac <__swsetup_r+0x98>
 8000abc:	20000038 	.word	0x20000038

08000ac0 <memset>:
 8000ac0:	4402      	add	r2, r0
 8000ac2:	4603      	mov	r3, r0
 8000ac4:	4293      	cmp	r3, r2
 8000ac6:	d100      	bne.n	8000aca <memset+0xa>
 8000ac8:	4770      	bx	lr
 8000aca:	f803 1b01 	strb.w	r1, [r3], #1
 8000ace:	e7f9      	b.n	8000ac4 <memset+0x4>

08000ad0 <_close_r>:
 8000ad0:	b538      	push	{r3, r4, r5, lr}
 8000ad2:	4d06      	ldr	r5, [pc, #24]	@ (8000aec <_close_r+0x1c>)
 8000ad4:	2300      	movs	r3, #0
 8000ad6:	4604      	mov	r4, r0
 8000ad8:	4608      	mov	r0, r1
 8000ada:	602b      	str	r3, [r5, #0]
 8000adc:	f7ff fd51 	bl	8000582 <_close>
 8000ae0:	1c43      	adds	r3, r0, #1
 8000ae2:	d102      	bne.n	8000aea <_close_r+0x1a>
 8000ae4:	682b      	ldr	r3, [r5, #0]
 8000ae6:	b103      	cbz	r3, 8000aea <_close_r+0x1a>
 8000ae8:	6023      	str	r3, [r4, #0]
 8000aea:	bd38      	pop	{r3, r4, r5, pc}
 8000aec:	200001e4 	.word	0x200001e4

08000af0 <_lseek_r>:
 8000af0:	b538      	push	{r3, r4, r5, lr}
 8000af2:	4d07      	ldr	r5, [pc, #28]	@ (8000b10 <_lseek_r+0x20>)
 8000af4:	4604      	mov	r4, r0
 8000af6:	4608      	mov	r0, r1
 8000af8:	4611      	mov	r1, r2
 8000afa:	2200      	movs	r2, #0
 8000afc:	602a      	str	r2, [r5, #0]
 8000afe:	461a      	mov	r2, r3
 8000b00:	f7ff fd66 	bl	80005d0 <_lseek>
 8000b04:	1c43      	adds	r3, r0, #1
 8000b06:	d102      	bne.n	8000b0e <_lseek_r+0x1e>
 8000b08:	682b      	ldr	r3, [r5, #0]
 8000b0a:	b103      	cbz	r3, 8000b0e <_lseek_r+0x1e>
 8000b0c:	6023      	str	r3, [r4, #0]
 8000b0e:	bd38      	pop	{r3, r4, r5, pc}
 8000b10:	200001e4 	.word	0x200001e4

08000b14 <_read_r>:
 8000b14:	b538      	push	{r3, r4, r5, lr}
 8000b16:	4d07      	ldr	r5, [pc, #28]	@ (8000b34 <_read_r+0x20>)
 8000b18:	4604      	mov	r4, r0
 8000b1a:	4608      	mov	r0, r1
 8000b1c:	4611      	mov	r1, r2
 8000b1e:	2200      	movs	r2, #0
 8000b20:	602a      	str	r2, [r5, #0]
 8000b22:	461a      	mov	r2, r3
 8000b24:	f7ff fcf4 	bl	8000510 <_read>
 8000b28:	1c43      	adds	r3, r0, #1
 8000b2a:	d102      	bne.n	8000b32 <_read_r+0x1e>
 8000b2c:	682b      	ldr	r3, [r5, #0]
 8000b2e:	b103      	cbz	r3, 8000b32 <_read_r+0x1e>
 8000b30:	6023      	str	r3, [r4, #0]
 8000b32:	bd38      	pop	{r3, r4, r5, pc}
 8000b34:	200001e4 	.word	0x200001e4

08000b38 <_write_r>:
 8000b38:	b538      	push	{r3, r4, r5, lr}
 8000b3a:	4d07      	ldr	r5, [pc, #28]	@ (8000b58 <_write_r+0x20>)
 8000b3c:	4604      	mov	r4, r0
 8000b3e:	4608      	mov	r0, r1
 8000b40:	4611      	mov	r1, r2
 8000b42:	2200      	movs	r2, #0
 8000b44:	602a      	str	r2, [r5, #0]
 8000b46:	461a      	mov	r2, r3
 8000b48:	f7ff fcff 	bl	800054a <_write>
 8000b4c:	1c43      	adds	r3, r0, #1
 8000b4e:	d102      	bne.n	8000b56 <_write_r+0x1e>
 8000b50:	682b      	ldr	r3, [r5, #0]
 8000b52:	b103      	cbz	r3, 8000b56 <_write_r+0x1e>
 8000b54:	6023      	str	r3, [r4, #0]
 8000b56:	bd38      	pop	{r3, r4, r5, pc}
 8000b58:	200001e4 	.word	0x200001e4

08000b5c <__errno>:
 8000b5c:	4b01      	ldr	r3, [pc, #4]	@ (8000b64 <__errno+0x8>)
 8000b5e:	6818      	ldr	r0, [r3, #0]
 8000b60:	4770      	bx	lr
 8000b62:	bf00      	nop
 8000b64:	20000038 	.word	0x20000038

08000b68 <__libc_init_array>:
 8000b68:	b570      	push	{r4, r5, r6, lr}
 8000b6a:	4d0d      	ldr	r5, [pc, #52]	@ (8000ba0 <__libc_init_array+0x38>)
 8000b6c:	4c0d      	ldr	r4, [pc, #52]	@ (8000ba4 <__libc_init_array+0x3c>)
 8000b6e:	1b64      	subs	r4, r4, r5
 8000b70:	10a4      	asrs	r4, r4, #2
 8000b72:	2600      	movs	r6, #0
 8000b74:	42a6      	cmp	r6, r4
 8000b76:	d109      	bne.n	8000b8c <__libc_init_array+0x24>
 8000b78:	4d0b      	ldr	r5, [pc, #44]	@ (8000ba8 <__libc_init_array+0x40>)
 8000b7a:	4c0c      	ldr	r4, [pc, #48]	@ (8000bac <__libc_init_array+0x44>)
 8000b7c:	f000 fd24 	bl	80015c8 <_init>
 8000b80:	1b64      	subs	r4, r4, r5
 8000b82:	10a4      	asrs	r4, r4, #2
 8000b84:	2600      	movs	r6, #0
 8000b86:	42a6      	cmp	r6, r4
 8000b88:	d105      	bne.n	8000b96 <__libc_init_array+0x2e>
 8000b8a:	bd70      	pop	{r4, r5, r6, pc}
 8000b8c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b90:	4798      	blx	r3
 8000b92:	3601      	adds	r6, #1
 8000b94:	e7ee      	b.n	8000b74 <__libc_init_array+0xc>
 8000b96:	f855 3b04 	ldr.w	r3, [r5], #4
 8000b9a:	4798      	blx	r3
 8000b9c:	3601      	adds	r6, #1
 8000b9e:	e7f2      	b.n	8000b86 <__libc_init_array+0x1e>
 8000ba0:	0800166c 	.word	0x0800166c
 8000ba4:	0800166c 	.word	0x0800166c
 8000ba8:	0800166c 	.word	0x0800166c
 8000bac:	08001670 	.word	0x08001670

08000bb0 <__retarget_lock_init_recursive>:
 8000bb0:	4770      	bx	lr

08000bb2 <__retarget_lock_acquire_recursive>:
 8000bb2:	4770      	bx	lr

08000bb4 <__retarget_lock_release_recursive>:
 8000bb4:	4770      	bx	lr
	...

08000bb8 <_free_r>:
 8000bb8:	b538      	push	{r3, r4, r5, lr}
 8000bba:	4605      	mov	r5, r0
 8000bbc:	2900      	cmp	r1, #0
 8000bbe:	d041      	beq.n	8000c44 <_free_r+0x8c>
 8000bc0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000bc4:	1f0c      	subs	r4, r1, #4
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	bfb8      	it	lt
 8000bca:	18e4      	addlt	r4, r4, r3
 8000bcc:	f000 f8e0 	bl	8000d90 <__malloc_lock>
 8000bd0:	4a1d      	ldr	r2, [pc, #116]	@ (8000c48 <_free_r+0x90>)
 8000bd2:	6813      	ldr	r3, [r2, #0]
 8000bd4:	b933      	cbnz	r3, 8000be4 <_free_r+0x2c>
 8000bd6:	6063      	str	r3, [r4, #4]
 8000bd8:	6014      	str	r4, [r2, #0]
 8000bda:	4628      	mov	r0, r5
 8000bdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000be0:	f000 b8dc 	b.w	8000d9c <__malloc_unlock>
 8000be4:	42a3      	cmp	r3, r4
 8000be6:	d908      	bls.n	8000bfa <_free_r+0x42>
 8000be8:	6820      	ldr	r0, [r4, #0]
 8000bea:	1821      	adds	r1, r4, r0
 8000bec:	428b      	cmp	r3, r1
 8000bee:	bf01      	itttt	eq
 8000bf0:	6819      	ldreq	r1, [r3, #0]
 8000bf2:	685b      	ldreq	r3, [r3, #4]
 8000bf4:	1809      	addeq	r1, r1, r0
 8000bf6:	6021      	streq	r1, [r4, #0]
 8000bf8:	e7ed      	b.n	8000bd6 <_free_r+0x1e>
 8000bfa:	461a      	mov	r2, r3
 8000bfc:	685b      	ldr	r3, [r3, #4]
 8000bfe:	b10b      	cbz	r3, 8000c04 <_free_r+0x4c>
 8000c00:	42a3      	cmp	r3, r4
 8000c02:	d9fa      	bls.n	8000bfa <_free_r+0x42>
 8000c04:	6811      	ldr	r1, [r2, #0]
 8000c06:	1850      	adds	r0, r2, r1
 8000c08:	42a0      	cmp	r0, r4
 8000c0a:	d10b      	bne.n	8000c24 <_free_r+0x6c>
 8000c0c:	6820      	ldr	r0, [r4, #0]
 8000c0e:	4401      	add	r1, r0
 8000c10:	1850      	adds	r0, r2, r1
 8000c12:	4283      	cmp	r3, r0
 8000c14:	6011      	str	r1, [r2, #0]
 8000c16:	d1e0      	bne.n	8000bda <_free_r+0x22>
 8000c18:	6818      	ldr	r0, [r3, #0]
 8000c1a:	685b      	ldr	r3, [r3, #4]
 8000c1c:	6053      	str	r3, [r2, #4]
 8000c1e:	4408      	add	r0, r1
 8000c20:	6010      	str	r0, [r2, #0]
 8000c22:	e7da      	b.n	8000bda <_free_r+0x22>
 8000c24:	d902      	bls.n	8000c2c <_free_r+0x74>
 8000c26:	230c      	movs	r3, #12
 8000c28:	602b      	str	r3, [r5, #0]
 8000c2a:	e7d6      	b.n	8000bda <_free_r+0x22>
 8000c2c:	6820      	ldr	r0, [r4, #0]
 8000c2e:	1821      	adds	r1, r4, r0
 8000c30:	428b      	cmp	r3, r1
 8000c32:	bf04      	itt	eq
 8000c34:	6819      	ldreq	r1, [r3, #0]
 8000c36:	685b      	ldreq	r3, [r3, #4]
 8000c38:	6063      	str	r3, [r4, #4]
 8000c3a:	bf04      	itt	eq
 8000c3c:	1809      	addeq	r1, r1, r0
 8000c3e:	6021      	streq	r1, [r4, #0]
 8000c40:	6054      	str	r4, [r2, #4]
 8000c42:	e7ca      	b.n	8000bda <_free_r+0x22>
 8000c44:	bd38      	pop	{r3, r4, r5, pc}
 8000c46:	bf00      	nop
 8000c48:	200001f0 	.word	0x200001f0

08000c4c <sbrk_aligned>:
 8000c4c:	b570      	push	{r4, r5, r6, lr}
 8000c4e:	4e0f      	ldr	r6, [pc, #60]	@ (8000c8c <sbrk_aligned+0x40>)
 8000c50:	460c      	mov	r4, r1
 8000c52:	6831      	ldr	r1, [r6, #0]
 8000c54:	4605      	mov	r5, r0
 8000c56:	b911      	cbnz	r1, 8000c5e <sbrk_aligned+0x12>
 8000c58:	f000 fca6 	bl	80015a8 <_sbrk_r>
 8000c5c:	6030      	str	r0, [r6, #0]
 8000c5e:	4621      	mov	r1, r4
 8000c60:	4628      	mov	r0, r5
 8000c62:	f000 fca1 	bl	80015a8 <_sbrk_r>
 8000c66:	1c43      	adds	r3, r0, #1
 8000c68:	d103      	bne.n	8000c72 <sbrk_aligned+0x26>
 8000c6a:	f04f 34ff 	mov.w	r4, #4294967295
 8000c6e:	4620      	mov	r0, r4
 8000c70:	bd70      	pop	{r4, r5, r6, pc}
 8000c72:	1cc4      	adds	r4, r0, #3
 8000c74:	f024 0403 	bic.w	r4, r4, #3
 8000c78:	42a0      	cmp	r0, r4
 8000c7a:	d0f8      	beq.n	8000c6e <sbrk_aligned+0x22>
 8000c7c:	1a21      	subs	r1, r4, r0
 8000c7e:	4628      	mov	r0, r5
 8000c80:	f000 fc92 	bl	80015a8 <_sbrk_r>
 8000c84:	3001      	adds	r0, #1
 8000c86:	d1f2      	bne.n	8000c6e <sbrk_aligned+0x22>
 8000c88:	e7ef      	b.n	8000c6a <sbrk_aligned+0x1e>
 8000c8a:	bf00      	nop
 8000c8c:	200001ec 	.word	0x200001ec

08000c90 <_malloc_r>:
 8000c90:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000c94:	1ccd      	adds	r5, r1, #3
 8000c96:	f025 0503 	bic.w	r5, r5, #3
 8000c9a:	3508      	adds	r5, #8
 8000c9c:	2d0c      	cmp	r5, #12
 8000c9e:	bf38      	it	cc
 8000ca0:	250c      	movcc	r5, #12
 8000ca2:	2d00      	cmp	r5, #0
 8000ca4:	4606      	mov	r6, r0
 8000ca6:	db01      	blt.n	8000cac <_malloc_r+0x1c>
 8000ca8:	42a9      	cmp	r1, r5
 8000caa:	d904      	bls.n	8000cb6 <_malloc_r+0x26>
 8000cac:	230c      	movs	r3, #12
 8000cae:	6033      	str	r3, [r6, #0]
 8000cb0:	2000      	movs	r0, #0
 8000cb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000cb6:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000d8c <_malloc_r+0xfc>
 8000cba:	f000 f869 	bl	8000d90 <__malloc_lock>
 8000cbe:	f8d8 3000 	ldr.w	r3, [r8]
 8000cc2:	461c      	mov	r4, r3
 8000cc4:	bb44      	cbnz	r4, 8000d18 <_malloc_r+0x88>
 8000cc6:	4629      	mov	r1, r5
 8000cc8:	4630      	mov	r0, r6
 8000cca:	f7ff ffbf 	bl	8000c4c <sbrk_aligned>
 8000cce:	1c43      	adds	r3, r0, #1
 8000cd0:	4604      	mov	r4, r0
 8000cd2:	d158      	bne.n	8000d86 <_malloc_r+0xf6>
 8000cd4:	f8d8 4000 	ldr.w	r4, [r8]
 8000cd8:	4627      	mov	r7, r4
 8000cda:	2f00      	cmp	r7, #0
 8000cdc:	d143      	bne.n	8000d66 <_malloc_r+0xd6>
 8000cde:	2c00      	cmp	r4, #0
 8000ce0:	d04b      	beq.n	8000d7a <_malloc_r+0xea>
 8000ce2:	6823      	ldr	r3, [r4, #0]
 8000ce4:	4639      	mov	r1, r7
 8000ce6:	4630      	mov	r0, r6
 8000ce8:	eb04 0903 	add.w	r9, r4, r3
 8000cec:	f000 fc5c 	bl	80015a8 <_sbrk_r>
 8000cf0:	4581      	cmp	r9, r0
 8000cf2:	d142      	bne.n	8000d7a <_malloc_r+0xea>
 8000cf4:	6821      	ldr	r1, [r4, #0]
 8000cf6:	1a6d      	subs	r5, r5, r1
 8000cf8:	4629      	mov	r1, r5
 8000cfa:	4630      	mov	r0, r6
 8000cfc:	f7ff ffa6 	bl	8000c4c <sbrk_aligned>
 8000d00:	3001      	adds	r0, #1
 8000d02:	d03a      	beq.n	8000d7a <_malloc_r+0xea>
 8000d04:	6823      	ldr	r3, [r4, #0]
 8000d06:	442b      	add	r3, r5
 8000d08:	6023      	str	r3, [r4, #0]
 8000d0a:	f8d8 3000 	ldr.w	r3, [r8]
 8000d0e:	685a      	ldr	r2, [r3, #4]
 8000d10:	bb62      	cbnz	r2, 8000d6c <_malloc_r+0xdc>
 8000d12:	f8c8 7000 	str.w	r7, [r8]
 8000d16:	e00f      	b.n	8000d38 <_malloc_r+0xa8>
 8000d18:	6822      	ldr	r2, [r4, #0]
 8000d1a:	1b52      	subs	r2, r2, r5
 8000d1c:	d420      	bmi.n	8000d60 <_malloc_r+0xd0>
 8000d1e:	2a0b      	cmp	r2, #11
 8000d20:	d917      	bls.n	8000d52 <_malloc_r+0xc2>
 8000d22:	1961      	adds	r1, r4, r5
 8000d24:	42a3      	cmp	r3, r4
 8000d26:	6025      	str	r5, [r4, #0]
 8000d28:	bf18      	it	ne
 8000d2a:	6059      	strne	r1, [r3, #4]
 8000d2c:	6863      	ldr	r3, [r4, #4]
 8000d2e:	bf08      	it	eq
 8000d30:	f8c8 1000 	streq.w	r1, [r8]
 8000d34:	5162      	str	r2, [r4, r5]
 8000d36:	604b      	str	r3, [r1, #4]
 8000d38:	4630      	mov	r0, r6
 8000d3a:	f000 f82f 	bl	8000d9c <__malloc_unlock>
 8000d3e:	f104 000b 	add.w	r0, r4, #11
 8000d42:	1d23      	adds	r3, r4, #4
 8000d44:	f020 0007 	bic.w	r0, r0, #7
 8000d48:	1ac2      	subs	r2, r0, r3
 8000d4a:	bf1c      	itt	ne
 8000d4c:	1a1b      	subne	r3, r3, r0
 8000d4e:	50a3      	strne	r3, [r4, r2]
 8000d50:	e7af      	b.n	8000cb2 <_malloc_r+0x22>
 8000d52:	6862      	ldr	r2, [r4, #4]
 8000d54:	42a3      	cmp	r3, r4
 8000d56:	bf0c      	ite	eq
 8000d58:	f8c8 2000 	streq.w	r2, [r8]
 8000d5c:	605a      	strne	r2, [r3, #4]
 8000d5e:	e7eb      	b.n	8000d38 <_malloc_r+0xa8>
 8000d60:	4623      	mov	r3, r4
 8000d62:	6864      	ldr	r4, [r4, #4]
 8000d64:	e7ae      	b.n	8000cc4 <_malloc_r+0x34>
 8000d66:	463c      	mov	r4, r7
 8000d68:	687f      	ldr	r7, [r7, #4]
 8000d6a:	e7b6      	b.n	8000cda <_malloc_r+0x4a>
 8000d6c:	461a      	mov	r2, r3
 8000d6e:	685b      	ldr	r3, [r3, #4]
 8000d70:	42a3      	cmp	r3, r4
 8000d72:	d1fb      	bne.n	8000d6c <_malloc_r+0xdc>
 8000d74:	2300      	movs	r3, #0
 8000d76:	6053      	str	r3, [r2, #4]
 8000d78:	e7de      	b.n	8000d38 <_malloc_r+0xa8>
 8000d7a:	230c      	movs	r3, #12
 8000d7c:	6033      	str	r3, [r6, #0]
 8000d7e:	4630      	mov	r0, r6
 8000d80:	f000 f80c 	bl	8000d9c <__malloc_unlock>
 8000d84:	e794      	b.n	8000cb0 <_malloc_r+0x20>
 8000d86:	6005      	str	r5, [r0, #0]
 8000d88:	e7d6      	b.n	8000d38 <_malloc_r+0xa8>
 8000d8a:	bf00      	nop
 8000d8c:	200001f0 	.word	0x200001f0

08000d90 <__malloc_lock>:
 8000d90:	4801      	ldr	r0, [pc, #4]	@ (8000d98 <__malloc_lock+0x8>)
 8000d92:	f7ff bf0e 	b.w	8000bb2 <__retarget_lock_acquire_recursive>
 8000d96:	bf00      	nop
 8000d98:	200001e8 	.word	0x200001e8

08000d9c <__malloc_unlock>:
 8000d9c:	4801      	ldr	r0, [pc, #4]	@ (8000da4 <__malloc_unlock+0x8>)
 8000d9e:	f7ff bf09 	b.w	8000bb4 <__retarget_lock_release_recursive>
 8000da2:	bf00      	nop
 8000da4:	200001e8 	.word	0x200001e8

08000da8 <__sfputc_r>:
 8000da8:	6893      	ldr	r3, [r2, #8]
 8000daa:	3b01      	subs	r3, #1
 8000dac:	2b00      	cmp	r3, #0
 8000dae:	b410      	push	{r4}
 8000db0:	6093      	str	r3, [r2, #8]
 8000db2:	da08      	bge.n	8000dc6 <__sfputc_r+0x1e>
 8000db4:	6994      	ldr	r4, [r2, #24]
 8000db6:	42a3      	cmp	r3, r4
 8000db8:	db01      	blt.n	8000dbe <__sfputc_r+0x16>
 8000dba:	290a      	cmp	r1, #10
 8000dbc:	d103      	bne.n	8000dc6 <__sfputc_r+0x1e>
 8000dbe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dc2:	f7ff bde8 	b.w	8000996 <__swbuf_r>
 8000dc6:	6813      	ldr	r3, [r2, #0]
 8000dc8:	1c58      	adds	r0, r3, #1
 8000dca:	6010      	str	r0, [r2, #0]
 8000dcc:	7019      	strb	r1, [r3, #0]
 8000dce:	4608      	mov	r0, r1
 8000dd0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000dd4:	4770      	bx	lr

08000dd6 <__sfputs_r>:
 8000dd6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dd8:	4606      	mov	r6, r0
 8000dda:	460f      	mov	r7, r1
 8000ddc:	4614      	mov	r4, r2
 8000dde:	18d5      	adds	r5, r2, r3
 8000de0:	42ac      	cmp	r4, r5
 8000de2:	d101      	bne.n	8000de8 <__sfputs_r+0x12>
 8000de4:	2000      	movs	r0, #0
 8000de6:	e007      	b.n	8000df8 <__sfputs_r+0x22>
 8000de8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000dec:	463a      	mov	r2, r7
 8000dee:	4630      	mov	r0, r6
 8000df0:	f7ff ffda 	bl	8000da8 <__sfputc_r>
 8000df4:	1c43      	adds	r3, r0, #1
 8000df6:	d1f3      	bne.n	8000de0 <__sfputs_r+0xa>
 8000df8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000dfc <_vfiprintf_r>:
 8000dfc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e00:	460d      	mov	r5, r1
 8000e02:	b09d      	sub	sp, #116	@ 0x74
 8000e04:	4614      	mov	r4, r2
 8000e06:	4698      	mov	r8, r3
 8000e08:	4606      	mov	r6, r0
 8000e0a:	b118      	cbz	r0, 8000e14 <_vfiprintf_r+0x18>
 8000e0c:	6a03      	ldr	r3, [r0, #32]
 8000e0e:	b90b      	cbnz	r3, 8000e14 <_vfiprintf_r+0x18>
 8000e10:	f7ff fcd8 	bl	80007c4 <__sinit>
 8000e14:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e16:	07d9      	lsls	r1, r3, #31
 8000e18:	d405      	bmi.n	8000e26 <_vfiprintf_r+0x2a>
 8000e1a:	89ab      	ldrh	r3, [r5, #12]
 8000e1c:	059a      	lsls	r2, r3, #22
 8000e1e:	d402      	bmi.n	8000e26 <_vfiprintf_r+0x2a>
 8000e20:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e22:	f7ff fec6 	bl	8000bb2 <__retarget_lock_acquire_recursive>
 8000e26:	89ab      	ldrh	r3, [r5, #12]
 8000e28:	071b      	lsls	r3, r3, #28
 8000e2a:	d501      	bpl.n	8000e30 <_vfiprintf_r+0x34>
 8000e2c:	692b      	ldr	r3, [r5, #16]
 8000e2e:	b99b      	cbnz	r3, 8000e58 <_vfiprintf_r+0x5c>
 8000e30:	4629      	mov	r1, r5
 8000e32:	4630      	mov	r0, r6
 8000e34:	f7ff fdee 	bl	8000a14 <__swsetup_r>
 8000e38:	b170      	cbz	r0, 8000e58 <_vfiprintf_r+0x5c>
 8000e3a:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000e3c:	07dc      	lsls	r4, r3, #31
 8000e3e:	d504      	bpl.n	8000e4a <_vfiprintf_r+0x4e>
 8000e40:	f04f 30ff 	mov.w	r0, #4294967295
 8000e44:	b01d      	add	sp, #116	@ 0x74
 8000e46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000e4a:	89ab      	ldrh	r3, [r5, #12]
 8000e4c:	0598      	lsls	r0, r3, #22
 8000e4e:	d4f7      	bmi.n	8000e40 <_vfiprintf_r+0x44>
 8000e50:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000e52:	f7ff feaf 	bl	8000bb4 <__retarget_lock_release_recursive>
 8000e56:	e7f3      	b.n	8000e40 <_vfiprintf_r+0x44>
 8000e58:	2300      	movs	r3, #0
 8000e5a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000e5c:	2320      	movs	r3, #32
 8000e5e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000e62:	f8cd 800c 	str.w	r8, [sp, #12]
 8000e66:	2330      	movs	r3, #48	@ 0x30
 8000e68:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8001018 <_vfiprintf_r+0x21c>
 8000e6c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000e70:	f04f 0901 	mov.w	r9, #1
 8000e74:	4623      	mov	r3, r4
 8000e76:	469a      	mov	sl, r3
 8000e78:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000e7c:	b10a      	cbz	r2, 8000e82 <_vfiprintf_r+0x86>
 8000e7e:	2a25      	cmp	r2, #37	@ 0x25
 8000e80:	d1f9      	bne.n	8000e76 <_vfiprintf_r+0x7a>
 8000e82:	ebba 0b04 	subs.w	fp, sl, r4
 8000e86:	d00b      	beq.n	8000ea0 <_vfiprintf_r+0xa4>
 8000e88:	465b      	mov	r3, fp
 8000e8a:	4622      	mov	r2, r4
 8000e8c:	4629      	mov	r1, r5
 8000e8e:	4630      	mov	r0, r6
 8000e90:	f7ff ffa1 	bl	8000dd6 <__sfputs_r>
 8000e94:	3001      	adds	r0, #1
 8000e96:	f000 80a7 	beq.w	8000fe8 <_vfiprintf_r+0x1ec>
 8000e9a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000e9c:	445a      	add	r2, fp
 8000e9e:	9209      	str	r2, [sp, #36]	@ 0x24
 8000ea0:	f89a 3000 	ldrb.w	r3, [sl]
 8000ea4:	2b00      	cmp	r3, #0
 8000ea6:	f000 809f 	beq.w	8000fe8 <_vfiprintf_r+0x1ec>
 8000eaa:	2300      	movs	r3, #0
 8000eac:	f04f 32ff 	mov.w	r2, #4294967295
 8000eb0:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000eb4:	f10a 0a01 	add.w	sl, sl, #1
 8000eb8:	9304      	str	r3, [sp, #16]
 8000eba:	9307      	str	r3, [sp, #28]
 8000ebc:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000ec0:	931a      	str	r3, [sp, #104]	@ 0x68
 8000ec2:	4654      	mov	r4, sl
 8000ec4:	2205      	movs	r2, #5
 8000ec6:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000eca:	4853      	ldr	r0, [pc, #332]	@ (8001018 <_vfiprintf_r+0x21c>)
 8000ecc:	f7ff f988 	bl	80001e0 <memchr>
 8000ed0:	9a04      	ldr	r2, [sp, #16]
 8000ed2:	b9d8      	cbnz	r0, 8000f0c <_vfiprintf_r+0x110>
 8000ed4:	06d1      	lsls	r1, r2, #27
 8000ed6:	bf44      	itt	mi
 8000ed8:	2320      	movmi	r3, #32
 8000eda:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ede:	0713      	lsls	r3, r2, #28
 8000ee0:	bf44      	itt	mi
 8000ee2:	232b      	movmi	r3, #43	@ 0x2b
 8000ee4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000ee8:	f89a 3000 	ldrb.w	r3, [sl]
 8000eec:	2b2a      	cmp	r3, #42	@ 0x2a
 8000eee:	d015      	beq.n	8000f1c <_vfiprintf_r+0x120>
 8000ef0:	9a07      	ldr	r2, [sp, #28]
 8000ef2:	4654      	mov	r4, sl
 8000ef4:	2000      	movs	r0, #0
 8000ef6:	f04f 0c0a 	mov.w	ip, #10
 8000efa:	4621      	mov	r1, r4
 8000efc:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000f00:	3b30      	subs	r3, #48	@ 0x30
 8000f02:	2b09      	cmp	r3, #9
 8000f04:	d94b      	bls.n	8000f9e <_vfiprintf_r+0x1a2>
 8000f06:	b1b0      	cbz	r0, 8000f36 <_vfiprintf_r+0x13a>
 8000f08:	9207      	str	r2, [sp, #28]
 8000f0a:	e014      	b.n	8000f36 <_vfiprintf_r+0x13a>
 8000f0c:	eba0 0308 	sub.w	r3, r0, r8
 8000f10:	fa09 f303 	lsl.w	r3, r9, r3
 8000f14:	4313      	orrs	r3, r2
 8000f16:	9304      	str	r3, [sp, #16]
 8000f18:	46a2      	mov	sl, r4
 8000f1a:	e7d2      	b.n	8000ec2 <_vfiprintf_r+0xc6>
 8000f1c:	9b03      	ldr	r3, [sp, #12]
 8000f1e:	1d19      	adds	r1, r3, #4
 8000f20:	681b      	ldr	r3, [r3, #0]
 8000f22:	9103      	str	r1, [sp, #12]
 8000f24:	2b00      	cmp	r3, #0
 8000f26:	bfbb      	ittet	lt
 8000f28:	425b      	neglt	r3, r3
 8000f2a:	f042 0202 	orrlt.w	r2, r2, #2
 8000f2e:	9307      	strge	r3, [sp, #28]
 8000f30:	9307      	strlt	r3, [sp, #28]
 8000f32:	bfb8      	it	lt
 8000f34:	9204      	strlt	r2, [sp, #16]
 8000f36:	7823      	ldrb	r3, [r4, #0]
 8000f38:	2b2e      	cmp	r3, #46	@ 0x2e
 8000f3a:	d10a      	bne.n	8000f52 <_vfiprintf_r+0x156>
 8000f3c:	7863      	ldrb	r3, [r4, #1]
 8000f3e:	2b2a      	cmp	r3, #42	@ 0x2a
 8000f40:	d132      	bne.n	8000fa8 <_vfiprintf_r+0x1ac>
 8000f42:	9b03      	ldr	r3, [sp, #12]
 8000f44:	1d1a      	adds	r2, r3, #4
 8000f46:	681b      	ldr	r3, [r3, #0]
 8000f48:	9203      	str	r2, [sp, #12]
 8000f4a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000f4e:	3402      	adds	r4, #2
 8000f50:	9305      	str	r3, [sp, #20]
 8000f52:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8001028 <_vfiprintf_r+0x22c>
 8000f56:	7821      	ldrb	r1, [r4, #0]
 8000f58:	2203      	movs	r2, #3
 8000f5a:	4650      	mov	r0, sl
 8000f5c:	f7ff f940 	bl	80001e0 <memchr>
 8000f60:	b138      	cbz	r0, 8000f72 <_vfiprintf_r+0x176>
 8000f62:	9b04      	ldr	r3, [sp, #16]
 8000f64:	eba0 000a 	sub.w	r0, r0, sl
 8000f68:	2240      	movs	r2, #64	@ 0x40
 8000f6a:	4082      	lsls	r2, r0
 8000f6c:	4313      	orrs	r3, r2
 8000f6e:	3401      	adds	r4, #1
 8000f70:	9304      	str	r3, [sp, #16]
 8000f72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f76:	4829      	ldr	r0, [pc, #164]	@ (800101c <_vfiprintf_r+0x220>)
 8000f78:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000f7c:	2206      	movs	r2, #6
 8000f7e:	f7ff f92f 	bl	80001e0 <memchr>
 8000f82:	2800      	cmp	r0, #0
 8000f84:	d03f      	beq.n	8001006 <_vfiprintf_r+0x20a>
 8000f86:	4b26      	ldr	r3, [pc, #152]	@ (8001020 <_vfiprintf_r+0x224>)
 8000f88:	bb1b      	cbnz	r3, 8000fd2 <_vfiprintf_r+0x1d6>
 8000f8a:	9b03      	ldr	r3, [sp, #12]
 8000f8c:	3307      	adds	r3, #7
 8000f8e:	f023 0307 	bic.w	r3, r3, #7
 8000f92:	3308      	adds	r3, #8
 8000f94:	9303      	str	r3, [sp, #12]
 8000f96:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000f98:	443b      	add	r3, r7
 8000f9a:	9309      	str	r3, [sp, #36]	@ 0x24
 8000f9c:	e76a      	b.n	8000e74 <_vfiprintf_r+0x78>
 8000f9e:	fb0c 3202 	mla	r2, ip, r2, r3
 8000fa2:	460c      	mov	r4, r1
 8000fa4:	2001      	movs	r0, #1
 8000fa6:	e7a8      	b.n	8000efa <_vfiprintf_r+0xfe>
 8000fa8:	2300      	movs	r3, #0
 8000faa:	3401      	adds	r4, #1
 8000fac:	9305      	str	r3, [sp, #20]
 8000fae:	4619      	mov	r1, r3
 8000fb0:	f04f 0c0a 	mov.w	ip, #10
 8000fb4:	4620      	mov	r0, r4
 8000fb6:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000fba:	3a30      	subs	r2, #48	@ 0x30
 8000fbc:	2a09      	cmp	r2, #9
 8000fbe:	d903      	bls.n	8000fc8 <_vfiprintf_r+0x1cc>
 8000fc0:	2b00      	cmp	r3, #0
 8000fc2:	d0c6      	beq.n	8000f52 <_vfiprintf_r+0x156>
 8000fc4:	9105      	str	r1, [sp, #20]
 8000fc6:	e7c4      	b.n	8000f52 <_vfiprintf_r+0x156>
 8000fc8:	fb0c 2101 	mla	r1, ip, r1, r2
 8000fcc:	4604      	mov	r4, r0
 8000fce:	2301      	movs	r3, #1
 8000fd0:	e7f0      	b.n	8000fb4 <_vfiprintf_r+0x1b8>
 8000fd2:	ab03      	add	r3, sp, #12
 8000fd4:	9300      	str	r3, [sp, #0]
 8000fd6:	462a      	mov	r2, r5
 8000fd8:	4b12      	ldr	r3, [pc, #72]	@ (8001024 <_vfiprintf_r+0x228>)
 8000fda:	a904      	add	r1, sp, #16
 8000fdc:	4630      	mov	r0, r6
 8000fde:	f3af 8000 	nop.w
 8000fe2:	4607      	mov	r7, r0
 8000fe4:	1c78      	adds	r0, r7, #1
 8000fe6:	d1d6      	bne.n	8000f96 <_vfiprintf_r+0x19a>
 8000fe8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000fea:	07d9      	lsls	r1, r3, #31
 8000fec:	d405      	bmi.n	8000ffa <_vfiprintf_r+0x1fe>
 8000fee:	89ab      	ldrh	r3, [r5, #12]
 8000ff0:	059a      	lsls	r2, r3, #22
 8000ff2:	d402      	bmi.n	8000ffa <_vfiprintf_r+0x1fe>
 8000ff4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ff6:	f7ff fddd 	bl	8000bb4 <__retarget_lock_release_recursive>
 8000ffa:	89ab      	ldrh	r3, [r5, #12]
 8000ffc:	065b      	lsls	r3, r3, #25
 8000ffe:	f53f af1f 	bmi.w	8000e40 <_vfiprintf_r+0x44>
 8001002:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8001004:	e71e      	b.n	8000e44 <_vfiprintf_r+0x48>
 8001006:	ab03      	add	r3, sp, #12
 8001008:	9300      	str	r3, [sp, #0]
 800100a:	462a      	mov	r2, r5
 800100c:	4b05      	ldr	r3, [pc, #20]	@ (8001024 <_vfiprintf_r+0x228>)
 800100e:	a904      	add	r1, sp, #16
 8001010:	4630      	mov	r0, r6
 8001012:	f000 f879 	bl	8001108 <_printf_i>
 8001016:	e7e4      	b.n	8000fe2 <_vfiprintf_r+0x1e6>
 8001018:	0800162f 	.word	0x0800162f
 800101c:	08001639 	.word	0x08001639
 8001020:	00000000 	.word	0x00000000
 8001024:	08000dd7 	.word	0x08000dd7
 8001028:	08001635 	.word	0x08001635

0800102c <_printf_common>:
 800102c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8001030:	4616      	mov	r6, r2
 8001032:	4698      	mov	r8, r3
 8001034:	688a      	ldr	r2, [r1, #8]
 8001036:	690b      	ldr	r3, [r1, #16]
 8001038:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800103c:	4293      	cmp	r3, r2
 800103e:	bfb8      	it	lt
 8001040:	4613      	movlt	r3, r2
 8001042:	6033      	str	r3, [r6, #0]
 8001044:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001048:	4607      	mov	r7, r0
 800104a:	460c      	mov	r4, r1
 800104c:	b10a      	cbz	r2, 8001052 <_printf_common+0x26>
 800104e:	3301      	adds	r3, #1
 8001050:	6033      	str	r3, [r6, #0]
 8001052:	6823      	ldr	r3, [r4, #0]
 8001054:	0699      	lsls	r1, r3, #26
 8001056:	bf42      	ittt	mi
 8001058:	6833      	ldrmi	r3, [r6, #0]
 800105a:	3302      	addmi	r3, #2
 800105c:	6033      	strmi	r3, [r6, #0]
 800105e:	6825      	ldr	r5, [r4, #0]
 8001060:	f015 0506 	ands.w	r5, r5, #6
 8001064:	d106      	bne.n	8001074 <_printf_common+0x48>
 8001066:	f104 0a19 	add.w	sl, r4, #25
 800106a:	68e3      	ldr	r3, [r4, #12]
 800106c:	6832      	ldr	r2, [r6, #0]
 800106e:	1a9b      	subs	r3, r3, r2
 8001070:	42ab      	cmp	r3, r5
 8001072:	dc26      	bgt.n	80010c2 <_printf_common+0x96>
 8001074:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8001078:	6822      	ldr	r2, [r4, #0]
 800107a:	3b00      	subs	r3, #0
 800107c:	bf18      	it	ne
 800107e:	2301      	movne	r3, #1
 8001080:	0692      	lsls	r2, r2, #26
 8001082:	d42b      	bmi.n	80010dc <_printf_common+0xb0>
 8001084:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8001088:	4641      	mov	r1, r8
 800108a:	4638      	mov	r0, r7
 800108c:	47c8      	blx	r9
 800108e:	3001      	adds	r0, #1
 8001090:	d01e      	beq.n	80010d0 <_printf_common+0xa4>
 8001092:	6823      	ldr	r3, [r4, #0]
 8001094:	6922      	ldr	r2, [r4, #16]
 8001096:	f003 0306 	and.w	r3, r3, #6
 800109a:	2b04      	cmp	r3, #4
 800109c:	bf02      	ittt	eq
 800109e:	68e5      	ldreq	r5, [r4, #12]
 80010a0:	6833      	ldreq	r3, [r6, #0]
 80010a2:	1aed      	subeq	r5, r5, r3
 80010a4:	68a3      	ldr	r3, [r4, #8]
 80010a6:	bf0c      	ite	eq
 80010a8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80010ac:	2500      	movne	r5, #0
 80010ae:	4293      	cmp	r3, r2
 80010b0:	bfc4      	itt	gt
 80010b2:	1a9b      	subgt	r3, r3, r2
 80010b4:	18ed      	addgt	r5, r5, r3
 80010b6:	2600      	movs	r6, #0
 80010b8:	341a      	adds	r4, #26
 80010ba:	42b5      	cmp	r5, r6
 80010bc:	d11a      	bne.n	80010f4 <_printf_common+0xc8>
 80010be:	2000      	movs	r0, #0
 80010c0:	e008      	b.n	80010d4 <_printf_common+0xa8>
 80010c2:	2301      	movs	r3, #1
 80010c4:	4652      	mov	r2, sl
 80010c6:	4641      	mov	r1, r8
 80010c8:	4638      	mov	r0, r7
 80010ca:	47c8      	blx	r9
 80010cc:	3001      	adds	r0, #1
 80010ce:	d103      	bne.n	80010d8 <_printf_common+0xac>
 80010d0:	f04f 30ff 	mov.w	r0, #4294967295
 80010d4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80010d8:	3501      	adds	r5, #1
 80010da:	e7c6      	b.n	800106a <_printf_common+0x3e>
 80010dc:	18e1      	adds	r1, r4, r3
 80010de:	1c5a      	adds	r2, r3, #1
 80010e0:	2030      	movs	r0, #48	@ 0x30
 80010e2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80010e6:	4422      	add	r2, r4
 80010e8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80010ec:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80010f0:	3302      	adds	r3, #2
 80010f2:	e7c7      	b.n	8001084 <_printf_common+0x58>
 80010f4:	2301      	movs	r3, #1
 80010f6:	4622      	mov	r2, r4
 80010f8:	4641      	mov	r1, r8
 80010fa:	4638      	mov	r0, r7
 80010fc:	47c8      	blx	r9
 80010fe:	3001      	adds	r0, #1
 8001100:	d0e6      	beq.n	80010d0 <_printf_common+0xa4>
 8001102:	3601      	adds	r6, #1
 8001104:	e7d9      	b.n	80010ba <_printf_common+0x8e>
	...

08001108 <_printf_i>:
 8001108:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800110c:	7e0f      	ldrb	r7, [r1, #24]
 800110e:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8001110:	2f78      	cmp	r7, #120	@ 0x78
 8001112:	4691      	mov	r9, r2
 8001114:	4680      	mov	r8, r0
 8001116:	460c      	mov	r4, r1
 8001118:	469a      	mov	sl, r3
 800111a:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800111e:	d807      	bhi.n	8001130 <_printf_i+0x28>
 8001120:	2f62      	cmp	r7, #98	@ 0x62
 8001122:	d80a      	bhi.n	800113a <_printf_i+0x32>
 8001124:	2f00      	cmp	r7, #0
 8001126:	f000 80d2 	beq.w	80012ce <_printf_i+0x1c6>
 800112a:	2f58      	cmp	r7, #88	@ 0x58
 800112c:	f000 80b9 	beq.w	80012a2 <_printf_i+0x19a>
 8001130:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001134:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001138:	e03a      	b.n	80011b0 <_printf_i+0xa8>
 800113a:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800113e:	2b15      	cmp	r3, #21
 8001140:	d8f6      	bhi.n	8001130 <_printf_i+0x28>
 8001142:	a101      	add	r1, pc, #4	@ (adr r1, 8001148 <_printf_i+0x40>)
 8001144:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001148:	080011a1 	.word	0x080011a1
 800114c:	080011b5 	.word	0x080011b5
 8001150:	08001131 	.word	0x08001131
 8001154:	08001131 	.word	0x08001131
 8001158:	08001131 	.word	0x08001131
 800115c:	08001131 	.word	0x08001131
 8001160:	080011b5 	.word	0x080011b5
 8001164:	08001131 	.word	0x08001131
 8001168:	08001131 	.word	0x08001131
 800116c:	08001131 	.word	0x08001131
 8001170:	08001131 	.word	0x08001131
 8001174:	080012b5 	.word	0x080012b5
 8001178:	080011df 	.word	0x080011df
 800117c:	0800126f 	.word	0x0800126f
 8001180:	08001131 	.word	0x08001131
 8001184:	08001131 	.word	0x08001131
 8001188:	080012d7 	.word	0x080012d7
 800118c:	08001131 	.word	0x08001131
 8001190:	080011df 	.word	0x080011df
 8001194:	08001131 	.word	0x08001131
 8001198:	08001131 	.word	0x08001131
 800119c:	08001277 	.word	0x08001277
 80011a0:	6833      	ldr	r3, [r6, #0]
 80011a2:	1d1a      	adds	r2, r3, #4
 80011a4:	681b      	ldr	r3, [r3, #0]
 80011a6:	6032      	str	r2, [r6, #0]
 80011a8:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80011ac:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80011b0:	2301      	movs	r3, #1
 80011b2:	e09d      	b.n	80012f0 <_printf_i+0x1e8>
 80011b4:	6833      	ldr	r3, [r6, #0]
 80011b6:	6820      	ldr	r0, [r4, #0]
 80011b8:	1d19      	adds	r1, r3, #4
 80011ba:	6031      	str	r1, [r6, #0]
 80011bc:	0606      	lsls	r6, r0, #24
 80011be:	d501      	bpl.n	80011c4 <_printf_i+0xbc>
 80011c0:	681d      	ldr	r5, [r3, #0]
 80011c2:	e003      	b.n	80011cc <_printf_i+0xc4>
 80011c4:	0645      	lsls	r5, r0, #25
 80011c6:	d5fb      	bpl.n	80011c0 <_printf_i+0xb8>
 80011c8:	f9b3 5000 	ldrsh.w	r5, [r3]
 80011cc:	2d00      	cmp	r5, #0
 80011ce:	da03      	bge.n	80011d8 <_printf_i+0xd0>
 80011d0:	232d      	movs	r3, #45	@ 0x2d
 80011d2:	426d      	negs	r5, r5
 80011d4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80011d8:	4859      	ldr	r0, [pc, #356]	@ (8001340 <_printf_i+0x238>)
 80011da:	230a      	movs	r3, #10
 80011dc:	e011      	b.n	8001202 <_printf_i+0xfa>
 80011de:	6821      	ldr	r1, [r4, #0]
 80011e0:	6833      	ldr	r3, [r6, #0]
 80011e2:	0608      	lsls	r0, r1, #24
 80011e4:	f853 5b04 	ldr.w	r5, [r3], #4
 80011e8:	d402      	bmi.n	80011f0 <_printf_i+0xe8>
 80011ea:	0649      	lsls	r1, r1, #25
 80011ec:	bf48      	it	mi
 80011ee:	b2ad      	uxthmi	r5, r5
 80011f0:	2f6f      	cmp	r7, #111	@ 0x6f
 80011f2:	4853      	ldr	r0, [pc, #332]	@ (8001340 <_printf_i+0x238>)
 80011f4:	6033      	str	r3, [r6, #0]
 80011f6:	bf14      	ite	ne
 80011f8:	230a      	movne	r3, #10
 80011fa:	2308      	moveq	r3, #8
 80011fc:	2100      	movs	r1, #0
 80011fe:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8001202:	6866      	ldr	r6, [r4, #4]
 8001204:	60a6      	str	r6, [r4, #8]
 8001206:	2e00      	cmp	r6, #0
 8001208:	bfa2      	ittt	ge
 800120a:	6821      	ldrge	r1, [r4, #0]
 800120c:	f021 0104 	bicge.w	r1, r1, #4
 8001210:	6021      	strge	r1, [r4, #0]
 8001212:	b90d      	cbnz	r5, 8001218 <_printf_i+0x110>
 8001214:	2e00      	cmp	r6, #0
 8001216:	d04b      	beq.n	80012b0 <_printf_i+0x1a8>
 8001218:	4616      	mov	r6, r2
 800121a:	fbb5 f1f3 	udiv	r1, r5, r3
 800121e:	fb03 5711 	mls	r7, r3, r1, r5
 8001222:	5dc7      	ldrb	r7, [r0, r7]
 8001224:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001228:	462f      	mov	r7, r5
 800122a:	42bb      	cmp	r3, r7
 800122c:	460d      	mov	r5, r1
 800122e:	d9f4      	bls.n	800121a <_printf_i+0x112>
 8001230:	2b08      	cmp	r3, #8
 8001232:	d10b      	bne.n	800124c <_printf_i+0x144>
 8001234:	6823      	ldr	r3, [r4, #0]
 8001236:	07df      	lsls	r7, r3, #31
 8001238:	d508      	bpl.n	800124c <_printf_i+0x144>
 800123a:	6923      	ldr	r3, [r4, #16]
 800123c:	6861      	ldr	r1, [r4, #4]
 800123e:	4299      	cmp	r1, r3
 8001240:	bfde      	ittt	le
 8001242:	2330      	movle	r3, #48	@ 0x30
 8001244:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001248:	f106 36ff 	addle.w	r6, r6, #4294967295
 800124c:	1b92      	subs	r2, r2, r6
 800124e:	6122      	str	r2, [r4, #16]
 8001250:	f8cd a000 	str.w	sl, [sp]
 8001254:	464b      	mov	r3, r9
 8001256:	aa03      	add	r2, sp, #12
 8001258:	4621      	mov	r1, r4
 800125a:	4640      	mov	r0, r8
 800125c:	f7ff fee6 	bl	800102c <_printf_common>
 8001260:	3001      	adds	r0, #1
 8001262:	d14a      	bne.n	80012fa <_printf_i+0x1f2>
 8001264:	f04f 30ff 	mov.w	r0, #4294967295
 8001268:	b004      	add	sp, #16
 800126a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800126e:	6823      	ldr	r3, [r4, #0]
 8001270:	f043 0320 	orr.w	r3, r3, #32
 8001274:	6023      	str	r3, [r4, #0]
 8001276:	4833      	ldr	r0, [pc, #204]	@ (8001344 <_printf_i+0x23c>)
 8001278:	2778      	movs	r7, #120	@ 0x78
 800127a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 800127e:	6823      	ldr	r3, [r4, #0]
 8001280:	6831      	ldr	r1, [r6, #0]
 8001282:	061f      	lsls	r7, r3, #24
 8001284:	f851 5b04 	ldr.w	r5, [r1], #4
 8001288:	d402      	bmi.n	8001290 <_printf_i+0x188>
 800128a:	065f      	lsls	r7, r3, #25
 800128c:	bf48      	it	mi
 800128e:	b2ad      	uxthmi	r5, r5
 8001290:	6031      	str	r1, [r6, #0]
 8001292:	07d9      	lsls	r1, r3, #31
 8001294:	bf44      	itt	mi
 8001296:	f043 0320 	orrmi.w	r3, r3, #32
 800129a:	6023      	strmi	r3, [r4, #0]
 800129c:	b11d      	cbz	r5, 80012a6 <_printf_i+0x19e>
 800129e:	2310      	movs	r3, #16
 80012a0:	e7ac      	b.n	80011fc <_printf_i+0xf4>
 80012a2:	4827      	ldr	r0, [pc, #156]	@ (8001340 <_printf_i+0x238>)
 80012a4:	e7e9      	b.n	800127a <_printf_i+0x172>
 80012a6:	6823      	ldr	r3, [r4, #0]
 80012a8:	f023 0320 	bic.w	r3, r3, #32
 80012ac:	6023      	str	r3, [r4, #0]
 80012ae:	e7f6      	b.n	800129e <_printf_i+0x196>
 80012b0:	4616      	mov	r6, r2
 80012b2:	e7bd      	b.n	8001230 <_printf_i+0x128>
 80012b4:	6833      	ldr	r3, [r6, #0]
 80012b6:	6825      	ldr	r5, [r4, #0]
 80012b8:	6961      	ldr	r1, [r4, #20]
 80012ba:	1d18      	adds	r0, r3, #4
 80012bc:	6030      	str	r0, [r6, #0]
 80012be:	062e      	lsls	r6, r5, #24
 80012c0:	681b      	ldr	r3, [r3, #0]
 80012c2:	d501      	bpl.n	80012c8 <_printf_i+0x1c0>
 80012c4:	6019      	str	r1, [r3, #0]
 80012c6:	e002      	b.n	80012ce <_printf_i+0x1c6>
 80012c8:	0668      	lsls	r0, r5, #25
 80012ca:	d5fb      	bpl.n	80012c4 <_printf_i+0x1bc>
 80012cc:	8019      	strh	r1, [r3, #0]
 80012ce:	2300      	movs	r3, #0
 80012d0:	6123      	str	r3, [r4, #16]
 80012d2:	4616      	mov	r6, r2
 80012d4:	e7bc      	b.n	8001250 <_printf_i+0x148>
 80012d6:	6833      	ldr	r3, [r6, #0]
 80012d8:	1d1a      	adds	r2, r3, #4
 80012da:	6032      	str	r2, [r6, #0]
 80012dc:	681e      	ldr	r6, [r3, #0]
 80012de:	6862      	ldr	r2, [r4, #4]
 80012e0:	2100      	movs	r1, #0
 80012e2:	4630      	mov	r0, r6
 80012e4:	f7fe ff7c 	bl	80001e0 <memchr>
 80012e8:	b108      	cbz	r0, 80012ee <_printf_i+0x1e6>
 80012ea:	1b80      	subs	r0, r0, r6
 80012ec:	6060      	str	r0, [r4, #4]
 80012ee:	6863      	ldr	r3, [r4, #4]
 80012f0:	6123      	str	r3, [r4, #16]
 80012f2:	2300      	movs	r3, #0
 80012f4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 80012f8:	e7aa      	b.n	8001250 <_printf_i+0x148>
 80012fa:	6923      	ldr	r3, [r4, #16]
 80012fc:	4632      	mov	r2, r6
 80012fe:	4649      	mov	r1, r9
 8001300:	4640      	mov	r0, r8
 8001302:	47d0      	blx	sl
 8001304:	3001      	adds	r0, #1
 8001306:	d0ad      	beq.n	8001264 <_printf_i+0x15c>
 8001308:	6823      	ldr	r3, [r4, #0]
 800130a:	079b      	lsls	r3, r3, #30
 800130c:	d413      	bmi.n	8001336 <_printf_i+0x22e>
 800130e:	68e0      	ldr	r0, [r4, #12]
 8001310:	9b03      	ldr	r3, [sp, #12]
 8001312:	4298      	cmp	r0, r3
 8001314:	bfb8      	it	lt
 8001316:	4618      	movlt	r0, r3
 8001318:	e7a6      	b.n	8001268 <_printf_i+0x160>
 800131a:	2301      	movs	r3, #1
 800131c:	4632      	mov	r2, r6
 800131e:	4649      	mov	r1, r9
 8001320:	4640      	mov	r0, r8
 8001322:	47d0      	blx	sl
 8001324:	3001      	adds	r0, #1
 8001326:	d09d      	beq.n	8001264 <_printf_i+0x15c>
 8001328:	3501      	adds	r5, #1
 800132a:	68e3      	ldr	r3, [r4, #12]
 800132c:	9903      	ldr	r1, [sp, #12]
 800132e:	1a5b      	subs	r3, r3, r1
 8001330:	42ab      	cmp	r3, r5
 8001332:	dcf2      	bgt.n	800131a <_printf_i+0x212>
 8001334:	e7eb      	b.n	800130e <_printf_i+0x206>
 8001336:	2500      	movs	r5, #0
 8001338:	f104 0619 	add.w	r6, r4, #25
 800133c:	e7f5      	b.n	800132a <_printf_i+0x222>
 800133e:	bf00      	nop
 8001340:	08001640 	.word	0x08001640
 8001344:	08001651 	.word	0x08001651

08001348 <__sflush_r>:
 8001348:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 800134c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001350:	0716      	lsls	r6, r2, #28
 8001352:	4605      	mov	r5, r0
 8001354:	460c      	mov	r4, r1
 8001356:	d454      	bmi.n	8001402 <__sflush_r+0xba>
 8001358:	684b      	ldr	r3, [r1, #4]
 800135a:	2b00      	cmp	r3, #0
 800135c:	dc02      	bgt.n	8001364 <__sflush_r+0x1c>
 800135e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8001360:	2b00      	cmp	r3, #0
 8001362:	dd48      	ble.n	80013f6 <__sflush_r+0xae>
 8001364:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001366:	2e00      	cmp	r6, #0
 8001368:	d045      	beq.n	80013f6 <__sflush_r+0xae>
 800136a:	2300      	movs	r3, #0
 800136c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8001370:	682f      	ldr	r7, [r5, #0]
 8001372:	6a21      	ldr	r1, [r4, #32]
 8001374:	602b      	str	r3, [r5, #0]
 8001376:	d030      	beq.n	80013da <__sflush_r+0x92>
 8001378:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 800137a:	89a3      	ldrh	r3, [r4, #12]
 800137c:	0759      	lsls	r1, r3, #29
 800137e:	d505      	bpl.n	800138c <__sflush_r+0x44>
 8001380:	6863      	ldr	r3, [r4, #4]
 8001382:	1ad2      	subs	r2, r2, r3
 8001384:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001386:	b10b      	cbz	r3, 800138c <__sflush_r+0x44>
 8001388:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 800138a:	1ad2      	subs	r2, r2, r3
 800138c:	2300      	movs	r3, #0
 800138e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001390:	6a21      	ldr	r1, [r4, #32]
 8001392:	4628      	mov	r0, r5
 8001394:	47b0      	blx	r6
 8001396:	1c43      	adds	r3, r0, #1
 8001398:	89a3      	ldrh	r3, [r4, #12]
 800139a:	d106      	bne.n	80013aa <__sflush_r+0x62>
 800139c:	6829      	ldr	r1, [r5, #0]
 800139e:	291d      	cmp	r1, #29
 80013a0:	d82b      	bhi.n	80013fa <__sflush_r+0xb2>
 80013a2:	4a2a      	ldr	r2, [pc, #168]	@ (800144c <__sflush_r+0x104>)
 80013a4:	410a      	asrs	r2, r1
 80013a6:	07d6      	lsls	r6, r2, #31
 80013a8:	d427      	bmi.n	80013fa <__sflush_r+0xb2>
 80013aa:	2200      	movs	r2, #0
 80013ac:	6062      	str	r2, [r4, #4]
 80013ae:	04d9      	lsls	r1, r3, #19
 80013b0:	6922      	ldr	r2, [r4, #16]
 80013b2:	6022      	str	r2, [r4, #0]
 80013b4:	d504      	bpl.n	80013c0 <__sflush_r+0x78>
 80013b6:	1c42      	adds	r2, r0, #1
 80013b8:	d101      	bne.n	80013be <__sflush_r+0x76>
 80013ba:	682b      	ldr	r3, [r5, #0]
 80013bc:	b903      	cbnz	r3, 80013c0 <__sflush_r+0x78>
 80013be:	6560      	str	r0, [r4, #84]	@ 0x54
 80013c0:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80013c2:	602f      	str	r7, [r5, #0]
 80013c4:	b1b9      	cbz	r1, 80013f6 <__sflush_r+0xae>
 80013c6:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80013ca:	4299      	cmp	r1, r3
 80013cc:	d002      	beq.n	80013d4 <__sflush_r+0x8c>
 80013ce:	4628      	mov	r0, r5
 80013d0:	f7ff fbf2 	bl	8000bb8 <_free_r>
 80013d4:	2300      	movs	r3, #0
 80013d6:	6363      	str	r3, [r4, #52]	@ 0x34
 80013d8:	e00d      	b.n	80013f6 <__sflush_r+0xae>
 80013da:	2301      	movs	r3, #1
 80013dc:	4628      	mov	r0, r5
 80013de:	47b0      	blx	r6
 80013e0:	4602      	mov	r2, r0
 80013e2:	1c50      	adds	r0, r2, #1
 80013e4:	d1c9      	bne.n	800137a <__sflush_r+0x32>
 80013e6:	682b      	ldr	r3, [r5, #0]
 80013e8:	2b00      	cmp	r3, #0
 80013ea:	d0c6      	beq.n	800137a <__sflush_r+0x32>
 80013ec:	2b1d      	cmp	r3, #29
 80013ee:	d001      	beq.n	80013f4 <__sflush_r+0xac>
 80013f0:	2b16      	cmp	r3, #22
 80013f2:	d11e      	bne.n	8001432 <__sflush_r+0xea>
 80013f4:	602f      	str	r7, [r5, #0]
 80013f6:	2000      	movs	r0, #0
 80013f8:	e022      	b.n	8001440 <__sflush_r+0xf8>
 80013fa:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80013fe:	b21b      	sxth	r3, r3
 8001400:	e01b      	b.n	800143a <__sflush_r+0xf2>
 8001402:	690f      	ldr	r7, [r1, #16]
 8001404:	2f00      	cmp	r7, #0
 8001406:	d0f6      	beq.n	80013f6 <__sflush_r+0xae>
 8001408:	0793      	lsls	r3, r2, #30
 800140a:	680e      	ldr	r6, [r1, #0]
 800140c:	bf08      	it	eq
 800140e:	694b      	ldreq	r3, [r1, #20]
 8001410:	600f      	str	r7, [r1, #0]
 8001412:	bf18      	it	ne
 8001414:	2300      	movne	r3, #0
 8001416:	eba6 0807 	sub.w	r8, r6, r7
 800141a:	608b      	str	r3, [r1, #8]
 800141c:	f1b8 0f00 	cmp.w	r8, #0
 8001420:	dde9      	ble.n	80013f6 <__sflush_r+0xae>
 8001422:	6a21      	ldr	r1, [r4, #32]
 8001424:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8001426:	4643      	mov	r3, r8
 8001428:	463a      	mov	r2, r7
 800142a:	4628      	mov	r0, r5
 800142c:	47b0      	blx	r6
 800142e:	2800      	cmp	r0, #0
 8001430:	dc08      	bgt.n	8001444 <__sflush_r+0xfc>
 8001432:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001436:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800143a:	81a3      	strh	r3, [r4, #12]
 800143c:	f04f 30ff 	mov.w	r0, #4294967295
 8001440:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001444:	4407      	add	r7, r0
 8001446:	eba8 0800 	sub.w	r8, r8, r0
 800144a:	e7e7      	b.n	800141c <__sflush_r+0xd4>
 800144c:	dfbffffe 	.word	0xdfbffffe

08001450 <_fflush_r>:
 8001450:	b538      	push	{r3, r4, r5, lr}
 8001452:	690b      	ldr	r3, [r1, #16]
 8001454:	4605      	mov	r5, r0
 8001456:	460c      	mov	r4, r1
 8001458:	b913      	cbnz	r3, 8001460 <_fflush_r+0x10>
 800145a:	2500      	movs	r5, #0
 800145c:	4628      	mov	r0, r5
 800145e:	bd38      	pop	{r3, r4, r5, pc}
 8001460:	b118      	cbz	r0, 800146a <_fflush_r+0x1a>
 8001462:	6a03      	ldr	r3, [r0, #32]
 8001464:	b90b      	cbnz	r3, 800146a <_fflush_r+0x1a>
 8001466:	f7ff f9ad 	bl	80007c4 <__sinit>
 800146a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800146e:	2b00      	cmp	r3, #0
 8001470:	d0f3      	beq.n	800145a <_fflush_r+0xa>
 8001472:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001474:	07d0      	lsls	r0, r2, #31
 8001476:	d404      	bmi.n	8001482 <_fflush_r+0x32>
 8001478:	0599      	lsls	r1, r3, #22
 800147a:	d402      	bmi.n	8001482 <_fflush_r+0x32>
 800147c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800147e:	f7ff fb98 	bl	8000bb2 <__retarget_lock_acquire_recursive>
 8001482:	4628      	mov	r0, r5
 8001484:	4621      	mov	r1, r4
 8001486:	f7ff ff5f 	bl	8001348 <__sflush_r>
 800148a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800148c:	07da      	lsls	r2, r3, #31
 800148e:	4605      	mov	r5, r0
 8001490:	d4e4      	bmi.n	800145c <_fflush_r+0xc>
 8001492:	89a3      	ldrh	r3, [r4, #12]
 8001494:	059b      	lsls	r3, r3, #22
 8001496:	d4e1      	bmi.n	800145c <_fflush_r+0xc>
 8001498:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800149a:	f7ff fb8b 	bl	8000bb4 <__retarget_lock_release_recursive>
 800149e:	e7dd      	b.n	800145c <_fflush_r+0xc>

080014a0 <__swhatbuf_r>:
 80014a0:	b570      	push	{r4, r5, r6, lr}
 80014a2:	460c      	mov	r4, r1
 80014a4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80014a8:	2900      	cmp	r1, #0
 80014aa:	b096      	sub	sp, #88	@ 0x58
 80014ac:	4615      	mov	r5, r2
 80014ae:	461e      	mov	r6, r3
 80014b0:	da0d      	bge.n	80014ce <__swhatbuf_r+0x2e>
 80014b2:	89a3      	ldrh	r3, [r4, #12]
 80014b4:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80014b8:	f04f 0100 	mov.w	r1, #0
 80014bc:	bf14      	ite	ne
 80014be:	2340      	movne	r3, #64	@ 0x40
 80014c0:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80014c4:	2000      	movs	r0, #0
 80014c6:	6031      	str	r1, [r6, #0]
 80014c8:	602b      	str	r3, [r5, #0]
 80014ca:	b016      	add	sp, #88	@ 0x58
 80014cc:	bd70      	pop	{r4, r5, r6, pc}
 80014ce:	466a      	mov	r2, sp
 80014d0:	f000 f848 	bl	8001564 <_fstat_r>
 80014d4:	2800      	cmp	r0, #0
 80014d6:	dbec      	blt.n	80014b2 <__swhatbuf_r+0x12>
 80014d8:	9901      	ldr	r1, [sp, #4]
 80014da:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80014de:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80014e2:	4259      	negs	r1, r3
 80014e4:	4159      	adcs	r1, r3
 80014e6:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80014ea:	e7eb      	b.n	80014c4 <__swhatbuf_r+0x24>

080014ec <__smakebuf_r>:
 80014ec:	898b      	ldrh	r3, [r1, #12]
 80014ee:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80014f0:	079d      	lsls	r5, r3, #30
 80014f2:	4606      	mov	r6, r0
 80014f4:	460c      	mov	r4, r1
 80014f6:	d507      	bpl.n	8001508 <__smakebuf_r+0x1c>
 80014f8:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80014fc:	6023      	str	r3, [r4, #0]
 80014fe:	6123      	str	r3, [r4, #16]
 8001500:	2301      	movs	r3, #1
 8001502:	6163      	str	r3, [r4, #20]
 8001504:	b003      	add	sp, #12
 8001506:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001508:	ab01      	add	r3, sp, #4
 800150a:	466a      	mov	r2, sp
 800150c:	f7ff ffc8 	bl	80014a0 <__swhatbuf_r>
 8001510:	9f00      	ldr	r7, [sp, #0]
 8001512:	4605      	mov	r5, r0
 8001514:	4639      	mov	r1, r7
 8001516:	4630      	mov	r0, r6
 8001518:	f7ff fbba 	bl	8000c90 <_malloc_r>
 800151c:	b948      	cbnz	r0, 8001532 <__smakebuf_r+0x46>
 800151e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001522:	059a      	lsls	r2, r3, #22
 8001524:	d4ee      	bmi.n	8001504 <__smakebuf_r+0x18>
 8001526:	f023 0303 	bic.w	r3, r3, #3
 800152a:	f043 0302 	orr.w	r3, r3, #2
 800152e:	81a3      	strh	r3, [r4, #12]
 8001530:	e7e2      	b.n	80014f8 <__smakebuf_r+0xc>
 8001532:	89a3      	ldrh	r3, [r4, #12]
 8001534:	6020      	str	r0, [r4, #0]
 8001536:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800153a:	81a3      	strh	r3, [r4, #12]
 800153c:	9b01      	ldr	r3, [sp, #4]
 800153e:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001542:	b15b      	cbz	r3, 800155c <__smakebuf_r+0x70>
 8001544:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001548:	4630      	mov	r0, r6
 800154a:	f000 f81d 	bl	8001588 <_isatty_r>
 800154e:	b128      	cbz	r0, 800155c <__smakebuf_r+0x70>
 8001550:	89a3      	ldrh	r3, [r4, #12]
 8001552:	f023 0303 	bic.w	r3, r3, #3
 8001556:	f043 0301 	orr.w	r3, r3, #1
 800155a:	81a3      	strh	r3, [r4, #12]
 800155c:	89a3      	ldrh	r3, [r4, #12]
 800155e:	431d      	orrs	r5, r3
 8001560:	81a5      	strh	r5, [r4, #12]
 8001562:	e7cf      	b.n	8001504 <__smakebuf_r+0x18>

08001564 <_fstat_r>:
 8001564:	b538      	push	{r3, r4, r5, lr}
 8001566:	4d07      	ldr	r5, [pc, #28]	@ (8001584 <_fstat_r+0x20>)
 8001568:	2300      	movs	r3, #0
 800156a:	4604      	mov	r4, r0
 800156c:	4608      	mov	r0, r1
 800156e:	4611      	mov	r1, r2
 8001570:	602b      	str	r3, [r5, #0]
 8001572:	f7ff f812 	bl	800059a <_fstat>
 8001576:	1c43      	adds	r3, r0, #1
 8001578:	d102      	bne.n	8001580 <_fstat_r+0x1c>
 800157a:	682b      	ldr	r3, [r5, #0]
 800157c:	b103      	cbz	r3, 8001580 <_fstat_r+0x1c>
 800157e:	6023      	str	r3, [r4, #0]
 8001580:	bd38      	pop	{r3, r4, r5, pc}
 8001582:	bf00      	nop
 8001584:	200001e4 	.word	0x200001e4

08001588 <_isatty_r>:
 8001588:	b538      	push	{r3, r4, r5, lr}
 800158a:	4d06      	ldr	r5, [pc, #24]	@ (80015a4 <_isatty_r+0x1c>)
 800158c:	2300      	movs	r3, #0
 800158e:	4604      	mov	r4, r0
 8001590:	4608      	mov	r0, r1
 8001592:	602b      	str	r3, [r5, #0]
 8001594:	f7ff f811 	bl	80005ba <_isatty>
 8001598:	1c43      	adds	r3, r0, #1
 800159a:	d102      	bne.n	80015a2 <_isatty_r+0x1a>
 800159c:	682b      	ldr	r3, [r5, #0]
 800159e:	b103      	cbz	r3, 80015a2 <_isatty_r+0x1a>
 80015a0:	6023      	str	r3, [r4, #0]
 80015a2:	bd38      	pop	{r3, r4, r5, pc}
 80015a4:	200001e4 	.word	0x200001e4

080015a8 <_sbrk_r>:
 80015a8:	b538      	push	{r3, r4, r5, lr}
 80015aa:	4d06      	ldr	r5, [pc, #24]	@ (80015c4 <_sbrk_r+0x1c>)
 80015ac:	2300      	movs	r3, #0
 80015ae:	4604      	mov	r4, r0
 80015b0:	4608      	mov	r0, r1
 80015b2:	602b      	str	r3, [r5, #0]
 80015b4:	f7ff f81a 	bl	80005ec <_sbrk>
 80015b8:	1c43      	adds	r3, r0, #1
 80015ba:	d102      	bne.n	80015c2 <_sbrk_r+0x1a>
 80015bc:	682b      	ldr	r3, [r5, #0]
 80015be:	b103      	cbz	r3, 80015c2 <_sbrk_r+0x1a>
 80015c0:	6023      	str	r3, [r4, #0]
 80015c2:	bd38      	pop	{r3, r4, r5, pc}
 80015c4:	200001e4 	.word	0x200001e4

080015c8 <_init>:
 80015c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015ca:	bf00      	nop
 80015cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015ce:	bc08      	pop	{r3}
 80015d0:	469e      	mov	lr, r3
 80015d2:	4770      	bx	lr

080015d4 <_fini>:
 80015d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015d6:	bf00      	nop
 80015d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015da:	bc08      	pop	{r3}
 80015dc:	469e      	mov	lr, r3
 80015de:	4770      	bx	lr
