
DAY12-EXERCEISE1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001404  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000104  080015a4  080015a4  000115a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080016a8  080016a8  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080016a8  080016a8  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080016a8  080016a8  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080016a8  080016a8  000116a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080016ac  080016ac  000116ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080016b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001714  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001714  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a4b  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000384  00000000  00000000  00020adf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00020e68  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00020fa8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00002bf2  00000000  00000000  000210b0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000013b3  00000000  00000000  00023ca2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000093e0  00000000  00000000  00025055  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002e435  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c34  00000000  00000000  0002e488  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800158c 	.word	0x0800158c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	0800158c 	.word	0x0800158c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <hard>:
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif
int hard(int a,int b);

int hard(int a,int b)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b084      	sub	sp, #16
 8000284:	af00      	add	r7, sp, #0
 8000286:	6078      	str	r0, [r7, #4]
 8000288:	6039      	str	r1, [r7, #0]

	  void (*jump_address)(void);
	  jump_address =(void*)0x20000008;
 800028a:	4b05      	ldr	r3, [pc, #20]	; (80002a0 <hard+0x20>)
 800028c:	60fb      	str	r3, [r7, #12]
	      jump_address();
 800028e:	68fb      	ldr	r3, [r7, #12]
 8000290:	4798      	blx	r3
	      return a+b;
 8000292:	687a      	ldr	r2, [r7, #4]
 8000294:	683b      	ldr	r3, [r7, #0]
 8000296:	4413      	add	r3, r2
}
 8000298:	4618      	mov	r0, r3
 800029a:	3710      	adds	r7, #16
 800029c:	46bd      	mov	sp, r7
 800029e:	bd80      	pop	{r7, pc}
 80002a0:	20000008 	.word	0x20000008

080002a4 <main>:

int main(void)
{
 80002a4:	b580      	push	{r7, lr}
 80002a6:	b084      	sub	sp, #16
 80002a8:	af00      	add	r7, sp, #0
	//1. Enable all the configurabel exceptions like usage fault,memmnagae and bus fault
      uint32_t *pSHCSR =(uint32_t *)0xe000ed24;
 80002aa:	4b08      	ldr	r3, [pc, #32]	; (80002cc <main+0x28>)
 80002ac:	60fb      	str	r3, [r7, #12]
     // *pSHCSR |=(1<<16);//Mem Manage
     // *pSHCSR |=(1<<17);//Bus fault
     // *pSHCSR |=(1<<18); //usage fault

      //void(*jump_addr)(void)
      hard(1,2);
 80002ae:	2102      	movs	r1, #2
 80002b0:	2001      	movs	r0, #1
 80002b2:	f7ff ffe5 	bl	8000280 <hard>
	//3.Lets force the processor to execute undefined instruction
      uint32_t *pSRAM =(uint32_t *)0x40001000;
 80002b6:	4b06      	ldr	r3, [pc, #24]	; (80002d0 <main+0x2c>)
 80002b8:	60bb      	str	r3, [r7, #8]
      *pSRAM = 0XFFFFFFFF;
 80002ba:	68bb      	ldr	r3, [r7, #8]
 80002bc:	f04f 32ff 	mov.w	r2, #4294967295
 80002c0:	601a      	str	r2, [r3, #0]
      void (*random_address)(void);
      random_address =(void*)0x20000008;
 80002c2:	4b04      	ldr	r3, [pc, #16]	; (80002d4 <main+0x30>)
 80002c4:	607b      	str	r3, [r7, #4]
      random_address();
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4798      	blx	r3
    /* Loop forever */
	for(;;);
 80002ca:	e7fe      	b.n	80002ca <main+0x26>
 80002cc:	e000ed24 	.word	0xe000ed24
 80002d0:	40001000 	.word	0x40001000
 80002d4:	20000008 	.word	0x20000008

080002d8 <HardFault_Handler>:
}
void HardFault_Handler(void)
{
 80002d8:	b580      	push	{r7, lr}
 80002da:	af00      	add	r7, sp, #0
	printf("Exception: Hard fault \n");
 80002dc:	4801      	ldr	r0, [pc, #4]	; (80002e4 <HardFault_Handler+0xc>)
 80002de:	f000 f9d7 	bl	8000690 <puts>
	while (1);
 80002e2:	e7fe      	b.n	80002e2 <HardFault_Handler+0xa>
 80002e4:	080015a4 	.word	0x080015a4

080002e8 <MemManage_Handler>:

}
void MemManage_Handler(void)
{
 80002e8:	b580      	push	{r7, lr}
 80002ea:	af00      	add	r7, sp, #0
	printf("Exception: Memmanage \n");
 80002ec:	4801      	ldr	r0, [pc, #4]	; (80002f4 <MemManage_Handler+0xc>)
 80002ee:	f000 f9cf 	bl	8000690 <puts>
		while (1);
 80002f2:	e7fe      	b.n	80002f2 <MemManage_Handler+0xa>
 80002f4:	080015bc 	.word	0x080015bc

080002f8 <BusFault_Handler>:
}
void BusFault_Handler(void)
{
 80002f8:	b580      	push	{r7, lr}
 80002fa:	af00      	add	r7, sp, #0
	printf("Exception: BusFault \n");
 80002fc:	4801      	ldr	r0, [pc, #4]	; (8000304 <BusFault_Handler+0xc>)
 80002fe:	f000 f9c7 	bl	8000690 <puts>
while (1);
 8000302:	e7fe      	b.n	8000302 <BusFault_Handler+0xa>
 8000304:	080015d4 	.word	0x080015d4

08000308 <UsageFault_Handler>:

}
void UsageFault_Handler(void)
{
 8000308:	b580      	push	{r7, lr}
 800030a:	b082      	sub	sp, #8
 800030c:	af00      	add	r7, sp, #0
    uint32_t *pCFSR =(uint32_t *)0xE000ED28;
 800030e:	4b06      	ldr	r3, [pc, #24]	; (8000328 <UsageFault_Handler+0x20>)
 8000310:	607b      	str	r3, [r7, #4]


	printf("Exception: UsageFault \n");
 8000312:	4806      	ldr	r0, [pc, #24]	; (800032c <UsageFault_Handler+0x24>)
 8000314:	f000 f9bc 	bl	8000690 <puts>
	printf("CFSR= %x\n: ",(*pCFSR)&0xffff);
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	681b      	ldr	r3, [r3, #0]
 800031c:	b29b      	uxth	r3, r3
 800031e:	4619      	mov	r1, r3
 8000320:	4803      	ldr	r0, [pc, #12]	; (8000330 <UsageFault_Handler+0x28>)
 8000322:	f000 f92f 	bl	8000584 <iprintf>

		while (1);
 8000326:	e7fe      	b.n	8000326 <UsageFault_Handler+0x1e>
 8000328:	e000ed28 	.word	0xe000ed28
 800032c:	080015ec 	.word	0x080015ec
 8000330:	08001604 	.word	0x08001604

08000334 <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   *((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          *((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 8000334:	b480      	push	{r7}
 8000336:	b083      	sub	sp, #12
 8000338:	af00      	add	r7, sp, #0
 800033a:	4603      	mov	r3, r0
 800033c:	71fb      	strb	r3, [r7, #7]

//Enable TRCENA
DEMCR |= ( 1 << 24);
 800033e:	4b0f      	ldr	r3, [pc, #60]	; (800037c <ITM_SendChar+0x48>)
 8000340:	681b      	ldr	r3, [r3, #0]
 8000342:	4a0e      	ldr	r2, [pc, #56]	; (800037c <ITM_SendChar+0x48>)
 8000344:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000348:	6013      	str	r3, [r2, #0]

//enable stimulus port 0
ITM_TRACE_EN |= ( 1 << 0);
 800034a:	4b0d      	ldr	r3, [pc, #52]	; (8000380 <ITM_SendChar+0x4c>)
 800034c:	681b      	ldr	r3, [r3, #0]
 800034e:	4a0c      	ldr	r2, [pc, #48]	; (8000380 <ITM_SendChar+0x4c>)
 8000350:	f043 0301 	orr.w	r3, r3, #1
 8000354:	6013      	str	r3, [r2, #0]

// read FIFO status in bit [0]:
while(!(ITM_STIMULUS_PORT0 & 1));
 8000356:	bf00      	nop
 8000358:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 800035c:	681b      	ldr	r3, [r3, #0]
 800035e:	f003 0301 	and.w	r3, r3, #1
 8000362:	2b00      	cmp	r3, #0
 8000364:	d0f8      	beq.n	8000358 <ITM_SendChar+0x24>

//Write to ITM stimulus port0
ITM_STIMULUS_PORT0 = ch;
 8000366:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 800036a:	79fb      	ldrb	r3, [r7, #7]
 800036c:	6013      	str	r3, [r2, #0]
}
 800036e:	bf00      	nop
 8000370:	370c      	adds	r7, #12
 8000372:	46bd      	mov	sp, r7
 8000374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000378:	4770      	bx	lr
 800037a:	bf00      	nop
 800037c:	e000edfc 	.word	0xe000edfc
 8000380:	e0000e00 	.word	0xe0000e00

08000384 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	b086      	sub	sp, #24
 8000388:	af00      	add	r7, sp, #0
 800038a:	60f8      	str	r0, [r7, #12]
 800038c:	60b9      	str	r1, [r7, #8]
 800038e:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000390:	2300      	movs	r3, #0
 8000392:	617b      	str	r3, [r7, #20]
 8000394:	e00a      	b.n	80003ac <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000396:	f3af 8000 	nop.w
 800039a:	4601      	mov	r1, r0
 800039c:	68bb      	ldr	r3, [r7, #8]
 800039e:	1c5a      	adds	r2, r3, #1
 80003a0:	60ba      	str	r2, [r7, #8]
 80003a2:	b2ca      	uxtb	r2, r1
 80003a4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003a6:	697b      	ldr	r3, [r7, #20]
 80003a8:	3301      	adds	r3, #1
 80003aa:	617b      	str	r3, [r7, #20]
 80003ac:	697a      	ldr	r2, [r7, #20]
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	429a      	cmp	r2, r3
 80003b2:	dbf0      	blt.n	8000396 <_read+0x12>
  }

  return len;
 80003b4:	687b      	ldr	r3, [r7, #4]
}
 80003b6:	4618      	mov	r0, r3
 80003b8:	3718      	adds	r7, #24
 80003ba:	46bd      	mov	sp, r7
 80003bc:	bd80      	pop	{r7, pc}

080003be <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003be:	b580      	push	{r7, lr}
 80003c0:	b086      	sub	sp, #24
 80003c2:	af00      	add	r7, sp, #0
 80003c4:	60f8      	str	r0, [r7, #12]
 80003c6:	60b9      	str	r1, [r7, #8]
 80003c8:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003ca:	2300      	movs	r3, #0
 80003cc:	617b      	str	r3, [r7, #20]
 80003ce:	e009      	b.n	80003e4 <_write+0x26>
  {
   // __io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 80003d0:	68bb      	ldr	r3, [r7, #8]
 80003d2:	1c5a      	adds	r2, r3, #1
 80003d4:	60ba      	str	r2, [r7, #8]
 80003d6:	781b      	ldrb	r3, [r3, #0]
 80003d8:	4618      	mov	r0, r3
 80003da:	f7ff ffab 	bl	8000334 <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003de:	697b      	ldr	r3, [r7, #20]
 80003e0:	3301      	adds	r3, #1
 80003e2:	617b      	str	r3, [r7, #20]
 80003e4:	697a      	ldr	r2, [r7, #20]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	429a      	cmp	r2, r3
 80003ea:	dbf1      	blt.n	80003d0 <_write+0x12>
  }
  return len;
 80003ec:	687b      	ldr	r3, [r7, #4]
}
 80003ee:	4618      	mov	r0, r3
 80003f0:	3718      	adds	r7, #24
 80003f2:	46bd      	mov	sp, r7
 80003f4:	bd80      	pop	{r7, pc}

080003f6 <_close>:

int _close(int file)
{
 80003f6:	b480      	push	{r7}
 80003f8:	b083      	sub	sp, #12
 80003fa:	af00      	add	r7, sp, #0
 80003fc:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80003fe:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000402:	4618      	mov	r0, r3
 8000404:	370c      	adds	r7, #12
 8000406:	46bd      	mov	sp, r7
 8000408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800040c:	4770      	bx	lr

0800040e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800040e:	b480      	push	{r7}
 8000410:	b083      	sub	sp, #12
 8000412:	af00      	add	r7, sp, #0
 8000414:	6078      	str	r0, [r7, #4]
 8000416:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000418:	683b      	ldr	r3, [r7, #0]
 800041a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800041e:	605a      	str	r2, [r3, #4]
  return 0;
 8000420:	2300      	movs	r3, #0
}
 8000422:	4618      	mov	r0, r3
 8000424:	370c      	adds	r7, #12
 8000426:	46bd      	mov	sp, r7
 8000428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800042c:	4770      	bx	lr

0800042e <_isatty>:

int _isatty(int file)
{
 800042e:	b480      	push	{r7}
 8000430:	b083      	sub	sp, #12
 8000432:	af00      	add	r7, sp, #0
 8000434:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000436:	2301      	movs	r3, #1
}
 8000438:	4618      	mov	r0, r3
 800043a:	370c      	adds	r7, #12
 800043c:	46bd      	mov	sp, r7
 800043e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000442:	4770      	bx	lr

08000444 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000444:	b480      	push	{r7}
 8000446:	b085      	sub	sp, #20
 8000448:	af00      	add	r7, sp, #0
 800044a:	60f8      	str	r0, [r7, #12]
 800044c:	60b9      	str	r1, [r7, #8]
 800044e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000450:	2300      	movs	r3, #0
}
 8000452:	4618      	mov	r0, r3
 8000454:	3714      	adds	r7, #20
 8000456:	46bd      	mov	sp, r7
 8000458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800045c:	4770      	bx	lr
	...

08000460 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000460:	b580      	push	{r7, lr}
 8000462:	b086      	sub	sp, #24
 8000464:	af00      	add	r7, sp, #0
 8000466:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000468:	4a14      	ldr	r2, [pc, #80]	; (80004bc <_sbrk+0x5c>)
 800046a:	4b15      	ldr	r3, [pc, #84]	; (80004c0 <_sbrk+0x60>)
 800046c:	1ad3      	subs	r3, r2, r3
 800046e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000470:	697b      	ldr	r3, [r7, #20]
 8000472:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000474:	4b13      	ldr	r3, [pc, #76]	; (80004c4 <_sbrk+0x64>)
 8000476:	681b      	ldr	r3, [r3, #0]
 8000478:	2b00      	cmp	r3, #0
 800047a:	d102      	bne.n	8000482 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 800047c:	4b11      	ldr	r3, [pc, #68]	; (80004c4 <_sbrk+0x64>)
 800047e:	4a12      	ldr	r2, [pc, #72]	; (80004c8 <_sbrk+0x68>)
 8000480:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000482:	4b10      	ldr	r3, [pc, #64]	; (80004c4 <_sbrk+0x64>)
 8000484:	681a      	ldr	r2, [r3, #0]
 8000486:	687b      	ldr	r3, [r7, #4]
 8000488:	4413      	add	r3, r2
 800048a:	693a      	ldr	r2, [r7, #16]
 800048c:	429a      	cmp	r2, r3
 800048e:	d207      	bcs.n	80004a0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000490:	f000 f846 	bl	8000520 <__errno>
 8000494:	4603      	mov	r3, r0
 8000496:	220c      	movs	r2, #12
 8000498:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800049a:	f04f 33ff 	mov.w	r3, #4294967295
 800049e:	e009      	b.n	80004b4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004a0:	4b08      	ldr	r3, [pc, #32]	; (80004c4 <_sbrk+0x64>)
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004a6:	4b07      	ldr	r3, [pc, #28]	; (80004c4 <_sbrk+0x64>)
 80004a8:	681a      	ldr	r2, [r3, #0]
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	4413      	add	r3, r2
 80004ae:	4a05      	ldr	r2, [pc, #20]	; (80004c4 <_sbrk+0x64>)
 80004b0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004b2:	68fb      	ldr	r3, [r7, #12]
}
 80004b4:	4618      	mov	r0, r3
 80004b6:	3718      	adds	r7, #24
 80004b8:	46bd      	mov	sp, r7
 80004ba:	bd80      	pop	{r7, pc}
 80004bc:	20020000 	.word	0x20020000
 80004c0:	00000400 	.word	0x00000400
 80004c4:	20000080 	.word	0x20000080
 80004c8:	20000098 	.word	0x20000098

080004cc <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004cc:	480d      	ldr	r0, [pc, #52]	; (8000504 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ce:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004d0:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004d4:	480c      	ldr	r0, [pc, #48]	; (8000508 <LoopForever+0x6>)
  ldr r1, =_edata
 80004d6:	490d      	ldr	r1, [pc, #52]	; (800050c <LoopForever+0xa>)
  ldr r2, =_sidata
 80004d8:	4a0d      	ldr	r2, [pc, #52]	; (8000510 <LoopForever+0xe>)
  movs r3, #0
 80004da:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004dc:	e002      	b.n	80004e4 <LoopCopyDataInit>

080004de <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004de:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004e0:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004e2:	3304      	adds	r3, #4

080004e4 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80004e4:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80004e6:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004e8:	d3f9      	bcc.n	80004de <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004ea:	4a0a      	ldr	r2, [pc, #40]	; (8000514 <LoopForever+0x12>)
  ldr r4, =_ebss
 80004ec:	4c0a      	ldr	r4, [pc, #40]	; (8000518 <LoopForever+0x16>)
  movs r3, #0
 80004ee:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004f0:	e001      	b.n	80004f6 <LoopFillZerobss>

080004f2 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004f2:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004f4:	3204      	adds	r2, #4

080004f6 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004f6:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004f8:	d3fb      	bcc.n	80004f2 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004fa:	f000 f817 	bl	800052c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004fe:	f7ff fed1 	bl	80002a4 <main>

08000502 <LoopForever>:

LoopForever:
  b LoopForever
 8000502:	e7fe      	b.n	8000502 <LoopForever>
  ldr   r0, =_estack
 8000504:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000508:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800050c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000510:	080016b0 	.word	0x080016b0
  ldr r2, =_sbss
 8000514:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000518:	20000094 	.word	0x20000094

0800051c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800051c:	e7fe      	b.n	800051c <ADC_IRQHandler>
	...

08000520 <__errno>:
 8000520:	4b01      	ldr	r3, [pc, #4]	; (8000528 <__errno+0x8>)
 8000522:	6818      	ldr	r0, [r3, #0]
 8000524:	4770      	bx	lr
 8000526:	bf00      	nop
 8000528:	20000000 	.word	0x20000000

0800052c <__libc_init_array>:
 800052c:	b570      	push	{r4, r5, r6, lr}
 800052e:	4d0d      	ldr	r5, [pc, #52]	; (8000564 <__libc_init_array+0x38>)
 8000530:	4c0d      	ldr	r4, [pc, #52]	; (8000568 <__libc_init_array+0x3c>)
 8000532:	1b64      	subs	r4, r4, r5
 8000534:	10a4      	asrs	r4, r4, #2
 8000536:	2600      	movs	r6, #0
 8000538:	42a6      	cmp	r6, r4
 800053a:	d109      	bne.n	8000550 <__libc_init_array+0x24>
 800053c:	4d0b      	ldr	r5, [pc, #44]	; (800056c <__libc_init_array+0x40>)
 800053e:	4c0c      	ldr	r4, [pc, #48]	; (8000570 <__libc_init_array+0x44>)
 8000540:	f001 f824 	bl	800158c <_init>
 8000544:	1b64      	subs	r4, r4, r5
 8000546:	10a4      	asrs	r4, r4, #2
 8000548:	2600      	movs	r6, #0
 800054a:	42a6      	cmp	r6, r4
 800054c:	d105      	bne.n	800055a <__libc_init_array+0x2e>
 800054e:	bd70      	pop	{r4, r5, r6, pc}
 8000550:	f855 3b04 	ldr.w	r3, [r5], #4
 8000554:	4798      	blx	r3
 8000556:	3601      	adds	r6, #1
 8000558:	e7ee      	b.n	8000538 <__libc_init_array+0xc>
 800055a:	f855 3b04 	ldr.w	r3, [r5], #4
 800055e:	4798      	blx	r3
 8000560:	3601      	adds	r6, #1
 8000562:	e7f2      	b.n	800054a <__libc_init_array+0x1e>
 8000564:	080016a8 	.word	0x080016a8
 8000568:	080016a8 	.word	0x080016a8
 800056c:	080016a8 	.word	0x080016a8
 8000570:	080016ac 	.word	0x080016ac

08000574 <memset>:
 8000574:	4402      	add	r2, r0
 8000576:	4603      	mov	r3, r0
 8000578:	4293      	cmp	r3, r2
 800057a:	d100      	bne.n	800057e <memset+0xa>
 800057c:	4770      	bx	lr
 800057e:	f803 1b01 	strb.w	r1, [r3], #1
 8000582:	e7f9      	b.n	8000578 <memset+0x4>

08000584 <iprintf>:
 8000584:	b40f      	push	{r0, r1, r2, r3}
 8000586:	4b0a      	ldr	r3, [pc, #40]	; (80005b0 <iprintf+0x2c>)
 8000588:	b513      	push	{r0, r1, r4, lr}
 800058a:	681c      	ldr	r4, [r3, #0]
 800058c:	b124      	cbz	r4, 8000598 <iprintf+0x14>
 800058e:	69a3      	ldr	r3, [r4, #24]
 8000590:	b913      	cbnz	r3, 8000598 <iprintf+0x14>
 8000592:	4620      	mov	r0, r4
 8000594:	f000 fa5e 	bl	8000a54 <__sinit>
 8000598:	ab05      	add	r3, sp, #20
 800059a:	9a04      	ldr	r2, [sp, #16]
 800059c:	68a1      	ldr	r1, [r4, #8]
 800059e:	9301      	str	r3, [sp, #4]
 80005a0:	4620      	mov	r0, r4
 80005a2:	f000 fc67 	bl	8000e74 <_vfiprintf_r>
 80005a6:	b002      	add	sp, #8
 80005a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005ac:	b004      	add	sp, #16
 80005ae:	4770      	bx	lr
 80005b0:	20000000 	.word	0x20000000

080005b4 <_puts_r>:
 80005b4:	b570      	push	{r4, r5, r6, lr}
 80005b6:	460e      	mov	r6, r1
 80005b8:	4605      	mov	r5, r0
 80005ba:	b118      	cbz	r0, 80005c4 <_puts_r+0x10>
 80005bc:	6983      	ldr	r3, [r0, #24]
 80005be:	b90b      	cbnz	r3, 80005c4 <_puts_r+0x10>
 80005c0:	f000 fa48 	bl	8000a54 <__sinit>
 80005c4:	69ab      	ldr	r3, [r5, #24]
 80005c6:	68ac      	ldr	r4, [r5, #8]
 80005c8:	b913      	cbnz	r3, 80005d0 <_puts_r+0x1c>
 80005ca:	4628      	mov	r0, r5
 80005cc:	f000 fa42 	bl	8000a54 <__sinit>
 80005d0:	4b2c      	ldr	r3, [pc, #176]	; (8000684 <_puts_r+0xd0>)
 80005d2:	429c      	cmp	r4, r3
 80005d4:	d120      	bne.n	8000618 <_puts_r+0x64>
 80005d6:	686c      	ldr	r4, [r5, #4]
 80005d8:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80005da:	07db      	lsls	r3, r3, #31
 80005dc:	d405      	bmi.n	80005ea <_puts_r+0x36>
 80005de:	89a3      	ldrh	r3, [r4, #12]
 80005e0:	0598      	lsls	r0, r3, #22
 80005e2:	d402      	bmi.n	80005ea <_puts_r+0x36>
 80005e4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80005e6:	f000 fad3 	bl	8000b90 <__retarget_lock_acquire_recursive>
 80005ea:	89a3      	ldrh	r3, [r4, #12]
 80005ec:	0719      	lsls	r1, r3, #28
 80005ee:	d51d      	bpl.n	800062c <_puts_r+0x78>
 80005f0:	6923      	ldr	r3, [r4, #16]
 80005f2:	b1db      	cbz	r3, 800062c <_puts_r+0x78>
 80005f4:	3e01      	subs	r6, #1
 80005f6:	68a3      	ldr	r3, [r4, #8]
 80005f8:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80005fc:	3b01      	subs	r3, #1
 80005fe:	60a3      	str	r3, [r4, #8]
 8000600:	bb39      	cbnz	r1, 8000652 <_puts_r+0x9e>
 8000602:	2b00      	cmp	r3, #0
 8000604:	da38      	bge.n	8000678 <_puts_r+0xc4>
 8000606:	4622      	mov	r2, r4
 8000608:	210a      	movs	r1, #10
 800060a:	4628      	mov	r0, r5
 800060c:	f000 f848 	bl	80006a0 <__swbuf_r>
 8000610:	3001      	adds	r0, #1
 8000612:	d011      	beq.n	8000638 <_puts_r+0x84>
 8000614:	250a      	movs	r5, #10
 8000616:	e011      	b.n	800063c <_puts_r+0x88>
 8000618:	4b1b      	ldr	r3, [pc, #108]	; (8000688 <_puts_r+0xd4>)
 800061a:	429c      	cmp	r4, r3
 800061c:	d101      	bne.n	8000622 <_puts_r+0x6e>
 800061e:	68ac      	ldr	r4, [r5, #8]
 8000620:	e7da      	b.n	80005d8 <_puts_r+0x24>
 8000622:	4b1a      	ldr	r3, [pc, #104]	; (800068c <_puts_r+0xd8>)
 8000624:	429c      	cmp	r4, r3
 8000626:	bf08      	it	eq
 8000628:	68ec      	ldreq	r4, [r5, #12]
 800062a:	e7d5      	b.n	80005d8 <_puts_r+0x24>
 800062c:	4621      	mov	r1, r4
 800062e:	4628      	mov	r0, r5
 8000630:	f000 f888 	bl	8000744 <__swsetup_r>
 8000634:	2800      	cmp	r0, #0
 8000636:	d0dd      	beq.n	80005f4 <_puts_r+0x40>
 8000638:	f04f 35ff 	mov.w	r5, #4294967295
 800063c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800063e:	07da      	lsls	r2, r3, #31
 8000640:	d405      	bmi.n	800064e <_puts_r+0x9a>
 8000642:	89a3      	ldrh	r3, [r4, #12]
 8000644:	059b      	lsls	r3, r3, #22
 8000646:	d402      	bmi.n	800064e <_puts_r+0x9a>
 8000648:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800064a:	f000 faa2 	bl	8000b92 <__retarget_lock_release_recursive>
 800064e:	4628      	mov	r0, r5
 8000650:	bd70      	pop	{r4, r5, r6, pc}
 8000652:	2b00      	cmp	r3, #0
 8000654:	da04      	bge.n	8000660 <_puts_r+0xac>
 8000656:	69a2      	ldr	r2, [r4, #24]
 8000658:	429a      	cmp	r2, r3
 800065a:	dc06      	bgt.n	800066a <_puts_r+0xb6>
 800065c:	290a      	cmp	r1, #10
 800065e:	d004      	beq.n	800066a <_puts_r+0xb6>
 8000660:	6823      	ldr	r3, [r4, #0]
 8000662:	1c5a      	adds	r2, r3, #1
 8000664:	6022      	str	r2, [r4, #0]
 8000666:	7019      	strb	r1, [r3, #0]
 8000668:	e7c5      	b.n	80005f6 <_puts_r+0x42>
 800066a:	4622      	mov	r2, r4
 800066c:	4628      	mov	r0, r5
 800066e:	f000 f817 	bl	80006a0 <__swbuf_r>
 8000672:	3001      	adds	r0, #1
 8000674:	d1bf      	bne.n	80005f6 <_puts_r+0x42>
 8000676:	e7df      	b.n	8000638 <_puts_r+0x84>
 8000678:	6823      	ldr	r3, [r4, #0]
 800067a:	250a      	movs	r5, #10
 800067c:	1c5a      	adds	r2, r3, #1
 800067e:	6022      	str	r2, [r4, #0]
 8000680:	701d      	strb	r5, [r3, #0]
 8000682:	e7db      	b.n	800063c <_puts_r+0x88>
 8000684:	08001634 	.word	0x08001634
 8000688:	08001654 	.word	0x08001654
 800068c:	08001614 	.word	0x08001614

08000690 <puts>:
 8000690:	4b02      	ldr	r3, [pc, #8]	; (800069c <puts+0xc>)
 8000692:	4601      	mov	r1, r0
 8000694:	6818      	ldr	r0, [r3, #0]
 8000696:	f7ff bf8d 	b.w	80005b4 <_puts_r>
 800069a:	bf00      	nop
 800069c:	20000000 	.word	0x20000000

080006a0 <__swbuf_r>:
 80006a0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80006a2:	460e      	mov	r6, r1
 80006a4:	4614      	mov	r4, r2
 80006a6:	4605      	mov	r5, r0
 80006a8:	b118      	cbz	r0, 80006b2 <__swbuf_r+0x12>
 80006aa:	6983      	ldr	r3, [r0, #24]
 80006ac:	b90b      	cbnz	r3, 80006b2 <__swbuf_r+0x12>
 80006ae:	f000 f9d1 	bl	8000a54 <__sinit>
 80006b2:	4b21      	ldr	r3, [pc, #132]	; (8000738 <__swbuf_r+0x98>)
 80006b4:	429c      	cmp	r4, r3
 80006b6:	d12b      	bne.n	8000710 <__swbuf_r+0x70>
 80006b8:	686c      	ldr	r4, [r5, #4]
 80006ba:	69a3      	ldr	r3, [r4, #24]
 80006bc:	60a3      	str	r3, [r4, #8]
 80006be:	89a3      	ldrh	r3, [r4, #12]
 80006c0:	071a      	lsls	r2, r3, #28
 80006c2:	d52f      	bpl.n	8000724 <__swbuf_r+0x84>
 80006c4:	6923      	ldr	r3, [r4, #16]
 80006c6:	b36b      	cbz	r3, 8000724 <__swbuf_r+0x84>
 80006c8:	6923      	ldr	r3, [r4, #16]
 80006ca:	6820      	ldr	r0, [r4, #0]
 80006cc:	1ac0      	subs	r0, r0, r3
 80006ce:	6963      	ldr	r3, [r4, #20]
 80006d0:	b2f6      	uxtb	r6, r6
 80006d2:	4283      	cmp	r3, r0
 80006d4:	4637      	mov	r7, r6
 80006d6:	dc04      	bgt.n	80006e2 <__swbuf_r+0x42>
 80006d8:	4621      	mov	r1, r4
 80006da:	4628      	mov	r0, r5
 80006dc:	f000 f926 	bl	800092c <_fflush_r>
 80006e0:	bb30      	cbnz	r0, 8000730 <__swbuf_r+0x90>
 80006e2:	68a3      	ldr	r3, [r4, #8]
 80006e4:	3b01      	subs	r3, #1
 80006e6:	60a3      	str	r3, [r4, #8]
 80006e8:	6823      	ldr	r3, [r4, #0]
 80006ea:	1c5a      	adds	r2, r3, #1
 80006ec:	6022      	str	r2, [r4, #0]
 80006ee:	701e      	strb	r6, [r3, #0]
 80006f0:	6963      	ldr	r3, [r4, #20]
 80006f2:	3001      	adds	r0, #1
 80006f4:	4283      	cmp	r3, r0
 80006f6:	d004      	beq.n	8000702 <__swbuf_r+0x62>
 80006f8:	89a3      	ldrh	r3, [r4, #12]
 80006fa:	07db      	lsls	r3, r3, #31
 80006fc:	d506      	bpl.n	800070c <__swbuf_r+0x6c>
 80006fe:	2e0a      	cmp	r6, #10
 8000700:	d104      	bne.n	800070c <__swbuf_r+0x6c>
 8000702:	4621      	mov	r1, r4
 8000704:	4628      	mov	r0, r5
 8000706:	f000 f911 	bl	800092c <_fflush_r>
 800070a:	b988      	cbnz	r0, 8000730 <__swbuf_r+0x90>
 800070c:	4638      	mov	r0, r7
 800070e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000710:	4b0a      	ldr	r3, [pc, #40]	; (800073c <__swbuf_r+0x9c>)
 8000712:	429c      	cmp	r4, r3
 8000714:	d101      	bne.n	800071a <__swbuf_r+0x7a>
 8000716:	68ac      	ldr	r4, [r5, #8]
 8000718:	e7cf      	b.n	80006ba <__swbuf_r+0x1a>
 800071a:	4b09      	ldr	r3, [pc, #36]	; (8000740 <__swbuf_r+0xa0>)
 800071c:	429c      	cmp	r4, r3
 800071e:	bf08      	it	eq
 8000720:	68ec      	ldreq	r4, [r5, #12]
 8000722:	e7ca      	b.n	80006ba <__swbuf_r+0x1a>
 8000724:	4621      	mov	r1, r4
 8000726:	4628      	mov	r0, r5
 8000728:	f000 f80c 	bl	8000744 <__swsetup_r>
 800072c:	2800      	cmp	r0, #0
 800072e:	d0cb      	beq.n	80006c8 <__swbuf_r+0x28>
 8000730:	f04f 37ff 	mov.w	r7, #4294967295
 8000734:	e7ea      	b.n	800070c <__swbuf_r+0x6c>
 8000736:	bf00      	nop
 8000738:	08001634 	.word	0x08001634
 800073c:	08001654 	.word	0x08001654
 8000740:	08001614 	.word	0x08001614

08000744 <__swsetup_r>:
 8000744:	4b32      	ldr	r3, [pc, #200]	; (8000810 <__swsetup_r+0xcc>)
 8000746:	b570      	push	{r4, r5, r6, lr}
 8000748:	681d      	ldr	r5, [r3, #0]
 800074a:	4606      	mov	r6, r0
 800074c:	460c      	mov	r4, r1
 800074e:	b125      	cbz	r5, 800075a <__swsetup_r+0x16>
 8000750:	69ab      	ldr	r3, [r5, #24]
 8000752:	b913      	cbnz	r3, 800075a <__swsetup_r+0x16>
 8000754:	4628      	mov	r0, r5
 8000756:	f000 f97d 	bl	8000a54 <__sinit>
 800075a:	4b2e      	ldr	r3, [pc, #184]	; (8000814 <__swsetup_r+0xd0>)
 800075c:	429c      	cmp	r4, r3
 800075e:	d10f      	bne.n	8000780 <__swsetup_r+0x3c>
 8000760:	686c      	ldr	r4, [r5, #4]
 8000762:	89a3      	ldrh	r3, [r4, #12]
 8000764:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000768:	0719      	lsls	r1, r3, #28
 800076a:	d42c      	bmi.n	80007c6 <__swsetup_r+0x82>
 800076c:	06dd      	lsls	r5, r3, #27
 800076e:	d411      	bmi.n	8000794 <__swsetup_r+0x50>
 8000770:	2309      	movs	r3, #9
 8000772:	6033      	str	r3, [r6, #0]
 8000774:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8000778:	81a3      	strh	r3, [r4, #12]
 800077a:	f04f 30ff 	mov.w	r0, #4294967295
 800077e:	e03e      	b.n	80007fe <__swsetup_r+0xba>
 8000780:	4b25      	ldr	r3, [pc, #148]	; (8000818 <__swsetup_r+0xd4>)
 8000782:	429c      	cmp	r4, r3
 8000784:	d101      	bne.n	800078a <__swsetup_r+0x46>
 8000786:	68ac      	ldr	r4, [r5, #8]
 8000788:	e7eb      	b.n	8000762 <__swsetup_r+0x1e>
 800078a:	4b24      	ldr	r3, [pc, #144]	; (800081c <__swsetup_r+0xd8>)
 800078c:	429c      	cmp	r4, r3
 800078e:	bf08      	it	eq
 8000790:	68ec      	ldreq	r4, [r5, #12]
 8000792:	e7e6      	b.n	8000762 <__swsetup_r+0x1e>
 8000794:	0758      	lsls	r0, r3, #29
 8000796:	d512      	bpl.n	80007be <__swsetup_r+0x7a>
 8000798:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800079a:	b141      	cbz	r1, 80007ae <__swsetup_r+0x6a>
 800079c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80007a0:	4299      	cmp	r1, r3
 80007a2:	d002      	beq.n	80007aa <__swsetup_r+0x66>
 80007a4:	4630      	mov	r0, r6
 80007a6:	f000 fa5b 	bl	8000c60 <_free_r>
 80007aa:	2300      	movs	r3, #0
 80007ac:	6363      	str	r3, [r4, #52]	; 0x34
 80007ae:	89a3      	ldrh	r3, [r4, #12]
 80007b0:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80007b4:	81a3      	strh	r3, [r4, #12]
 80007b6:	2300      	movs	r3, #0
 80007b8:	6063      	str	r3, [r4, #4]
 80007ba:	6923      	ldr	r3, [r4, #16]
 80007bc:	6023      	str	r3, [r4, #0]
 80007be:	89a3      	ldrh	r3, [r4, #12]
 80007c0:	f043 0308 	orr.w	r3, r3, #8
 80007c4:	81a3      	strh	r3, [r4, #12]
 80007c6:	6923      	ldr	r3, [r4, #16]
 80007c8:	b94b      	cbnz	r3, 80007de <__swsetup_r+0x9a>
 80007ca:	89a3      	ldrh	r3, [r4, #12]
 80007cc:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80007d0:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80007d4:	d003      	beq.n	80007de <__swsetup_r+0x9a>
 80007d6:	4621      	mov	r1, r4
 80007d8:	4630      	mov	r0, r6
 80007da:	f000 fa01 	bl	8000be0 <__smakebuf_r>
 80007de:	89a0      	ldrh	r0, [r4, #12]
 80007e0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80007e4:	f010 0301 	ands.w	r3, r0, #1
 80007e8:	d00a      	beq.n	8000800 <__swsetup_r+0xbc>
 80007ea:	2300      	movs	r3, #0
 80007ec:	60a3      	str	r3, [r4, #8]
 80007ee:	6963      	ldr	r3, [r4, #20]
 80007f0:	425b      	negs	r3, r3
 80007f2:	61a3      	str	r3, [r4, #24]
 80007f4:	6923      	ldr	r3, [r4, #16]
 80007f6:	b943      	cbnz	r3, 800080a <__swsetup_r+0xc6>
 80007f8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80007fc:	d1ba      	bne.n	8000774 <__swsetup_r+0x30>
 80007fe:	bd70      	pop	{r4, r5, r6, pc}
 8000800:	0781      	lsls	r1, r0, #30
 8000802:	bf58      	it	pl
 8000804:	6963      	ldrpl	r3, [r4, #20]
 8000806:	60a3      	str	r3, [r4, #8]
 8000808:	e7f4      	b.n	80007f4 <__swsetup_r+0xb0>
 800080a:	2000      	movs	r0, #0
 800080c:	e7f7      	b.n	80007fe <__swsetup_r+0xba>
 800080e:	bf00      	nop
 8000810:	20000000 	.word	0x20000000
 8000814:	08001634 	.word	0x08001634
 8000818:	08001654 	.word	0x08001654
 800081c:	08001614 	.word	0x08001614

08000820 <__sflush_r>:
 8000820:	898a      	ldrh	r2, [r1, #12]
 8000822:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000826:	4605      	mov	r5, r0
 8000828:	0710      	lsls	r0, r2, #28
 800082a:	460c      	mov	r4, r1
 800082c:	d458      	bmi.n	80008e0 <__sflush_r+0xc0>
 800082e:	684b      	ldr	r3, [r1, #4]
 8000830:	2b00      	cmp	r3, #0
 8000832:	dc05      	bgt.n	8000840 <__sflush_r+0x20>
 8000834:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000836:	2b00      	cmp	r3, #0
 8000838:	dc02      	bgt.n	8000840 <__sflush_r+0x20>
 800083a:	2000      	movs	r0, #0
 800083c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000840:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000842:	2e00      	cmp	r6, #0
 8000844:	d0f9      	beq.n	800083a <__sflush_r+0x1a>
 8000846:	2300      	movs	r3, #0
 8000848:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800084c:	682f      	ldr	r7, [r5, #0]
 800084e:	602b      	str	r3, [r5, #0]
 8000850:	d032      	beq.n	80008b8 <__sflush_r+0x98>
 8000852:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000854:	89a3      	ldrh	r3, [r4, #12]
 8000856:	075a      	lsls	r2, r3, #29
 8000858:	d505      	bpl.n	8000866 <__sflush_r+0x46>
 800085a:	6863      	ldr	r3, [r4, #4]
 800085c:	1ac0      	subs	r0, r0, r3
 800085e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000860:	b10b      	cbz	r3, 8000866 <__sflush_r+0x46>
 8000862:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000864:	1ac0      	subs	r0, r0, r3
 8000866:	2300      	movs	r3, #0
 8000868:	4602      	mov	r2, r0
 800086a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800086c:	6a21      	ldr	r1, [r4, #32]
 800086e:	4628      	mov	r0, r5
 8000870:	47b0      	blx	r6
 8000872:	1c43      	adds	r3, r0, #1
 8000874:	89a3      	ldrh	r3, [r4, #12]
 8000876:	d106      	bne.n	8000886 <__sflush_r+0x66>
 8000878:	6829      	ldr	r1, [r5, #0]
 800087a:	291d      	cmp	r1, #29
 800087c:	d82c      	bhi.n	80008d8 <__sflush_r+0xb8>
 800087e:	4a2a      	ldr	r2, [pc, #168]	; (8000928 <__sflush_r+0x108>)
 8000880:	40ca      	lsrs	r2, r1
 8000882:	07d6      	lsls	r6, r2, #31
 8000884:	d528      	bpl.n	80008d8 <__sflush_r+0xb8>
 8000886:	2200      	movs	r2, #0
 8000888:	6062      	str	r2, [r4, #4]
 800088a:	04d9      	lsls	r1, r3, #19
 800088c:	6922      	ldr	r2, [r4, #16]
 800088e:	6022      	str	r2, [r4, #0]
 8000890:	d504      	bpl.n	800089c <__sflush_r+0x7c>
 8000892:	1c42      	adds	r2, r0, #1
 8000894:	d101      	bne.n	800089a <__sflush_r+0x7a>
 8000896:	682b      	ldr	r3, [r5, #0]
 8000898:	b903      	cbnz	r3, 800089c <__sflush_r+0x7c>
 800089a:	6560      	str	r0, [r4, #84]	; 0x54
 800089c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800089e:	602f      	str	r7, [r5, #0]
 80008a0:	2900      	cmp	r1, #0
 80008a2:	d0ca      	beq.n	800083a <__sflush_r+0x1a>
 80008a4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80008a8:	4299      	cmp	r1, r3
 80008aa:	d002      	beq.n	80008b2 <__sflush_r+0x92>
 80008ac:	4628      	mov	r0, r5
 80008ae:	f000 f9d7 	bl	8000c60 <_free_r>
 80008b2:	2000      	movs	r0, #0
 80008b4:	6360      	str	r0, [r4, #52]	; 0x34
 80008b6:	e7c1      	b.n	800083c <__sflush_r+0x1c>
 80008b8:	6a21      	ldr	r1, [r4, #32]
 80008ba:	2301      	movs	r3, #1
 80008bc:	4628      	mov	r0, r5
 80008be:	47b0      	blx	r6
 80008c0:	1c41      	adds	r1, r0, #1
 80008c2:	d1c7      	bne.n	8000854 <__sflush_r+0x34>
 80008c4:	682b      	ldr	r3, [r5, #0]
 80008c6:	2b00      	cmp	r3, #0
 80008c8:	d0c4      	beq.n	8000854 <__sflush_r+0x34>
 80008ca:	2b1d      	cmp	r3, #29
 80008cc:	d001      	beq.n	80008d2 <__sflush_r+0xb2>
 80008ce:	2b16      	cmp	r3, #22
 80008d0:	d101      	bne.n	80008d6 <__sflush_r+0xb6>
 80008d2:	602f      	str	r7, [r5, #0]
 80008d4:	e7b1      	b.n	800083a <__sflush_r+0x1a>
 80008d6:	89a3      	ldrh	r3, [r4, #12]
 80008d8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80008dc:	81a3      	strh	r3, [r4, #12]
 80008de:	e7ad      	b.n	800083c <__sflush_r+0x1c>
 80008e0:	690f      	ldr	r7, [r1, #16]
 80008e2:	2f00      	cmp	r7, #0
 80008e4:	d0a9      	beq.n	800083a <__sflush_r+0x1a>
 80008e6:	0793      	lsls	r3, r2, #30
 80008e8:	680e      	ldr	r6, [r1, #0]
 80008ea:	bf08      	it	eq
 80008ec:	694b      	ldreq	r3, [r1, #20]
 80008ee:	600f      	str	r7, [r1, #0]
 80008f0:	bf18      	it	ne
 80008f2:	2300      	movne	r3, #0
 80008f4:	eba6 0807 	sub.w	r8, r6, r7
 80008f8:	608b      	str	r3, [r1, #8]
 80008fa:	f1b8 0f00 	cmp.w	r8, #0
 80008fe:	dd9c      	ble.n	800083a <__sflush_r+0x1a>
 8000900:	6a21      	ldr	r1, [r4, #32]
 8000902:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000904:	4643      	mov	r3, r8
 8000906:	463a      	mov	r2, r7
 8000908:	4628      	mov	r0, r5
 800090a:	47b0      	blx	r6
 800090c:	2800      	cmp	r0, #0
 800090e:	dc06      	bgt.n	800091e <__sflush_r+0xfe>
 8000910:	89a3      	ldrh	r3, [r4, #12]
 8000912:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000916:	81a3      	strh	r3, [r4, #12]
 8000918:	f04f 30ff 	mov.w	r0, #4294967295
 800091c:	e78e      	b.n	800083c <__sflush_r+0x1c>
 800091e:	4407      	add	r7, r0
 8000920:	eba8 0800 	sub.w	r8, r8, r0
 8000924:	e7e9      	b.n	80008fa <__sflush_r+0xda>
 8000926:	bf00      	nop
 8000928:	20400001 	.word	0x20400001

0800092c <_fflush_r>:
 800092c:	b538      	push	{r3, r4, r5, lr}
 800092e:	690b      	ldr	r3, [r1, #16]
 8000930:	4605      	mov	r5, r0
 8000932:	460c      	mov	r4, r1
 8000934:	b913      	cbnz	r3, 800093c <_fflush_r+0x10>
 8000936:	2500      	movs	r5, #0
 8000938:	4628      	mov	r0, r5
 800093a:	bd38      	pop	{r3, r4, r5, pc}
 800093c:	b118      	cbz	r0, 8000946 <_fflush_r+0x1a>
 800093e:	6983      	ldr	r3, [r0, #24]
 8000940:	b90b      	cbnz	r3, 8000946 <_fflush_r+0x1a>
 8000942:	f000 f887 	bl	8000a54 <__sinit>
 8000946:	4b14      	ldr	r3, [pc, #80]	; (8000998 <_fflush_r+0x6c>)
 8000948:	429c      	cmp	r4, r3
 800094a:	d11b      	bne.n	8000984 <_fflush_r+0x58>
 800094c:	686c      	ldr	r4, [r5, #4]
 800094e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000952:	2b00      	cmp	r3, #0
 8000954:	d0ef      	beq.n	8000936 <_fflush_r+0xa>
 8000956:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000958:	07d0      	lsls	r0, r2, #31
 800095a:	d404      	bmi.n	8000966 <_fflush_r+0x3a>
 800095c:	0599      	lsls	r1, r3, #22
 800095e:	d402      	bmi.n	8000966 <_fflush_r+0x3a>
 8000960:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000962:	f000 f915 	bl	8000b90 <__retarget_lock_acquire_recursive>
 8000966:	4628      	mov	r0, r5
 8000968:	4621      	mov	r1, r4
 800096a:	f7ff ff59 	bl	8000820 <__sflush_r>
 800096e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000970:	07da      	lsls	r2, r3, #31
 8000972:	4605      	mov	r5, r0
 8000974:	d4e0      	bmi.n	8000938 <_fflush_r+0xc>
 8000976:	89a3      	ldrh	r3, [r4, #12]
 8000978:	059b      	lsls	r3, r3, #22
 800097a:	d4dd      	bmi.n	8000938 <_fflush_r+0xc>
 800097c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800097e:	f000 f908 	bl	8000b92 <__retarget_lock_release_recursive>
 8000982:	e7d9      	b.n	8000938 <_fflush_r+0xc>
 8000984:	4b05      	ldr	r3, [pc, #20]	; (800099c <_fflush_r+0x70>)
 8000986:	429c      	cmp	r4, r3
 8000988:	d101      	bne.n	800098e <_fflush_r+0x62>
 800098a:	68ac      	ldr	r4, [r5, #8]
 800098c:	e7df      	b.n	800094e <_fflush_r+0x22>
 800098e:	4b04      	ldr	r3, [pc, #16]	; (80009a0 <_fflush_r+0x74>)
 8000990:	429c      	cmp	r4, r3
 8000992:	bf08      	it	eq
 8000994:	68ec      	ldreq	r4, [r5, #12]
 8000996:	e7da      	b.n	800094e <_fflush_r+0x22>
 8000998:	08001634 	.word	0x08001634
 800099c:	08001654 	.word	0x08001654
 80009a0:	08001614 	.word	0x08001614

080009a4 <std>:
 80009a4:	2300      	movs	r3, #0
 80009a6:	b510      	push	{r4, lr}
 80009a8:	4604      	mov	r4, r0
 80009aa:	e9c0 3300 	strd	r3, r3, [r0]
 80009ae:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80009b2:	6083      	str	r3, [r0, #8]
 80009b4:	8181      	strh	r1, [r0, #12]
 80009b6:	6643      	str	r3, [r0, #100]	; 0x64
 80009b8:	81c2      	strh	r2, [r0, #14]
 80009ba:	6183      	str	r3, [r0, #24]
 80009bc:	4619      	mov	r1, r3
 80009be:	2208      	movs	r2, #8
 80009c0:	305c      	adds	r0, #92	; 0x5c
 80009c2:	f7ff fdd7 	bl	8000574 <memset>
 80009c6:	4b05      	ldr	r3, [pc, #20]	; (80009dc <std+0x38>)
 80009c8:	6263      	str	r3, [r4, #36]	; 0x24
 80009ca:	4b05      	ldr	r3, [pc, #20]	; (80009e0 <std+0x3c>)
 80009cc:	62a3      	str	r3, [r4, #40]	; 0x28
 80009ce:	4b05      	ldr	r3, [pc, #20]	; (80009e4 <std+0x40>)
 80009d0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80009d2:	4b05      	ldr	r3, [pc, #20]	; (80009e8 <std+0x44>)
 80009d4:	6224      	str	r4, [r4, #32]
 80009d6:	6323      	str	r3, [r4, #48]	; 0x30
 80009d8:	bd10      	pop	{r4, pc}
 80009da:	bf00      	nop
 80009dc:	0800141d 	.word	0x0800141d
 80009e0:	0800143f 	.word	0x0800143f
 80009e4:	08001477 	.word	0x08001477
 80009e8:	0800149b 	.word	0x0800149b

080009ec <_cleanup_r>:
 80009ec:	4901      	ldr	r1, [pc, #4]	; (80009f4 <_cleanup_r+0x8>)
 80009ee:	f000 b8af 	b.w	8000b50 <_fwalk_reent>
 80009f2:	bf00      	nop
 80009f4:	0800092d 	.word	0x0800092d

080009f8 <__sfmoreglue>:
 80009f8:	b570      	push	{r4, r5, r6, lr}
 80009fa:	2268      	movs	r2, #104	; 0x68
 80009fc:	1e4d      	subs	r5, r1, #1
 80009fe:	4355      	muls	r5, r2
 8000a00:	460e      	mov	r6, r1
 8000a02:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000a06:	f000 f997 	bl	8000d38 <_malloc_r>
 8000a0a:	4604      	mov	r4, r0
 8000a0c:	b140      	cbz	r0, 8000a20 <__sfmoreglue+0x28>
 8000a0e:	2100      	movs	r1, #0
 8000a10:	e9c0 1600 	strd	r1, r6, [r0]
 8000a14:	300c      	adds	r0, #12
 8000a16:	60a0      	str	r0, [r4, #8]
 8000a18:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000a1c:	f7ff fdaa 	bl	8000574 <memset>
 8000a20:	4620      	mov	r0, r4
 8000a22:	bd70      	pop	{r4, r5, r6, pc}

08000a24 <__sfp_lock_acquire>:
 8000a24:	4801      	ldr	r0, [pc, #4]	; (8000a2c <__sfp_lock_acquire+0x8>)
 8000a26:	f000 b8b3 	b.w	8000b90 <__retarget_lock_acquire_recursive>
 8000a2a:	bf00      	nop
 8000a2c:	20000085 	.word	0x20000085

08000a30 <__sfp_lock_release>:
 8000a30:	4801      	ldr	r0, [pc, #4]	; (8000a38 <__sfp_lock_release+0x8>)
 8000a32:	f000 b8ae 	b.w	8000b92 <__retarget_lock_release_recursive>
 8000a36:	bf00      	nop
 8000a38:	20000085 	.word	0x20000085

08000a3c <__sinit_lock_acquire>:
 8000a3c:	4801      	ldr	r0, [pc, #4]	; (8000a44 <__sinit_lock_acquire+0x8>)
 8000a3e:	f000 b8a7 	b.w	8000b90 <__retarget_lock_acquire_recursive>
 8000a42:	bf00      	nop
 8000a44:	20000086 	.word	0x20000086

08000a48 <__sinit_lock_release>:
 8000a48:	4801      	ldr	r0, [pc, #4]	; (8000a50 <__sinit_lock_release+0x8>)
 8000a4a:	f000 b8a2 	b.w	8000b92 <__retarget_lock_release_recursive>
 8000a4e:	bf00      	nop
 8000a50:	20000086 	.word	0x20000086

08000a54 <__sinit>:
 8000a54:	b510      	push	{r4, lr}
 8000a56:	4604      	mov	r4, r0
 8000a58:	f7ff fff0 	bl	8000a3c <__sinit_lock_acquire>
 8000a5c:	69a3      	ldr	r3, [r4, #24]
 8000a5e:	b11b      	cbz	r3, 8000a68 <__sinit+0x14>
 8000a60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000a64:	f7ff bff0 	b.w	8000a48 <__sinit_lock_release>
 8000a68:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000a6c:	6523      	str	r3, [r4, #80]	; 0x50
 8000a6e:	4b13      	ldr	r3, [pc, #76]	; (8000abc <__sinit+0x68>)
 8000a70:	4a13      	ldr	r2, [pc, #76]	; (8000ac0 <__sinit+0x6c>)
 8000a72:	681b      	ldr	r3, [r3, #0]
 8000a74:	62a2      	str	r2, [r4, #40]	; 0x28
 8000a76:	42a3      	cmp	r3, r4
 8000a78:	bf04      	itt	eq
 8000a7a:	2301      	moveq	r3, #1
 8000a7c:	61a3      	streq	r3, [r4, #24]
 8000a7e:	4620      	mov	r0, r4
 8000a80:	f000 f820 	bl	8000ac4 <__sfp>
 8000a84:	6060      	str	r0, [r4, #4]
 8000a86:	4620      	mov	r0, r4
 8000a88:	f000 f81c 	bl	8000ac4 <__sfp>
 8000a8c:	60a0      	str	r0, [r4, #8]
 8000a8e:	4620      	mov	r0, r4
 8000a90:	f000 f818 	bl	8000ac4 <__sfp>
 8000a94:	2200      	movs	r2, #0
 8000a96:	60e0      	str	r0, [r4, #12]
 8000a98:	2104      	movs	r1, #4
 8000a9a:	6860      	ldr	r0, [r4, #4]
 8000a9c:	f7ff ff82 	bl	80009a4 <std>
 8000aa0:	68a0      	ldr	r0, [r4, #8]
 8000aa2:	2201      	movs	r2, #1
 8000aa4:	2109      	movs	r1, #9
 8000aa6:	f7ff ff7d 	bl	80009a4 <std>
 8000aaa:	68e0      	ldr	r0, [r4, #12]
 8000aac:	2202      	movs	r2, #2
 8000aae:	2112      	movs	r1, #18
 8000ab0:	f7ff ff78 	bl	80009a4 <std>
 8000ab4:	2301      	movs	r3, #1
 8000ab6:	61a3      	str	r3, [r4, #24]
 8000ab8:	e7d2      	b.n	8000a60 <__sinit+0xc>
 8000aba:	bf00      	nop
 8000abc:	08001610 	.word	0x08001610
 8000ac0:	080009ed 	.word	0x080009ed

08000ac4 <__sfp>:
 8000ac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ac6:	4607      	mov	r7, r0
 8000ac8:	f7ff ffac 	bl	8000a24 <__sfp_lock_acquire>
 8000acc:	4b1e      	ldr	r3, [pc, #120]	; (8000b48 <__sfp+0x84>)
 8000ace:	681e      	ldr	r6, [r3, #0]
 8000ad0:	69b3      	ldr	r3, [r6, #24]
 8000ad2:	b913      	cbnz	r3, 8000ada <__sfp+0x16>
 8000ad4:	4630      	mov	r0, r6
 8000ad6:	f7ff ffbd 	bl	8000a54 <__sinit>
 8000ada:	3648      	adds	r6, #72	; 0x48
 8000adc:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000ae0:	3b01      	subs	r3, #1
 8000ae2:	d503      	bpl.n	8000aec <__sfp+0x28>
 8000ae4:	6833      	ldr	r3, [r6, #0]
 8000ae6:	b30b      	cbz	r3, 8000b2c <__sfp+0x68>
 8000ae8:	6836      	ldr	r6, [r6, #0]
 8000aea:	e7f7      	b.n	8000adc <__sfp+0x18>
 8000aec:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000af0:	b9d5      	cbnz	r5, 8000b28 <__sfp+0x64>
 8000af2:	4b16      	ldr	r3, [pc, #88]	; (8000b4c <__sfp+0x88>)
 8000af4:	60e3      	str	r3, [r4, #12]
 8000af6:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000afa:	6665      	str	r5, [r4, #100]	; 0x64
 8000afc:	f000 f847 	bl	8000b8e <__retarget_lock_init_recursive>
 8000b00:	f7ff ff96 	bl	8000a30 <__sfp_lock_release>
 8000b04:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000b08:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000b0c:	6025      	str	r5, [r4, #0]
 8000b0e:	61a5      	str	r5, [r4, #24]
 8000b10:	2208      	movs	r2, #8
 8000b12:	4629      	mov	r1, r5
 8000b14:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000b18:	f7ff fd2c 	bl	8000574 <memset>
 8000b1c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000b20:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000b24:	4620      	mov	r0, r4
 8000b26:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b28:	3468      	adds	r4, #104	; 0x68
 8000b2a:	e7d9      	b.n	8000ae0 <__sfp+0x1c>
 8000b2c:	2104      	movs	r1, #4
 8000b2e:	4638      	mov	r0, r7
 8000b30:	f7ff ff62 	bl	80009f8 <__sfmoreglue>
 8000b34:	4604      	mov	r4, r0
 8000b36:	6030      	str	r0, [r6, #0]
 8000b38:	2800      	cmp	r0, #0
 8000b3a:	d1d5      	bne.n	8000ae8 <__sfp+0x24>
 8000b3c:	f7ff ff78 	bl	8000a30 <__sfp_lock_release>
 8000b40:	230c      	movs	r3, #12
 8000b42:	603b      	str	r3, [r7, #0]
 8000b44:	e7ee      	b.n	8000b24 <__sfp+0x60>
 8000b46:	bf00      	nop
 8000b48:	08001610 	.word	0x08001610
 8000b4c:	ffff0001 	.word	0xffff0001

08000b50 <_fwalk_reent>:
 8000b50:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000b54:	4606      	mov	r6, r0
 8000b56:	4688      	mov	r8, r1
 8000b58:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000b5c:	2700      	movs	r7, #0
 8000b5e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000b62:	f1b9 0901 	subs.w	r9, r9, #1
 8000b66:	d505      	bpl.n	8000b74 <_fwalk_reent+0x24>
 8000b68:	6824      	ldr	r4, [r4, #0]
 8000b6a:	2c00      	cmp	r4, #0
 8000b6c:	d1f7      	bne.n	8000b5e <_fwalk_reent+0xe>
 8000b6e:	4638      	mov	r0, r7
 8000b70:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000b74:	89ab      	ldrh	r3, [r5, #12]
 8000b76:	2b01      	cmp	r3, #1
 8000b78:	d907      	bls.n	8000b8a <_fwalk_reent+0x3a>
 8000b7a:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000b7e:	3301      	adds	r3, #1
 8000b80:	d003      	beq.n	8000b8a <_fwalk_reent+0x3a>
 8000b82:	4629      	mov	r1, r5
 8000b84:	4630      	mov	r0, r6
 8000b86:	47c0      	blx	r8
 8000b88:	4307      	orrs	r7, r0
 8000b8a:	3568      	adds	r5, #104	; 0x68
 8000b8c:	e7e9      	b.n	8000b62 <_fwalk_reent+0x12>

08000b8e <__retarget_lock_init_recursive>:
 8000b8e:	4770      	bx	lr

08000b90 <__retarget_lock_acquire_recursive>:
 8000b90:	4770      	bx	lr

08000b92 <__retarget_lock_release_recursive>:
 8000b92:	4770      	bx	lr

08000b94 <__swhatbuf_r>:
 8000b94:	b570      	push	{r4, r5, r6, lr}
 8000b96:	460e      	mov	r6, r1
 8000b98:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000b9c:	2900      	cmp	r1, #0
 8000b9e:	b096      	sub	sp, #88	; 0x58
 8000ba0:	4614      	mov	r4, r2
 8000ba2:	461d      	mov	r5, r3
 8000ba4:	da08      	bge.n	8000bb8 <__swhatbuf_r+0x24>
 8000ba6:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000baa:	2200      	movs	r2, #0
 8000bac:	602a      	str	r2, [r5, #0]
 8000bae:	061a      	lsls	r2, r3, #24
 8000bb0:	d410      	bmi.n	8000bd4 <__swhatbuf_r+0x40>
 8000bb2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000bb6:	e00e      	b.n	8000bd6 <__swhatbuf_r+0x42>
 8000bb8:	466a      	mov	r2, sp
 8000bba:	f000 fc95 	bl	80014e8 <_fstat_r>
 8000bbe:	2800      	cmp	r0, #0
 8000bc0:	dbf1      	blt.n	8000ba6 <__swhatbuf_r+0x12>
 8000bc2:	9a01      	ldr	r2, [sp, #4]
 8000bc4:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000bc8:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000bcc:	425a      	negs	r2, r3
 8000bce:	415a      	adcs	r2, r3
 8000bd0:	602a      	str	r2, [r5, #0]
 8000bd2:	e7ee      	b.n	8000bb2 <__swhatbuf_r+0x1e>
 8000bd4:	2340      	movs	r3, #64	; 0x40
 8000bd6:	2000      	movs	r0, #0
 8000bd8:	6023      	str	r3, [r4, #0]
 8000bda:	b016      	add	sp, #88	; 0x58
 8000bdc:	bd70      	pop	{r4, r5, r6, pc}
	...

08000be0 <__smakebuf_r>:
 8000be0:	898b      	ldrh	r3, [r1, #12]
 8000be2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000be4:	079d      	lsls	r5, r3, #30
 8000be6:	4606      	mov	r6, r0
 8000be8:	460c      	mov	r4, r1
 8000bea:	d507      	bpl.n	8000bfc <__smakebuf_r+0x1c>
 8000bec:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000bf0:	6023      	str	r3, [r4, #0]
 8000bf2:	6123      	str	r3, [r4, #16]
 8000bf4:	2301      	movs	r3, #1
 8000bf6:	6163      	str	r3, [r4, #20]
 8000bf8:	b002      	add	sp, #8
 8000bfa:	bd70      	pop	{r4, r5, r6, pc}
 8000bfc:	ab01      	add	r3, sp, #4
 8000bfe:	466a      	mov	r2, sp
 8000c00:	f7ff ffc8 	bl	8000b94 <__swhatbuf_r>
 8000c04:	9900      	ldr	r1, [sp, #0]
 8000c06:	4605      	mov	r5, r0
 8000c08:	4630      	mov	r0, r6
 8000c0a:	f000 f895 	bl	8000d38 <_malloc_r>
 8000c0e:	b948      	cbnz	r0, 8000c24 <__smakebuf_r+0x44>
 8000c10:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c14:	059a      	lsls	r2, r3, #22
 8000c16:	d4ef      	bmi.n	8000bf8 <__smakebuf_r+0x18>
 8000c18:	f023 0303 	bic.w	r3, r3, #3
 8000c1c:	f043 0302 	orr.w	r3, r3, #2
 8000c20:	81a3      	strh	r3, [r4, #12]
 8000c22:	e7e3      	b.n	8000bec <__smakebuf_r+0xc>
 8000c24:	4b0d      	ldr	r3, [pc, #52]	; (8000c5c <__smakebuf_r+0x7c>)
 8000c26:	62b3      	str	r3, [r6, #40]	; 0x28
 8000c28:	89a3      	ldrh	r3, [r4, #12]
 8000c2a:	6020      	str	r0, [r4, #0]
 8000c2c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c30:	81a3      	strh	r3, [r4, #12]
 8000c32:	9b00      	ldr	r3, [sp, #0]
 8000c34:	6163      	str	r3, [r4, #20]
 8000c36:	9b01      	ldr	r3, [sp, #4]
 8000c38:	6120      	str	r0, [r4, #16]
 8000c3a:	b15b      	cbz	r3, 8000c54 <__smakebuf_r+0x74>
 8000c3c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c40:	4630      	mov	r0, r6
 8000c42:	f000 fc63 	bl	800150c <_isatty_r>
 8000c46:	b128      	cbz	r0, 8000c54 <__smakebuf_r+0x74>
 8000c48:	89a3      	ldrh	r3, [r4, #12]
 8000c4a:	f023 0303 	bic.w	r3, r3, #3
 8000c4e:	f043 0301 	orr.w	r3, r3, #1
 8000c52:	81a3      	strh	r3, [r4, #12]
 8000c54:	89a0      	ldrh	r0, [r4, #12]
 8000c56:	4305      	orrs	r5, r0
 8000c58:	81a5      	strh	r5, [r4, #12]
 8000c5a:	e7cd      	b.n	8000bf8 <__smakebuf_r+0x18>
 8000c5c:	080009ed 	.word	0x080009ed

08000c60 <_free_r>:
 8000c60:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8000c62:	2900      	cmp	r1, #0
 8000c64:	d044      	beq.n	8000cf0 <_free_r+0x90>
 8000c66:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000c6a:	9001      	str	r0, [sp, #4]
 8000c6c:	2b00      	cmp	r3, #0
 8000c6e:	f1a1 0404 	sub.w	r4, r1, #4
 8000c72:	bfb8      	it	lt
 8000c74:	18e4      	addlt	r4, r4, r3
 8000c76:	f000 fc6b 	bl	8001550 <__malloc_lock>
 8000c7a:	4a1e      	ldr	r2, [pc, #120]	; (8000cf4 <_free_r+0x94>)
 8000c7c:	9801      	ldr	r0, [sp, #4]
 8000c7e:	6813      	ldr	r3, [r2, #0]
 8000c80:	b933      	cbnz	r3, 8000c90 <_free_r+0x30>
 8000c82:	6063      	str	r3, [r4, #4]
 8000c84:	6014      	str	r4, [r2, #0]
 8000c86:	b003      	add	sp, #12
 8000c88:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8000c8c:	f000 bc66 	b.w	800155c <__malloc_unlock>
 8000c90:	42a3      	cmp	r3, r4
 8000c92:	d908      	bls.n	8000ca6 <_free_r+0x46>
 8000c94:	6825      	ldr	r5, [r4, #0]
 8000c96:	1961      	adds	r1, r4, r5
 8000c98:	428b      	cmp	r3, r1
 8000c9a:	bf01      	itttt	eq
 8000c9c:	6819      	ldreq	r1, [r3, #0]
 8000c9e:	685b      	ldreq	r3, [r3, #4]
 8000ca0:	1949      	addeq	r1, r1, r5
 8000ca2:	6021      	streq	r1, [r4, #0]
 8000ca4:	e7ed      	b.n	8000c82 <_free_r+0x22>
 8000ca6:	461a      	mov	r2, r3
 8000ca8:	685b      	ldr	r3, [r3, #4]
 8000caa:	b10b      	cbz	r3, 8000cb0 <_free_r+0x50>
 8000cac:	42a3      	cmp	r3, r4
 8000cae:	d9fa      	bls.n	8000ca6 <_free_r+0x46>
 8000cb0:	6811      	ldr	r1, [r2, #0]
 8000cb2:	1855      	adds	r5, r2, r1
 8000cb4:	42a5      	cmp	r5, r4
 8000cb6:	d10b      	bne.n	8000cd0 <_free_r+0x70>
 8000cb8:	6824      	ldr	r4, [r4, #0]
 8000cba:	4421      	add	r1, r4
 8000cbc:	1854      	adds	r4, r2, r1
 8000cbe:	42a3      	cmp	r3, r4
 8000cc0:	6011      	str	r1, [r2, #0]
 8000cc2:	d1e0      	bne.n	8000c86 <_free_r+0x26>
 8000cc4:	681c      	ldr	r4, [r3, #0]
 8000cc6:	685b      	ldr	r3, [r3, #4]
 8000cc8:	6053      	str	r3, [r2, #4]
 8000cca:	4421      	add	r1, r4
 8000ccc:	6011      	str	r1, [r2, #0]
 8000cce:	e7da      	b.n	8000c86 <_free_r+0x26>
 8000cd0:	d902      	bls.n	8000cd8 <_free_r+0x78>
 8000cd2:	230c      	movs	r3, #12
 8000cd4:	6003      	str	r3, [r0, #0]
 8000cd6:	e7d6      	b.n	8000c86 <_free_r+0x26>
 8000cd8:	6825      	ldr	r5, [r4, #0]
 8000cda:	1961      	adds	r1, r4, r5
 8000cdc:	428b      	cmp	r3, r1
 8000cde:	bf04      	itt	eq
 8000ce0:	6819      	ldreq	r1, [r3, #0]
 8000ce2:	685b      	ldreq	r3, [r3, #4]
 8000ce4:	6063      	str	r3, [r4, #4]
 8000ce6:	bf04      	itt	eq
 8000ce8:	1949      	addeq	r1, r1, r5
 8000cea:	6021      	streq	r1, [r4, #0]
 8000cec:	6054      	str	r4, [r2, #4]
 8000cee:	e7ca      	b.n	8000c86 <_free_r+0x26>
 8000cf0:	b003      	add	sp, #12
 8000cf2:	bd30      	pop	{r4, r5, pc}
 8000cf4:	20000088 	.word	0x20000088

08000cf8 <sbrk_aligned>:
 8000cf8:	b570      	push	{r4, r5, r6, lr}
 8000cfa:	4e0e      	ldr	r6, [pc, #56]	; (8000d34 <sbrk_aligned+0x3c>)
 8000cfc:	460c      	mov	r4, r1
 8000cfe:	6831      	ldr	r1, [r6, #0]
 8000d00:	4605      	mov	r5, r0
 8000d02:	b911      	cbnz	r1, 8000d0a <sbrk_aligned+0x12>
 8000d04:	f000 fb7a 	bl	80013fc <_sbrk_r>
 8000d08:	6030      	str	r0, [r6, #0]
 8000d0a:	4621      	mov	r1, r4
 8000d0c:	4628      	mov	r0, r5
 8000d0e:	f000 fb75 	bl	80013fc <_sbrk_r>
 8000d12:	1c43      	adds	r3, r0, #1
 8000d14:	d00a      	beq.n	8000d2c <sbrk_aligned+0x34>
 8000d16:	1cc4      	adds	r4, r0, #3
 8000d18:	f024 0403 	bic.w	r4, r4, #3
 8000d1c:	42a0      	cmp	r0, r4
 8000d1e:	d007      	beq.n	8000d30 <sbrk_aligned+0x38>
 8000d20:	1a21      	subs	r1, r4, r0
 8000d22:	4628      	mov	r0, r5
 8000d24:	f000 fb6a 	bl	80013fc <_sbrk_r>
 8000d28:	3001      	adds	r0, #1
 8000d2a:	d101      	bne.n	8000d30 <sbrk_aligned+0x38>
 8000d2c:	f04f 34ff 	mov.w	r4, #4294967295
 8000d30:	4620      	mov	r0, r4
 8000d32:	bd70      	pop	{r4, r5, r6, pc}
 8000d34:	2000008c 	.word	0x2000008c

08000d38 <_malloc_r>:
 8000d38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000d3c:	1ccd      	adds	r5, r1, #3
 8000d3e:	f025 0503 	bic.w	r5, r5, #3
 8000d42:	3508      	adds	r5, #8
 8000d44:	2d0c      	cmp	r5, #12
 8000d46:	bf38      	it	cc
 8000d48:	250c      	movcc	r5, #12
 8000d4a:	2d00      	cmp	r5, #0
 8000d4c:	4607      	mov	r7, r0
 8000d4e:	db01      	blt.n	8000d54 <_malloc_r+0x1c>
 8000d50:	42a9      	cmp	r1, r5
 8000d52:	d905      	bls.n	8000d60 <_malloc_r+0x28>
 8000d54:	230c      	movs	r3, #12
 8000d56:	603b      	str	r3, [r7, #0]
 8000d58:	2600      	movs	r6, #0
 8000d5a:	4630      	mov	r0, r6
 8000d5c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000d60:	4e2e      	ldr	r6, [pc, #184]	; (8000e1c <_malloc_r+0xe4>)
 8000d62:	f000 fbf5 	bl	8001550 <__malloc_lock>
 8000d66:	6833      	ldr	r3, [r6, #0]
 8000d68:	461c      	mov	r4, r3
 8000d6a:	bb34      	cbnz	r4, 8000dba <_malloc_r+0x82>
 8000d6c:	4629      	mov	r1, r5
 8000d6e:	4638      	mov	r0, r7
 8000d70:	f7ff ffc2 	bl	8000cf8 <sbrk_aligned>
 8000d74:	1c43      	adds	r3, r0, #1
 8000d76:	4604      	mov	r4, r0
 8000d78:	d14d      	bne.n	8000e16 <_malloc_r+0xde>
 8000d7a:	6834      	ldr	r4, [r6, #0]
 8000d7c:	4626      	mov	r6, r4
 8000d7e:	2e00      	cmp	r6, #0
 8000d80:	d140      	bne.n	8000e04 <_malloc_r+0xcc>
 8000d82:	6823      	ldr	r3, [r4, #0]
 8000d84:	4631      	mov	r1, r6
 8000d86:	4638      	mov	r0, r7
 8000d88:	eb04 0803 	add.w	r8, r4, r3
 8000d8c:	f000 fb36 	bl	80013fc <_sbrk_r>
 8000d90:	4580      	cmp	r8, r0
 8000d92:	d13a      	bne.n	8000e0a <_malloc_r+0xd2>
 8000d94:	6821      	ldr	r1, [r4, #0]
 8000d96:	3503      	adds	r5, #3
 8000d98:	1a6d      	subs	r5, r5, r1
 8000d9a:	f025 0503 	bic.w	r5, r5, #3
 8000d9e:	3508      	adds	r5, #8
 8000da0:	2d0c      	cmp	r5, #12
 8000da2:	bf38      	it	cc
 8000da4:	250c      	movcc	r5, #12
 8000da6:	4629      	mov	r1, r5
 8000da8:	4638      	mov	r0, r7
 8000daa:	f7ff ffa5 	bl	8000cf8 <sbrk_aligned>
 8000dae:	3001      	adds	r0, #1
 8000db0:	d02b      	beq.n	8000e0a <_malloc_r+0xd2>
 8000db2:	6823      	ldr	r3, [r4, #0]
 8000db4:	442b      	add	r3, r5
 8000db6:	6023      	str	r3, [r4, #0]
 8000db8:	e00e      	b.n	8000dd8 <_malloc_r+0xa0>
 8000dba:	6822      	ldr	r2, [r4, #0]
 8000dbc:	1b52      	subs	r2, r2, r5
 8000dbe:	d41e      	bmi.n	8000dfe <_malloc_r+0xc6>
 8000dc0:	2a0b      	cmp	r2, #11
 8000dc2:	d916      	bls.n	8000df2 <_malloc_r+0xba>
 8000dc4:	1961      	adds	r1, r4, r5
 8000dc6:	42a3      	cmp	r3, r4
 8000dc8:	6025      	str	r5, [r4, #0]
 8000dca:	bf18      	it	ne
 8000dcc:	6059      	strne	r1, [r3, #4]
 8000dce:	6863      	ldr	r3, [r4, #4]
 8000dd0:	bf08      	it	eq
 8000dd2:	6031      	streq	r1, [r6, #0]
 8000dd4:	5162      	str	r2, [r4, r5]
 8000dd6:	604b      	str	r3, [r1, #4]
 8000dd8:	4638      	mov	r0, r7
 8000dda:	f104 060b 	add.w	r6, r4, #11
 8000dde:	f000 fbbd 	bl	800155c <__malloc_unlock>
 8000de2:	f026 0607 	bic.w	r6, r6, #7
 8000de6:	1d23      	adds	r3, r4, #4
 8000de8:	1af2      	subs	r2, r6, r3
 8000dea:	d0b6      	beq.n	8000d5a <_malloc_r+0x22>
 8000dec:	1b9b      	subs	r3, r3, r6
 8000dee:	50a3      	str	r3, [r4, r2]
 8000df0:	e7b3      	b.n	8000d5a <_malloc_r+0x22>
 8000df2:	6862      	ldr	r2, [r4, #4]
 8000df4:	42a3      	cmp	r3, r4
 8000df6:	bf0c      	ite	eq
 8000df8:	6032      	streq	r2, [r6, #0]
 8000dfa:	605a      	strne	r2, [r3, #4]
 8000dfc:	e7ec      	b.n	8000dd8 <_malloc_r+0xa0>
 8000dfe:	4623      	mov	r3, r4
 8000e00:	6864      	ldr	r4, [r4, #4]
 8000e02:	e7b2      	b.n	8000d6a <_malloc_r+0x32>
 8000e04:	4634      	mov	r4, r6
 8000e06:	6876      	ldr	r6, [r6, #4]
 8000e08:	e7b9      	b.n	8000d7e <_malloc_r+0x46>
 8000e0a:	230c      	movs	r3, #12
 8000e0c:	603b      	str	r3, [r7, #0]
 8000e0e:	4638      	mov	r0, r7
 8000e10:	f000 fba4 	bl	800155c <__malloc_unlock>
 8000e14:	e7a1      	b.n	8000d5a <_malloc_r+0x22>
 8000e16:	6025      	str	r5, [r4, #0]
 8000e18:	e7de      	b.n	8000dd8 <_malloc_r+0xa0>
 8000e1a:	bf00      	nop
 8000e1c:	20000088 	.word	0x20000088

08000e20 <__sfputc_r>:
 8000e20:	6893      	ldr	r3, [r2, #8]
 8000e22:	3b01      	subs	r3, #1
 8000e24:	2b00      	cmp	r3, #0
 8000e26:	b410      	push	{r4}
 8000e28:	6093      	str	r3, [r2, #8]
 8000e2a:	da08      	bge.n	8000e3e <__sfputc_r+0x1e>
 8000e2c:	6994      	ldr	r4, [r2, #24]
 8000e2e:	42a3      	cmp	r3, r4
 8000e30:	db01      	blt.n	8000e36 <__sfputc_r+0x16>
 8000e32:	290a      	cmp	r1, #10
 8000e34:	d103      	bne.n	8000e3e <__sfputc_r+0x1e>
 8000e36:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e3a:	f7ff bc31 	b.w	80006a0 <__swbuf_r>
 8000e3e:	6813      	ldr	r3, [r2, #0]
 8000e40:	1c58      	adds	r0, r3, #1
 8000e42:	6010      	str	r0, [r2, #0]
 8000e44:	7019      	strb	r1, [r3, #0]
 8000e46:	4608      	mov	r0, r1
 8000e48:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000e4c:	4770      	bx	lr

08000e4e <__sfputs_r>:
 8000e4e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000e50:	4606      	mov	r6, r0
 8000e52:	460f      	mov	r7, r1
 8000e54:	4614      	mov	r4, r2
 8000e56:	18d5      	adds	r5, r2, r3
 8000e58:	42ac      	cmp	r4, r5
 8000e5a:	d101      	bne.n	8000e60 <__sfputs_r+0x12>
 8000e5c:	2000      	movs	r0, #0
 8000e5e:	e007      	b.n	8000e70 <__sfputs_r+0x22>
 8000e60:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e64:	463a      	mov	r2, r7
 8000e66:	4630      	mov	r0, r6
 8000e68:	f7ff ffda 	bl	8000e20 <__sfputc_r>
 8000e6c:	1c43      	adds	r3, r0, #1
 8000e6e:	d1f3      	bne.n	8000e58 <__sfputs_r+0xa>
 8000e70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000e74 <_vfiprintf_r>:
 8000e74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000e78:	460d      	mov	r5, r1
 8000e7a:	b09d      	sub	sp, #116	; 0x74
 8000e7c:	4614      	mov	r4, r2
 8000e7e:	4698      	mov	r8, r3
 8000e80:	4606      	mov	r6, r0
 8000e82:	b118      	cbz	r0, 8000e8c <_vfiprintf_r+0x18>
 8000e84:	6983      	ldr	r3, [r0, #24]
 8000e86:	b90b      	cbnz	r3, 8000e8c <_vfiprintf_r+0x18>
 8000e88:	f7ff fde4 	bl	8000a54 <__sinit>
 8000e8c:	4b89      	ldr	r3, [pc, #548]	; (80010b4 <_vfiprintf_r+0x240>)
 8000e8e:	429d      	cmp	r5, r3
 8000e90:	d11b      	bne.n	8000eca <_vfiprintf_r+0x56>
 8000e92:	6875      	ldr	r5, [r6, #4]
 8000e94:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000e96:	07d9      	lsls	r1, r3, #31
 8000e98:	d405      	bmi.n	8000ea6 <_vfiprintf_r+0x32>
 8000e9a:	89ab      	ldrh	r3, [r5, #12]
 8000e9c:	059a      	lsls	r2, r3, #22
 8000e9e:	d402      	bmi.n	8000ea6 <_vfiprintf_r+0x32>
 8000ea0:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ea2:	f7ff fe75 	bl	8000b90 <__retarget_lock_acquire_recursive>
 8000ea6:	89ab      	ldrh	r3, [r5, #12]
 8000ea8:	071b      	lsls	r3, r3, #28
 8000eaa:	d501      	bpl.n	8000eb0 <_vfiprintf_r+0x3c>
 8000eac:	692b      	ldr	r3, [r5, #16]
 8000eae:	b9eb      	cbnz	r3, 8000eec <_vfiprintf_r+0x78>
 8000eb0:	4629      	mov	r1, r5
 8000eb2:	4630      	mov	r0, r6
 8000eb4:	f7ff fc46 	bl	8000744 <__swsetup_r>
 8000eb8:	b1c0      	cbz	r0, 8000eec <_vfiprintf_r+0x78>
 8000eba:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000ebc:	07dc      	lsls	r4, r3, #31
 8000ebe:	d50e      	bpl.n	8000ede <_vfiprintf_r+0x6a>
 8000ec0:	f04f 30ff 	mov.w	r0, #4294967295
 8000ec4:	b01d      	add	sp, #116	; 0x74
 8000ec6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000eca:	4b7b      	ldr	r3, [pc, #492]	; (80010b8 <_vfiprintf_r+0x244>)
 8000ecc:	429d      	cmp	r5, r3
 8000ece:	d101      	bne.n	8000ed4 <_vfiprintf_r+0x60>
 8000ed0:	68b5      	ldr	r5, [r6, #8]
 8000ed2:	e7df      	b.n	8000e94 <_vfiprintf_r+0x20>
 8000ed4:	4b79      	ldr	r3, [pc, #484]	; (80010bc <_vfiprintf_r+0x248>)
 8000ed6:	429d      	cmp	r5, r3
 8000ed8:	bf08      	it	eq
 8000eda:	68f5      	ldreq	r5, [r6, #12]
 8000edc:	e7da      	b.n	8000e94 <_vfiprintf_r+0x20>
 8000ede:	89ab      	ldrh	r3, [r5, #12]
 8000ee0:	0598      	lsls	r0, r3, #22
 8000ee2:	d4ed      	bmi.n	8000ec0 <_vfiprintf_r+0x4c>
 8000ee4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000ee6:	f7ff fe54 	bl	8000b92 <__retarget_lock_release_recursive>
 8000eea:	e7e9      	b.n	8000ec0 <_vfiprintf_r+0x4c>
 8000eec:	2300      	movs	r3, #0
 8000eee:	9309      	str	r3, [sp, #36]	; 0x24
 8000ef0:	2320      	movs	r3, #32
 8000ef2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000ef6:	f8cd 800c 	str.w	r8, [sp, #12]
 8000efa:	2330      	movs	r3, #48	; 0x30
 8000efc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 80010c0 <_vfiprintf_r+0x24c>
 8000f00:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000f04:	f04f 0901 	mov.w	r9, #1
 8000f08:	4623      	mov	r3, r4
 8000f0a:	469a      	mov	sl, r3
 8000f0c:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000f10:	b10a      	cbz	r2, 8000f16 <_vfiprintf_r+0xa2>
 8000f12:	2a25      	cmp	r2, #37	; 0x25
 8000f14:	d1f9      	bne.n	8000f0a <_vfiprintf_r+0x96>
 8000f16:	ebba 0b04 	subs.w	fp, sl, r4
 8000f1a:	d00b      	beq.n	8000f34 <_vfiprintf_r+0xc0>
 8000f1c:	465b      	mov	r3, fp
 8000f1e:	4622      	mov	r2, r4
 8000f20:	4629      	mov	r1, r5
 8000f22:	4630      	mov	r0, r6
 8000f24:	f7ff ff93 	bl	8000e4e <__sfputs_r>
 8000f28:	3001      	adds	r0, #1
 8000f2a:	f000 80aa 	beq.w	8001082 <_vfiprintf_r+0x20e>
 8000f2e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000f30:	445a      	add	r2, fp
 8000f32:	9209      	str	r2, [sp, #36]	; 0x24
 8000f34:	f89a 3000 	ldrb.w	r3, [sl]
 8000f38:	2b00      	cmp	r3, #0
 8000f3a:	f000 80a2 	beq.w	8001082 <_vfiprintf_r+0x20e>
 8000f3e:	2300      	movs	r3, #0
 8000f40:	f04f 32ff 	mov.w	r2, #4294967295
 8000f44:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000f48:	f10a 0a01 	add.w	sl, sl, #1
 8000f4c:	9304      	str	r3, [sp, #16]
 8000f4e:	9307      	str	r3, [sp, #28]
 8000f50:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000f54:	931a      	str	r3, [sp, #104]	; 0x68
 8000f56:	4654      	mov	r4, sl
 8000f58:	2205      	movs	r2, #5
 8000f5a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f5e:	4858      	ldr	r0, [pc, #352]	; (80010c0 <_vfiprintf_r+0x24c>)
 8000f60:	f7ff f93e 	bl	80001e0 <memchr>
 8000f64:	9a04      	ldr	r2, [sp, #16]
 8000f66:	b9d8      	cbnz	r0, 8000fa0 <_vfiprintf_r+0x12c>
 8000f68:	06d1      	lsls	r1, r2, #27
 8000f6a:	bf44      	itt	mi
 8000f6c:	2320      	movmi	r3, #32
 8000f6e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000f72:	0713      	lsls	r3, r2, #28
 8000f74:	bf44      	itt	mi
 8000f76:	232b      	movmi	r3, #43	; 0x2b
 8000f78:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000f7c:	f89a 3000 	ldrb.w	r3, [sl]
 8000f80:	2b2a      	cmp	r3, #42	; 0x2a
 8000f82:	d015      	beq.n	8000fb0 <_vfiprintf_r+0x13c>
 8000f84:	9a07      	ldr	r2, [sp, #28]
 8000f86:	4654      	mov	r4, sl
 8000f88:	2000      	movs	r0, #0
 8000f8a:	f04f 0c0a 	mov.w	ip, #10
 8000f8e:	4621      	mov	r1, r4
 8000f90:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000f94:	3b30      	subs	r3, #48	; 0x30
 8000f96:	2b09      	cmp	r3, #9
 8000f98:	d94e      	bls.n	8001038 <_vfiprintf_r+0x1c4>
 8000f9a:	b1b0      	cbz	r0, 8000fca <_vfiprintf_r+0x156>
 8000f9c:	9207      	str	r2, [sp, #28]
 8000f9e:	e014      	b.n	8000fca <_vfiprintf_r+0x156>
 8000fa0:	eba0 0308 	sub.w	r3, r0, r8
 8000fa4:	fa09 f303 	lsl.w	r3, r9, r3
 8000fa8:	4313      	orrs	r3, r2
 8000faa:	9304      	str	r3, [sp, #16]
 8000fac:	46a2      	mov	sl, r4
 8000fae:	e7d2      	b.n	8000f56 <_vfiprintf_r+0xe2>
 8000fb0:	9b03      	ldr	r3, [sp, #12]
 8000fb2:	1d19      	adds	r1, r3, #4
 8000fb4:	681b      	ldr	r3, [r3, #0]
 8000fb6:	9103      	str	r1, [sp, #12]
 8000fb8:	2b00      	cmp	r3, #0
 8000fba:	bfbb      	ittet	lt
 8000fbc:	425b      	neglt	r3, r3
 8000fbe:	f042 0202 	orrlt.w	r2, r2, #2
 8000fc2:	9307      	strge	r3, [sp, #28]
 8000fc4:	9307      	strlt	r3, [sp, #28]
 8000fc6:	bfb8      	it	lt
 8000fc8:	9204      	strlt	r2, [sp, #16]
 8000fca:	7823      	ldrb	r3, [r4, #0]
 8000fcc:	2b2e      	cmp	r3, #46	; 0x2e
 8000fce:	d10c      	bne.n	8000fea <_vfiprintf_r+0x176>
 8000fd0:	7863      	ldrb	r3, [r4, #1]
 8000fd2:	2b2a      	cmp	r3, #42	; 0x2a
 8000fd4:	d135      	bne.n	8001042 <_vfiprintf_r+0x1ce>
 8000fd6:	9b03      	ldr	r3, [sp, #12]
 8000fd8:	1d1a      	adds	r2, r3, #4
 8000fda:	681b      	ldr	r3, [r3, #0]
 8000fdc:	9203      	str	r2, [sp, #12]
 8000fde:	2b00      	cmp	r3, #0
 8000fe0:	bfb8      	it	lt
 8000fe2:	f04f 33ff 	movlt.w	r3, #4294967295
 8000fe6:	3402      	adds	r4, #2
 8000fe8:	9305      	str	r3, [sp, #20]
 8000fea:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 80010d0 <_vfiprintf_r+0x25c>
 8000fee:	7821      	ldrb	r1, [r4, #0]
 8000ff0:	2203      	movs	r2, #3
 8000ff2:	4650      	mov	r0, sl
 8000ff4:	f7ff f8f4 	bl	80001e0 <memchr>
 8000ff8:	b140      	cbz	r0, 800100c <_vfiprintf_r+0x198>
 8000ffa:	2340      	movs	r3, #64	; 0x40
 8000ffc:	eba0 000a 	sub.w	r0, r0, sl
 8001000:	fa03 f000 	lsl.w	r0, r3, r0
 8001004:	9b04      	ldr	r3, [sp, #16]
 8001006:	4303      	orrs	r3, r0
 8001008:	3401      	adds	r4, #1
 800100a:	9304      	str	r3, [sp, #16]
 800100c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001010:	482c      	ldr	r0, [pc, #176]	; (80010c4 <_vfiprintf_r+0x250>)
 8001012:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8001016:	2206      	movs	r2, #6
 8001018:	f7ff f8e2 	bl	80001e0 <memchr>
 800101c:	2800      	cmp	r0, #0
 800101e:	d03f      	beq.n	80010a0 <_vfiprintf_r+0x22c>
 8001020:	4b29      	ldr	r3, [pc, #164]	; (80010c8 <_vfiprintf_r+0x254>)
 8001022:	bb1b      	cbnz	r3, 800106c <_vfiprintf_r+0x1f8>
 8001024:	9b03      	ldr	r3, [sp, #12]
 8001026:	3307      	adds	r3, #7
 8001028:	f023 0307 	bic.w	r3, r3, #7
 800102c:	3308      	adds	r3, #8
 800102e:	9303      	str	r3, [sp, #12]
 8001030:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001032:	443b      	add	r3, r7
 8001034:	9309      	str	r3, [sp, #36]	; 0x24
 8001036:	e767      	b.n	8000f08 <_vfiprintf_r+0x94>
 8001038:	fb0c 3202 	mla	r2, ip, r2, r3
 800103c:	460c      	mov	r4, r1
 800103e:	2001      	movs	r0, #1
 8001040:	e7a5      	b.n	8000f8e <_vfiprintf_r+0x11a>
 8001042:	2300      	movs	r3, #0
 8001044:	3401      	adds	r4, #1
 8001046:	9305      	str	r3, [sp, #20]
 8001048:	4619      	mov	r1, r3
 800104a:	f04f 0c0a 	mov.w	ip, #10
 800104e:	4620      	mov	r0, r4
 8001050:	f810 2b01 	ldrb.w	r2, [r0], #1
 8001054:	3a30      	subs	r2, #48	; 0x30
 8001056:	2a09      	cmp	r2, #9
 8001058:	d903      	bls.n	8001062 <_vfiprintf_r+0x1ee>
 800105a:	2b00      	cmp	r3, #0
 800105c:	d0c5      	beq.n	8000fea <_vfiprintf_r+0x176>
 800105e:	9105      	str	r1, [sp, #20]
 8001060:	e7c3      	b.n	8000fea <_vfiprintf_r+0x176>
 8001062:	fb0c 2101 	mla	r1, ip, r1, r2
 8001066:	4604      	mov	r4, r0
 8001068:	2301      	movs	r3, #1
 800106a:	e7f0      	b.n	800104e <_vfiprintf_r+0x1da>
 800106c:	ab03      	add	r3, sp, #12
 800106e:	9300      	str	r3, [sp, #0]
 8001070:	462a      	mov	r2, r5
 8001072:	4b16      	ldr	r3, [pc, #88]	; (80010cc <_vfiprintf_r+0x258>)
 8001074:	a904      	add	r1, sp, #16
 8001076:	4630      	mov	r0, r6
 8001078:	f3af 8000 	nop.w
 800107c:	4607      	mov	r7, r0
 800107e:	1c78      	adds	r0, r7, #1
 8001080:	d1d6      	bne.n	8001030 <_vfiprintf_r+0x1bc>
 8001082:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8001084:	07d9      	lsls	r1, r3, #31
 8001086:	d405      	bmi.n	8001094 <_vfiprintf_r+0x220>
 8001088:	89ab      	ldrh	r3, [r5, #12]
 800108a:	059a      	lsls	r2, r3, #22
 800108c:	d402      	bmi.n	8001094 <_vfiprintf_r+0x220>
 800108e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8001090:	f7ff fd7f 	bl	8000b92 <__retarget_lock_release_recursive>
 8001094:	89ab      	ldrh	r3, [r5, #12]
 8001096:	065b      	lsls	r3, r3, #25
 8001098:	f53f af12 	bmi.w	8000ec0 <_vfiprintf_r+0x4c>
 800109c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800109e:	e711      	b.n	8000ec4 <_vfiprintf_r+0x50>
 80010a0:	ab03      	add	r3, sp, #12
 80010a2:	9300      	str	r3, [sp, #0]
 80010a4:	462a      	mov	r2, r5
 80010a6:	4b09      	ldr	r3, [pc, #36]	; (80010cc <_vfiprintf_r+0x258>)
 80010a8:	a904      	add	r1, sp, #16
 80010aa:	4630      	mov	r0, r6
 80010ac:	f000 f880 	bl	80011b0 <_printf_i>
 80010b0:	e7e4      	b.n	800107c <_vfiprintf_r+0x208>
 80010b2:	bf00      	nop
 80010b4:	08001634 	.word	0x08001634
 80010b8:	08001654 	.word	0x08001654
 80010bc:	08001614 	.word	0x08001614
 80010c0:	08001674 	.word	0x08001674
 80010c4:	0800167e 	.word	0x0800167e
 80010c8:	00000000 	.word	0x00000000
 80010cc:	08000e4f 	.word	0x08000e4f
 80010d0:	0800167a 	.word	0x0800167a

080010d4 <_printf_common>:
 80010d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80010d8:	4616      	mov	r6, r2
 80010da:	4699      	mov	r9, r3
 80010dc:	688a      	ldr	r2, [r1, #8]
 80010de:	690b      	ldr	r3, [r1, #16]
 80010e0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80010e4:	4293      	cmp	r3, r2
 80010e6:	bfb8      	it	lt
 80010e8:	4613      	movlt	r3, r2
 80010ea:	6033      	str	r3, [r6, #0]
 80010ec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 80010f0:	4607      	mov	r7, r0
 80010f2:	460c      	mov	r4, r1
 80010f4:	b10a      	cbz	r2, 80010fa <_printf_common+0x26>
 80010f6:	3301      	adds	r3, #1
 80010f8:	6033      	str	r3, [r6, #0]
 80010fa:	6823      	ldr	r3, [r4, #0]
 80010fc:	0699      	lsls	r1, r3, #26
 80010fe:	bf42      	ittt	mi
 8001100:	6833      	ldrmi	r3, [r6, #0]
 8001102:	3302      	addmi	r3, #2
 8001104:	6033      	strmi	r3, [r6, #0]
 8001106:	6825      	ldr	r5, [r4, #0]
 8001108:	f015 0506 	ands.w	r5, r5, #6
 800110c:	d106      	bne.n	800111c <_printf_common+0x48>
 800110e:	f104 0a19 	add.w	sl, r4, #25
 8001112:	68e3      	ldr	r3, [r4, #12]
 8001114:	6832      	ldr	r2, [r6, #0]
 8001116:	1a9b      	subs	r3, r3, r2
 8001118:	42ab      	cmp	r3, r5
 800111a:	dc26      	bgt.n	800116a <_printf_common+0x96>
 800111c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001120:	1e13      	subs	r3, r2, #0
 8001122:	6822      	ldr	r2, [r4, #0]
 8001124:	bf18      	it	ne
 8001126:	2301      	movne	r3, #1
 8001128:	0692      	lsls	r2, r2, #26
 800112a:	d42b      	bmi.n	8001184 <_printf_common+0xb0>
 800112c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001130:	4649      	mov	r1, r9
 8001132:	4638      	mov	r0, r7
 8001134:	47c0      	blx	r8
 8001136:	3001      	adds	r0, #1
 8001138:	d01e      	beq.n	8001178 <_printf_common+0xa4>
 800113a:	6823      	ldr	r3, [r4, #0]
 800113c:	68e5      	ldr	r5, [r4, #12]
 800113e:	6832      	ldr	r2, [r6, #0]
 8001140:	f003 0306 	and.w	r3, r3, #6
 8001144:	2b04      	cmp	r3, #4
 8001146:	bf08      	it	eq
 8001148:	1aad      	subeq	r5, r5, r2
 800114a:	68a3      	ldr	r3, [r4, #8]
 800114c:	6922      	ldr	r2, [r4, #16]
 800114e:	bf0c      	ite	eq
 8001150:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8001154:	2500      	movne	r5, #0
 8001156:	4293      	cmp	r3, r2
 8001158:	bfc4      	itt	gt
 800115a:	1a9b      	subgt	r3, r3, r2
 800115c:	18ed      	addgt	r5, r5, r3
 800115e:	2600      	movs	r6, #0
 8001160:	341a      	adds	r4, #26
 8001162:	42b5      	cmp	r5, r6
 8001164:	d11a      	bne.n	800119c <_printf_common+0xc8>
 8001166:	2000      	movs	r0, #0
 8001168:	e008      	b.n	800117c <_printf_common+0xa8>
 800116a:	2301      	movs	r3, #1
 800116c:	4652      	mov	r2, sl
 800116e:	4649      	mov	r1, r9
 8001170:	4638      	mov	r0, r7
 8001172:	47c0      	blx	r8
 8001174:	3001      	adds	r0, #1
 8001176:	d103      	bne.n	8001180 <_printf_common+0xac>
 8001178:	f04f 30ff 	mov.w	r0, #4294967295
 800117c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001180:	3501      	adds	r5, #1
 8001182:	e7c6      	b.n	8001112 <_printf_common+0x3e>
 8001184:	18e1      	adds	r1, r4, r3
 8001186:	1c5a      	adds	r2, r3, #1
 8001188:	2030      	movs	r0, #48	; 0x30
 800118a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800118e:	4422      	add	r2, r4
 8001190:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001194:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8001198:	3302      	adds	r3, #2
 800119a:	e7c7      	b.n	800112c <_printf_common+0x58>
 800119c:	2301      	movs	r3, #1
 800119e:	4622      	mov	r2, r4
 80011a0:	4649      	mov	r1, r9
 80011a2:	4638      	mov	r0, r7
 80011a4:	47c0      	blx	r8
 80011a6:	3001      	adds	r0, #1
 80011a8:	d0e6      	beq.n	8001178 <_printf_common+0xa4>
 80011aa:	3601      	adds	r6, #1
 80011ac:	e7d9      	b.n	8001162 <_printf_common+0x8e>
	...

080011b0 <_printf_i>:
 80011b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80011b4:	7e0f      	ldrb	r7, [r1, #24]
 80011b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80011b8:	2f78      	cmp	r7, #120	; 0x78
 80011ba:	4691      	mov	r9, r2
 80011bc:	4680      	mov	r8, r0
 80011be:	460c      	mov	r4, r1
 80011c0:	469a      	mov	sl, r3
 80011c2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80011c6:	d807      	bhi.n	80011d8 <_printf_i+0x28>
 80011c8:	2f62      	cmp	r7, #98	; 0x62
 80011ca:	d80a      	bhi.n	80011e2 <_printf_i+0x32>
 80011cc:	2f00      	cmp	r7, #0
 80011ce:	f000 80d8 	beq.w	8001382 <_printf_i+0x1d2>
 80011d2:	2f58      	cmp	r7, #88	; 0x58
 80011d4:	f000 80a3 	beq.w	800131e <_printf_i+0x16e>
 80011d8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80011dc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80011e0:	e03a      	b.n	8001258 <_printf_i+0xa8>
 80011e2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80011e6:	2b15      	cmp	r3, #21
 80011e8:	d8f6      	bhi.n	80011d8 <_printf_i+0x28>
 80011ea:	a101      	add	r1, pc, #4	; (adr r1, 80011f0 <_printf_i+0x40>)
 80011ec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80011f0:	08001249 	.word	0x08001249
 80011f4:	0800125d 	.word	0x0800125d
 80011f8:	080011d9 	.word	0x080011d9
 80011fc:	080011d9 	.word	0x080011d9
 8001200:	080011d9 	.word	0x080011d9
 8001204:	080011d9 	.word	0x080011d9
 8001208:	0800125d 	.word	0x0800125d
 800120c:	080011d9 	.word	0x080011d9
 8001210:	080011d9 	.word	0x080011d9
 8001214:	080011d9 	.word	0x080011d9
 8001218:	080011d9 	.word	0x080011d9
 800121c:	08001369 	.word	0x08001369
 8001220:	0800128d 	.word	0x0800128d
 8001224:	0800134b 	.word	0x0800134b
 8001228:	080011d9 	.word	0x080011d9
 800122c:	080011d9 	.word	0x080011d9
 8001230:	0800138b 	.word	0x0800138b
 8001234:	080011d9 	.word	0x080011d9
 8001238:	0800128d 	.word	0x0800128d
 800123c:	080011d9 	.word	0x080011d9
 8001240:	080011d9 	.word	0x080011d9
 8001244:	08001353 	.word	0x08001353
 8001248:	682b      	ldr	r3, [r5, #0]
 800124a:	1d1a      	adds	r2, r3, #4
 800124c:	681b      	ldr	r3, [r3, #0]
 800124e:	602a      	str	r2, [r5, #0]
 8001250:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001254:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8001258:	2301      	movs	r3, #1
 800125a:	e0a3      	b.n	80013a4 <_printf_i+0x1f4>
 800125c:	6820      	ldr	r0, [r4, #0]
 800125e:	6829      	ldr	r1, [r5, #0]
 8001260:	0606      	lsls	r6, r0, #24
 8001262:	f101 0304 	add.w	r3, r1, #4
 8001266:	d50a      	bpl.n	800127e <_printf_i+0xce>
 8001268:	680e      	ldr	r6, [r1, #0]
 800126a:	602b      	str	r3, [r5, #0]
 800126c:	2e00      	cmp	r6, #0
 800126e:	da03      	bge.n	8001278 <_printf_i+0xc8>
 8001270:	232d      	movs	r3, #45	; 0x2d
 8001272:	4276      	negs	r6, r6
 8001274:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001278:	485e      	ldr	r0, [pc, #376]	; (80013f4 <_printf_i+0x244>)
 800127a:	230a      	movs	r3, #10
 800127c:	e019      	b.n	80012b2 <_printf_i+0x102>
 800127e:	680e      	ldr	r6, [r1, #0]
 8001280:	602b      	str	r3, [r5, #0]
 8001282:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001286:	bf18      	it	ne
 8001288:	b236      	sxthne	r6, r6
 800128a:	e7ef      	b.n	800126c <_printf_i+0xbc>
 800128c:	682b      	ldr	r3, [r5, #0]
 800128e:	6820      	ldr	r0, [r4, #0]
 8001290:	1d19      	adds	r1, r3, #4
 8001292:	6029      	str	r1, [r5, #0]
 8001294:	0601      	lsls	r1, r0, #24
 8001296:	d501      	bpl.n	800129c <_printf_i+0xec>
 8001298:	681e      	ldr	r6, [r3, #0]
 800129a:	e002      	b.n	80012a2 <_printf_i+0xf2>
 800129c:	0646      	lsls	r6, r0, #25
 800129e:	d5fb      	bpl.n	8001298 <_printf_i+0xe8>
 80012a0:	881e      	ldrh	r6, [r3, #0]
 80012a2:	4854      	ldr	r0, [pc, #336]	; (80013f4 <_printf_i+0x244>)
 80012a4:	2f6f      	cmp	r7, #111	; 0x6f
 80012a6:	bf0c      	ite	eq
 80012a8:	2308      	moveq	r3, #8
 80012aa:	230a      	movne	r3, #10
 80012ac:	2100      	movs	r1, #0
 80012ae:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80012b2:	6865      	ldr	r5, [r4, #4]
 80012b4:	60a5      	str	r5, [r4, #8]
 80012b6:	2d00      	cmp	r5, #0
 80012b8:	bfa2      	ittt	ge
 80012ba:	6821      	ldrge	r1, [r4, #0]
 80012bc:	f021 0104 	bicge.w	r1, r1, #4
 80012c0:	6021      	strge	r1, [r4, #0]
 80012c2:	b90e      	cbnz	r6, 80012c8 <_printf_i+0x118>
 80012c4:	2d00      	cmp	r5, #0
 80012c6:	d04d      	beq.n	8001364 <_printf_i+0x1b4>
 80012c8:	4615      	mov	r5, r2
 80012ca:	fbb6 f1f3 	udiv	r1, r6, r3
 80012ce:	fb03 6711 	mls	r7, r3, r1, r6
 80012d2:	5dc7      	ldrb	r7, [r0, r7]
 80012d4:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80012d8:	4637      	mov	r7, r6
 80012da:	42bb      	cmp	r3, r7
 80012dc:	460e      	mov	r6, r1
 80012de:	d9f4      	bls.n	80012ca <_printf_i+0x11a>
 80012e0:	2b08      	cmp	r3, #8
 80012e2:	d10b      	bne.n	80012fc <_printf_i+0x14c>
 80012e4:	6823      	ldr	r3, [r4, #0]
 80012e6:	07de      	lsls	r6, r3, #31
 80012e8:	d508      	bpl.n	80012fc <_printf_i+0x14c>
 80012ea:	6923      	ldr	r3, [r4, #16]
 80012ec:	6861      	ldr	r1, [r4, #4]
 80012ee:	4299      	cmp	r1, r3
 80012f0:	bfde      	ittt	le
 80012f2:	2330      	movle	r3, #48	; 0x30
 80012f4:	f805 3c01 	strble.w	r3, [r5, #-1]
 80012f8:	f105 35ff 	addle.w	r5, r5, #4294967295
 80012fc:	1b52      	subs	r2, r2, r5
 80012fe:	6122      	str	r2, [r4, #16]
 8001300:	f8cd a000 	str.w	sl, [sp]
 8001304:	464b      	mov	r3, r9
 8001306:	aa03      	add	r2, sp, #12
 8001308:	4621      	mov	r1, r4
 800130a:	4640      	mov	r0, r8
 800130c:	f7ff fee2 	bl	80010d4 <_printf_common>
 8001310:	3001      	adds	r0, #1
 8001312:	d14c      	bne.n	80013ae <_printf_i+0x1fe>
 8001314:	f04f 30ff 	mov.w	r0, #4294967295
 8001318:	b004      	add	sp, #16
 800131a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800131e:	4835      	ldr	r0, [pc, #212]	; (80013f4 <_printf_i+0x244>)
 8001320:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8001324:	6829      	ldr	r1, [r5, #0]
 8001326:	6823      	ldr	r3, [r4, #0]
 8001328:	f851 6b04 	ldr.w	r6, [r1], #4
 800132c:	6029      	str	r1, [r5, #0]
 800132e:	061d      	lsls	r5, r3, #24
 8001330:	d514      	bpl.n	800135c <_printf_i+0x1ac>
 8001332:	07df      	lsls	r7, r3, #31
 8001334:	bf44      	itt	mi
 8001336:	f043 0320 	orrmi.w	r3, r3, #32
 800133a:	6023      	strmi	r3, [r4, #0]
 800133c:	b91e      	cbnz	r6, 8001346 <_printf_i+0x196>
 800133e:	6823      	ldr	r3, [r4, #0]
 8001340:	f023 0320 	bic.w	r3, r3, #32
 8001344:	6023      	str	r3, [r4, #0]
 8001346:	2310      	movs	r3, #16
 8001348:	e7b0      	b.n	80012ac <_printf_i+0xfc>
 800134a:	6823      	ldr	r3, [r4, #0]
 800134c:	f043 0320 	orr.w	r3, r3, #32
 8001350:	6023      	str	r3, [r4, #0]
 8001352:	2378      	movs	r3, #120	; 0x78
 8001354:	4828      	ldr	r0, [pc, #160]	; (80013f8 <_printf_i+0x248>)
 8001356:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800135a:	e7e3      	b.n	8001324 <_printf_i+0x174>
 800135c:	0659      	lsls	r1, r3, #25
 800135e:	bf48      	it	mi
 8001360:	b2b6      	uxthmi	r6, r6
 8001362:	e7e6      	b.n	8001332 <_printf_i+0x182>
 8001364:	4615      	mov	r5, r2
 8001366:	e7bb      	b.n	80012e0 <_printf_i+0x130>
 8001368:	682b      	ldr	r3, [r5, #0]
 800136a:	6826      	ldr	r6, [r4, #0]
 800136c:	6961      	ldr	r1, [r4, #20]
 800136e:	1d18      	adds	r0, r3, #4
 8001370:	6028      	str	r0, [r5, #0]
 8001372:	0635      	lsls	r5, r6, #24
 8001374:	681b      	ldr	r3, [r3, #0]
 8001376:	d501      	bpl.n	800137c <_printf_i+0x1cc>
 8001378:	6019      	str	r1, [r3, #0]
 800137a:	e002      	b.n	8001382 <_printf_i+0x1d2>
 800137c:	0670      	lsls	r0, r6, #25
 800137e:	d5fb      	bpl.n	8001378 <_printf_i+0x1c8>
 8001380:	8019      	strh	r1, [r3, #0]
 8001382:	2300      	movs	r3, #0
 8001384:	6123      	str	r3, [r4, #16]
 8001386:	4615      	mov	r5, r2
 8001388:	e7ba      	b.n	8001300 <_printf_i+0x150>
 800138a:	682b      	ldr	r3, [r5, #0]
 800138c:	1d1a      	adds	r2, r3, #4
 800138e:	602a      	str	r2, [r5, #0]
 8001390:	681d      	ldr	r5, [r3, #0]
 8001392:	6862      	ldr	r2, [r4, #4]
 8001394:	2100      	movs	r1, #0
 8001396:	4628      	mov	r0, r5
 8001398:	f7fe ff22 	bl	80001e0 <memchr>
 800139c:	b108      	cbz	r0, 80013a2 <_printf_i+0x1f2>
 800139e:	1b40      	subs	r0, r0, r5
 80013a0:	6060      	str	r0, [r4, #4]
 80013a2:	6863      	ldr	r3, [r4, #4]
 80013a4:	6123      	str	r3, [r4, #16]
 80013a6:	2300      	movs	r3, #0
 80013a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80013ac:	e7a8      	b.n	8001300 <_printf_i+0x150>
 80013ae:	6923      	ldr	r3, [r4, #16]
 80013b0:	462a      	mov	r2, r5
 80013b2:	4649      	mov	r1, r9
 80013b4:	4640      	mov	r0, r8
 80013b6:	47d0      	blx	sl
 80013b8:	3001      	adds	r0, #1
 80013ba:	d0ab      	beq.n	8001314 <_printf_i+0x164>
 80013bc:	6823      	ldr	r3, [r4, #0]
 80013be:	079b      	lsls	r3, r3, #30
 80013c0:	d413      	bmi.n	80013ea <_printf_i+0x23a>
 80013c2:	68e0      	ldr	r0, [r4, #12]
 80013c4:	9b03      	ldr	r3, [sp, #12]
 80013c6:	4298      	cmp	r0, r3
 80013c8:	bfb8      	it	lt
 80013ca:	4618      	movlt	r0, r3
 80013cc:	e7a4      	b.n	8001318 <_printf_i+0x168>
 80013ce:	2301      	movs	r3, #1
 80013d0:	4632      	mov	r2, r6
 80013d2:	4649      	mov	r1, r9
 80013d4:	4640      	mov	r0, r8
 80013d6:	47d0      	blx	sl
 80013d8:	3001      	adds	r0, #1
 80013da:	d09b      	beq.n	8001314 <_printf_i+0x164>
 80013dc:	3501      	adds	r5, #1
 80013de:	68e3      	ldr	r3, [r4, #12]
 80013e0:	9903      	ldr	r1, [sp, #12]
 80013e2:	1a5b      	subs	r3, r3, r1
 80013e4:	42ab      	cmp	r3, r5
 80013e6:	dcf2      	bgt.n	80013ce <_printf_i+0x21e>
 80013e8:	e7eb      	b.n	80013c2 <_printf_i+0x212>
 80013ea:	2500      	movs	r5, #0
 80013ec:	f104 0619 	add.w	r6, r4, #25
 80013f0:	e7f5      	b.n	80013de <_printf_i+0x22e>
 80013f2:	bf00      	nop
 80013f4:	08001685 	.word	0x08001685
 80013f8:	08001696 	.word	0x08001696

080013fc <_sbrk_r>:
 80013fc:	b538      	push	{r3, r4, r5, lr}
 80013fe:	4d06      	ldr	r5, [pc, #24]	; (8001418 <_sbrk_r+0x1c>)
 8001400:	2300      	movs	r3, #0
 8001402:	4604      	mov	r4, r0
 8001404:	4608      	mov	r0, r1
 8001406:	602b      	str	r3, [r5, #0]
 8001408:	f7ff f82a 	bl	8000460 <_sbrk>
 800140c:	1c43      	adds	r3, r0, #1
 800140e:	d102      	bne.n	8001416 <_sbrk_r+0x1a>
 8001410:	682b      	ldr	r3, [r5, #0]
 8001412:	b103      	cbz	r3, 8001416 <_sbrk_r+0x1a>
 8001414:	6023      	str	r3, [r4, #0]
 8001416:	bd38      	pop	{r3, r4, r5, pc}
 8001418:	20000090 	.word	0x20000090

0800141c <__sread>:
 800141c:	b510      	push	{r4, lr}
 800141e:	460c      	mov	r4, r1
 8001420:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001424:	f000 f8a0 	bl	8001568 <_read_r>
 8001428:	2800      	cmp	r0, #0
 800142a:	bfab      	itete	ge
 800142c:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800142e:	89a3      	ldrhlt	r3, [r4, #12]
 8001430:	181b      	addge	r3, r3, r0
 8001432:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8001436:	bfac      	ite	ge
 8001438:	6563      	strge	r3, [r4, #84]	; 0x54
 800143a:	81a3      	strhlt	r3, [r4, #12]
 800143c:	bd10      	pop	{r4, pc}

0800143e <__swrite>:
 800143e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001442:	461f      	mov	r7, r3
 8001444:	898b      	ldrh	r3, [r1, #12]
 8001446:	05db      	lsls	r3, r3, #23
 8001448:	4605      	mov	r5, r0
 800144a:	460c      	mov	r4, r1
 800144c:	4616      	mov	r6, r2
 800144e:	d505      	bpl.n	800145c <__swrite+0x1e>
 8001450:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001454:	2302      	movs	r3, #2
 8001456:	2200      	movs	r2, #0
 8001458:	f000 f868 	bl	800152c <_lseek_r>
 800145c:	89a3      	ldrh	r3, [r4, #12]
 800145e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001462:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001466:	81a3      	strh	r3, [r4, #12]
 8001468:	4632      	mov	r2, r6
 800146a:	463b      	mov	r3, r7
 800146c:	4628      	mov	r0, r5
 800146e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001472:	f000 b817 	b.w	80014a4 <_write_r>

08001476 <__sseek>:
 8001476:	b510      	push	{r4, lr}
 8001478:	460c      	mov	r4, r1
 800147a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800147e:	f000 f855 	bl	800152c <_lseek_r>
 8001482:	1c43      	adds	r3, r0, #1
 8001484:	89a3      	ldrh	r3, [r4, #12]
 8001486:	bf15      	itete	ne
 8001488:	6560      	strne	r0, [r4, #84]	; 0x54
 800148a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800148e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001492:	81a3      	strheq	r3, [r4, #12]
 8001494:	bf18      	it	ne
 8001496:	81a3      	strhne	r3, [r4, #12]
 8001498:	bd10      	pop	{r4, pc}

0800149a <__sclose>:
 800149a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800149e:	f000 b813 	b.w	80014c8 <_close_r>
	...

080014a4 <_write_r>:
 80014a4:	b538      	push	{r3, r4, r5, lr}
 80014a6:	4d07      	ldr	r5, [pc, #28]	; (80014c4 <_write_r+0x20>)
 80014a8:	4604      	mov	r4, r0
 80014aa:	4608      	mov	r0, r1
 80014ac:	4611      	mov	r1, r2
 80014ae:	2200      	movs	r2, #0
 80014b0:	602a      	str	r2, [r5, #0]
 80014b2:	461a      	mov	r2, r3
 80014b4:	f7fe ff83 	bl	80003be <_write>
 80014b8:	1c43      	adds	r3, r0, #1
 80014ba:	d102      	bne.n	80014c2 <_write_r+0x1e>
 80014bc:	682b      	ldr	r3, [r5, #0]
 80014be:	b103      	cbz	r3, 80014c2 <_write_r+0x1e>
 80014c0:	6023      	str	r3, [r4, #0]
 80014c2:	bd38      	pop	{r3, r4, r5, pc}
 80014c4:	20000090 	.word	0x20000090

080014c8 <_close_r>:
 80014c8:	b538      	push	{r3, r4, r5, lr}
 80014ca:	4d06      	ldr	r5, [pc, #24]	; (80014e4 <_close_r+0x1c>)
 80014cc:	2300      	movs	r3, #0
 80014ce:	4604      	mov	r4, r0
 80014d0:	4608      	mov	r0, r1
 80014d2:	602b      	str	r3, [r5, #0]
 80014d4:	f7fe ff8f 	bl	80003f6 <_close>
 80014d8:	1c43      	adds	r3, r0, #1
 80014da:	d102      	bne.n	80014e2 <_close_r+0x1a>
 80014dc:	682b      	ldr	r3, [r5, #0]
 80014de:	b103      	cbz	r3, 80014e2 <_close_r+0x1a>
 80014e0:	6023      	str	r3, [r4, #0]
 80014e2:	bd38      	pop	{r3, r4, r5, pc}
 80014e4:	20000090 	.word	0x20000090

080014e8 <_fstat_r>:
 80014e8:	b538      	push	{r3, r4, r5, lr}
 80014ea:	4d07      	ldr	r5, [pc, #28]	; (8001508 <_fstat_r+0x20>)
 80014ec:	2300      	movs	r3, #0
 80014ee:	4604      	mov	r4, r0
 80014f0:	4608      	mov	r0, r1
 80014f2:	4611      	mov	r1, r2
 80014f4:	602b      	str	r3, [r5, #0]
 80014f6:	f7fe ff8a 	bl	800040e <_fstat>
 80014fa:	1c43      	adds	r3, r0, #1
 80014fc:	d102      	bne.n	8001504 <_fstat_r+0x1c>
 80014fe:	682b      	ldr	r3, [r5, #0]
 8001500:	b103      	cbz	r3, 8001504 <_fstat_r+0x1c>
 8001502:	6023      	str	r3, [r4, #0]
 8001504:	bd38      	pop	{r3, r4, r5, pc}
 8001506:	bf00      	nop
 8001508:	20000090 	.word	0x20000090

0800150c <_isatty_r>:
 800150c:	b538      	push	{r3, r4, r5, lr}
 800150e:	4d06      	ldr	r5, [pc, #24]	; (8001528 <_isatty_r+0x1c>)
 8001510:	2300      	movs	r3, #0
 8001512:	4604      	mov	r4, r0
 8001514:	4608      	mov	r0, r1
 8001516:	602b      	str	r3, [r5, #0]
 8001518:	f7fe ff89 	bl	800042e <_isatty>
 800151c:	1c43      	adds	r3, r0, #1
 800151e:	d102      	bne.n	8001526 <_isatty_r+0x1a>
 8001520:	682b      	ldr	r3, [r5, #0]
 8001522:	b103      	cbz	r3, 8001526 <_isatty_r+0x1a>
 8001524:	6023      	str	r3, [r4, #0]
 8001526:	bd38      	pop	{r3, r4, r5, pc}
 8001528:	20000090 	.word	0x20000090

0800152c <_lseek_r>:
 800152c:	b538      	push	{r3, r4, r5, lr}
 800152e:	4d07      	ldr	r5, [pc, #28]	; (800154c <_lseek_r+0x20>)
 8001530:	4604      	mov	r4, r0
 8001532:	4608      	mov	r0, r1
 8001534:	4611      	mov	r1, r2
 8001536:	2200      	movs	r2, #0
 8001538:	602a      	str	r2, [r5, #0]
 800153a:	461a      	mov	r2, r3
 800153c:	f7fe ff82 	bl	8000444 <_lseek>
 8001540:	1c43      	adds	r3, r0, #1
 8001542:	d102      	bne.n	800154a <_lseek_r+0x1e>
 8001544:	682b      	ldr	r3, [r5, #0]
 8001546:	b103      	cbz	r3, 800154a <_lseek_r+0x1e>
 8001548:	6023      	str	r3, [r4, #0]
 800154a:	bd38      	pop	{r3, r4, r5, pc}
 800154c:	20000090 	.word	0x20000090

08001550 <__malloc_lock>:
 8001550:	4801      	ldr	r0, [pc, #4]	; (8001558 <__malloc_lock+0x8>)
 8001552:	f7ff bb1d 	b.w	8000b90 <__retarget_lock_acquire_recursive>
 8001556:	bf00      	nop
 8001558:	20000084 	.word	0x20000084

0800155c <__malloc_unlock>:
 800155c:	4801      	ldr	r0, [pc, #4]	; (8001564 <__malloc_unlock+0x8>)
 800155e:	f7ff bb18 	b.w	8000b92 <__retarget_lock_release_recursive>
 8001562:	bf00      	nop
 8001564:	20000084 	.word	0x20000084

08001568 <_read_r>:
 8001568:	b538      	push	{r3, r4, r5, lr}
 800156a:	4d07      	ldr	r5, [pc, #28]	; (8001588 <_read_r+0x20>)
 800156c:	4604      	mov	r4, r0
 800156e:	4608      	mov	r0, r1
 8001570:	4611      	mov	r1, r2
 8001572:	2200      	movs	r2, #0
 8001574:	602a      	str	r2, [r5, #0]
 8001576:	461a      	mov	r2, r3
 8001578:	f7fe ff04 	bl	8000384 <_read>
 800157c:	1c43      	adds	r3, r0, #1
 800157e:	d102      	bne.n	8001586 <_read_r+0x1e>
 8001580:	682b      	ldr	r3, [r5, #0]
 8001582:	b103      	cbz	r3, 8001586 <_read_r+0x1e>
 8001584:	6023      	str	r3, [r4, #0]
 8001586:	bd38      	pop	{r3, r4, r5, pc}
 8001588:	20000090 	.word	0x20000090

0800158c <_init>:
 800158c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800158e:	bf00      	nop
 8001590:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001592:	bc08      	pop	{r3}
 8001594:	469e      	mov	lr, r3
 8001596:	4770      	bx	lr

08001598 <_fini>:
 8001598:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800159a:	bf00      	nop
 800159c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800159e:	bc08      	pop	{r3}
 80015a0:	469e      	mov	lr, r3
 80015a2:	4770      	bx	lr
