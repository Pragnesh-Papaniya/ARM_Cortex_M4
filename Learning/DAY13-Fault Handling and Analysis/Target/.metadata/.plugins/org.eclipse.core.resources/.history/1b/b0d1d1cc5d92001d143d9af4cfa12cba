/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * Copyright (c) 2023 STMicroelectronics.
 * All rights reserved.
 *
 * This software is licensed under terms that can be found in the LICENSE file
 * in the root directory of this software component.
 * If no LICENSE file comes with this software, it is provided AS-IS.
 *
 ******************************************************************************
 */

#include <stdint.h>
#include <stdio.h>

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
	//1. Enable all the configurabel exceptions like usage fault,memmnagae and bus fault
      uint32_t *pSHCSR =(uint32_t *)0xe000ed24;

	//2.Implement Fault Handlers
      *pSHCSR |=(1<<16);//Mem Manage
      *pSHCSR |=(1<<17);//Bus fault
      *pSHCSR |=(1<<18); //usage fault

	//3.Lets force the processor to execute undefined instruction

    /* Loop forever */
	for(;;);
}
void HardFault_Handler(void)
{
	printf("Exception: Hard fault \n");
	while (1);

}
void MemManage_Handler(void)
{
	printf("Exception: Memmanage \n");
		while (1);
}
void BusFault_Handler(void)
{
	printf("Exception: BusFault \n");
while (1);

}
void UsageFault_Handler(void)
{
	printf("Exception: UsageFault \n");
		while (1);
}
