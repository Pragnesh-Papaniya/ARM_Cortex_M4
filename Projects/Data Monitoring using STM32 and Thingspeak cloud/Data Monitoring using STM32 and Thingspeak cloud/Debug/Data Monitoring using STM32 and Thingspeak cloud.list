
Data Monitoring using STM32 and Thingspeak cloud.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000157c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000040  0800171c  0800171c  0000271c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800175c  0800175c  00003188  2**0
                  CONTENTS
  4 .ARM          00000008  0800175c  0800175c  0000275c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08001764  08001764  00003188  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001764  08001764  00002764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001768  08001768  00002768  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000188  20000000  0800176c  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000174  20000188  080018f4  00003188  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200002fc  080018f4  000032fc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00003188  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000e91  00000000  00000000  000031b8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000469  00000000  00000000  00004049  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000178  00000000  00000000  000044b8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000108  00000000  00000000  00004630  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  000102ad  00000000  00000000  00004738  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001839  00000000  00000000  000149e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000552fb  00000000  00000000  0001621e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0006b519  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ccc  00000000  00000000  0006b55c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 000000c9  00000000  00000000  0006c228  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000188 	.word	0x20000188
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08001704 	.word	0x08001704

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000018c 	.word	0x2000018c
 80001dc:	08001704 	.word	0x08001704

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <Basic_Commands>:
void Init_ESP8266(void);



void Basic_Commands(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0
    //"AT\r\n"; // BASIC
	printf("%s",command_basic_1);
 8000284:	4908      	ldr	r1, [pc, #32]	@ (80002a8 <Basic_Commands+0x28>)
 8000286:	4809      	ldr	r0, [pc, #36]	@ (80002ac <Basic_Commands+0x2c>)
 8000288:	f000 fb70 	bl	800096c <iprintf>
	Delay_ms(500);
 800028c:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 8000290:	f000 f8ea 	bl	8000468 <Delay_ms>
	//"AT+RST\r\n";//BASIC
	printf("%s",command_basic_2);
 8000294:	4906      	ldr	r1, [pc, #24]	@ (80002b0 <Basic_Commands+0x30>)
 8000296:	4805      	ldr	r0, [pc, #20]	@ (80002ac <Basic_Commands+0x2c>)
 8000298:	f000 fb68 	bl	800096c <iprintf>
	Delay_ms(1000);
 800029c:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80002a0:	f000 f8e2 	bl	8000468 <Delay_ms>
}
 80002a4:	bf00      	nop
 80002a6:	bd80      	pop	{r7, pc}
 80002a8:	20000000 	.word	0x20000000
 80002ac:	0800171c 	.word	0x0800171c
 80002b0:	20000008 	.word	0x20000008

080002b4 <Wifi_Conn_Commands>:

void Wifi_Conn_Commands(void)
{
 80002b4:	b580      	push	{r7, lr}
 80002b6:	af00      	add	r7, sp, #0
	//"AT+CWMODE=1\r\n";//WIFI
	printf("%s",command_ESP_1);
 80002b8:	4908      	ldr	r1, [pc, #32]	@ (80002dc <Wifi_Conn_Commands+0x28>)
 80002ba:	4809      	ldr	r0, [pc, #36]	@ (80002e0 <Wifi_Conn_Commands+0x2c>)
 80002bc:	f000 fb56 	bl	800096c <iprintf>
	Delay_ms(500);
 80002c0:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80002c4:	f000 f8d0 	bl	8000468 <Delay_ms>
	//"AT+CWQAP\r\n";//WIFI
	printf("%s",command_ESP_2);
 80002c8:	4906      	ldr	r1, [pc, #24]	@ (80002e4 <Wifi_Conn_Commands+0x30>)
 80002ca:	4805      	ldr	r0, [pc, #20]	@ (80002e0 <Wifi_Conn_Commands+0x2c>)
 80002cc:	f000 fb4e 	bl	800096c <iprintf>
	Delay_ms(500);
 80002d0:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80002d4:	f000 f8c8 	bl	8000468 <Delay_ms>

}
 80002d8:	bf00      	nop
 80002da:	bd80      	pop	{r7, pc}
 80002dc:	20000014 	.word	0x20000014
 80002e0:	0800171c 	.word	0x0800171c
 80002e4:	20000024 	.word	0x20000024

080002e8 <Wifi_acc>:

void Wifi_acc(void)
{
 80002e8:	b580      	push	{r7, lr}
 80002ea:	af00      	add	r7, sp, #0
   //"AT+CWJAP=\"warriorsway\",\"12345678\"\r\n"; // WIFI ACC;
   printf("%s",command_ESP_3);
 80002ec:	4904      	ldr	r1, [pc, #16]	@ (8000300 <Wifi_acc+0x18>)
 80002ee:	4805      	ldr	r0, [pc, #20]	@ (8000304 <Wifi_acc+0x1c>)
 80002f0:	f000 fb3c 	bl	800096c <iprintf>
   Delay_ms(8000);
 80002f4:	f44f 50fa 	mov.w	r0, #8000	@ 0x1f40
 80002f8:	f000 f8b6 	bl	8000468 <Delay_ms>
}
 80002fc:	bf00      	nop
 80002fe:	bd80      	pop	{r7, pc}
 8000300:	20000050 	.word	0x20000050
 8000304:	0800171c 	.word	0x0800171c

08000308 <Thing_Speak_Command_Start>:

void Thing_Speak_Command_Start(void)
{
 8000308:	b580      	push	{r7, lr}
 800030a:	af00      	add	r7, sp, #0
	//"AT+CWDHCP=1,1\r\n";//THINGS SPEAK
	printf("%s",command_ESP_4);
 800030c:	4904      	ldr	r1, [pc, #16]	@ (8000320 <Thing_Speak_Command_Start+0x18>)
 800030e:	4805      	ldr	r0, [pc, #20]	@ (8000324 <Thing_Speak_Command_Start+0x1c>)
 8000310:	f000 fb2c 	bl	800096c <iprintf>
	Delay_ms(5000);
 8000314:	f241 3088 	movw	r0, #5000	@ 0x1388
 8000318:	f000 f8a6 	bl	8000468 <Delay_ms>

}
 800031c:	bf00      	nop
 800031e:	bd80      	pop	{r7, pc}
 8000320:	20000034 	.word	0x20000034
 8000324:	0800171c 	.word	0x0800171c

08000328 <Data_Commands>:

void Data_Commands()
{
 8000328:	b580      	push	{r7, lr}
 800032a:	af00      	add	r7, sp, #0
	//"AT+CIPSTART=\"TCP\",\"184.106.153.149\",80\r\n";
	printf("%s",command_ESP_5);
 800032c:	4914      	ldr	r1, [pc, #80]	@ (8000380 <Data_Commands+0x58>)
 800032e:	4815      	ldr	r0, [pc, #84]	@ (8000384 <Data_Commands+0x5c>)
 8000330:	f000 fb1c 	bl	800096c <iprintf>
	Delay_ms(5000);
 8000334:	f241 3088 	movw	r0, #5000	@ 0x1388
 8000338:	f000 f896 	bl	8000468 <Delay_ms>
	//"AT+CIPSEND=64\r\n";
	printf("%s",command_ESP_6);
 800033c:	4912      	ldr	r1, [pc, #72]	@ (8000388 <Data_Commands+0x60>)
 800033e:	4811      	ldr	r0, [pc, #68]	@ (8000384 <Data_Commands+0x5c>)
 8000340:	f000 fb14 	bl	800096c <iprintf>
    Delay_ms(5000);
 8000344:	f241 3088 	movw	r0, #5000	@ 0x1388
 8000348:	f000 f88e 	bl	8000468 <Delay_ms>
    //"GET /update?api_key=J4467UDKM1YL0EXH&field1=";
	printf("%s",command_ESP_7);
 800034c:	490f      	ldr	r1, [pc, #60]	@ (800038c <Data_Commands+0x64>)
 800034e:	480d      	ldr	r0, [pc, #52]	@ (8000384 <Data_Commands+0x5c>)
 8000350:	f000 fb0c 	bl	800096c <iprintf>

	printf("%s",data_string);
 8000354:	490e      	ldr	r1, [pc, #56]	@ (8000390 <Data_Commands+0x68>)
 8000356:	480b      	ldr	r0, [pc, #44]	@ (8000384 <Data_Commands+0x5c>)
 8000358:	f000 fb08 	bl	800096c <iprintf>
	//"\r\n\r\n";
	printf("%s",command_ESP_9);
 800035c:	490d      	ldr	r1, [pc, #52]	@ (8000394 <Data_Commands+0x6c>)
 800035e:	4809      	ldr	r0, [pc, #36]	@ (8000384 <Data_Commands+0x5c>)
 8000360:	f000 fb04 	bl	800096c <iprintf>
	Delay_ms(1000);
 8000364:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 8000368:	f000 f87e 	bl	8000468 <Delay_ms>
	//"AT+CIPCLOSE\r\n"
	printf("%s",command_ESP_10);
 800036c:	490a      	ldr	r1, [pc, #40]	@ (8000398 <Data_Commands+0x70>)
 800036e:	4805      	ldr	r0, [pc, #20]	@ (8000384 <Data_Commands+0x5c>)
 8000370:	f000 fafc 	bl	800096c <iprintf>
	Delay_ms(5000);
 8000374:	f241 3088 	movw	r0, #5000	@ 0x1388
 8000378:	f000 f876 	bl	8000468 <Delay_ms>
}
 800037c:	bf00      	nop
 800037e:	bd80      	pop	{r7, pc}
 8000380:	20000084 	.word	0x20000084
 8000384:	0800171c 	.word	0x0800171c
 8000388:	200000b8 	.word	0x200000b8
 800038c:	200000cc 	.word	0x200000cc
 8000390:	200001a4 	.word	0x200001a4
 8000394:	2000010c 	.word	0x2000010c
 8000398:	20000118 	.word	0x20000118

0800039c <Init_ESP8266>:

void Init_ESP8266(void)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	af00      	add	r7, sp, #0
	Delay_ms(5000);
 80003a0:	f241 3088 	movw	r0, #5000	@ 0x1388
 80003a4:	f000 f860 	bl	8000468 <Delay_ms>
	Basic_Commands();
 80003a8:	f7ff ff6a 	bl	8000280 <Basic_Commands>
	Wifi_Conn_Commands();
 80003ac:	f7ff ff82 	bl	80002b4 <Wifi_Conn_Commands>
}
 80003b0:	bf00      	nop
 80003b2:	bd80      	pop	{r7, pc}

080003b4 <integer_to_ascii>:

void integer_to_ascii(unsigned int Val, unsigned char *str)
{
 80003b4:	b480      	push	{r7}
 80003b6:	b083      	sub	sp, #12
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	6078      	str	r0, [r7, #4]
 80003bc:	6039      	str	r1, [r7, #0]
    str[0] = Val/1000 + 0x30;
 80003be:	687b      	ldr	r3, [r7, #4]
 80003c0:	4a26      	ldr	r2, [pc, #152]	@ (800045c <integer_to_ascii+0xa8>)
 80003c2:	fba2 2303 	umull	r2, r3, r2, r3
 80003c6:	099b      	lsrs	r3, r3, #6
 80003c8:	b2db      	uxtb	r3, r3
 80003ca:	3330      	adds	r3, #48	@ 0x30
 80003cc:	b2da      	uxtb	r2, r3
 80003ce:	683b      	ldr	r3, [r7, #0]
 80003d0:	701a      	strb	r2, [r3, #0]
    Val    = Val%1000;
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	4a21      	ldr	r2, [pc, #132]	@ (800045c <integer_to_ascii+0xa8>)
 80003d6:	fba2 1203 	umull	r1, r2, r2, r3
 80003da:	0992      	lsrs	r2, r2, #6
 80003dc:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 80003e0:	fb01 f202 	mul.w	r2, r1, r2
 80003e4:	1a9b      	subs	r3, r3, r2
 80003e6:	607b      	str	r3, [r7, #4]
	str[1] = Val/100 + 0x30;
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	4a1d      	ldr	r2, [pc, #116]	@ (8000460 <integer_to_ascii+0xac>)
 80003ec:	fba2 2303 	umull	r2, r3, r2, r3
 80003f0:	095b      	lsrs	r3, r3, #5
 80003f2:	b2da      	uxtb	r2, r3
 80003f4:	683b      	ldr	r3, [r7, #0]
 80003f6:	3301      	adds	r3, #1
 80003f8:	3230      	adds	r2, #48	@ 0x30
 80003fa:	b2d2      	uxtb	r2, r2
 80003fc:	701a      	strb	r2, [r3, #0]
	Val    = Val%100;
 80003fe:	687b      	ldr	r3, [r7, #4]
 8000400:	4a17      	ldr	r2, [pc, #92]	@ (8000460 <integer_to_ascii+0xac>)
 8000402:	fba2 1203 	umull	r1, r2, r2, r3
 8000406:	0952      	lsrs	r2, r2, #5
 8000408:	2164      	movs	r1, #100	@ 0x64
 800040a:	fb01 f202 	mul.w	r2, r1, r2
 800040e:	1a9b      	subs	r3, r3, r2
 8000410:	607b      	str	r3, [r7, #4]
	str[2] = Val/10 + 0x30;
 8000412:	687b      	ldr	r3, [r7, #4]
 8000414:	4a13      	ldr	r2, [pc, #76]	@ (8000464 <integer_to_ascii+0xb0>)
 8000416:	fba2 2303 	umull	r2, r3, r2, r3
 800041a:	08db      	lsrs	r3, r3, #3
 800041c:	b2da      	uxtb	r2, r3
 800041e:	683b      	ldr	r3, [r7, #0]
 8000420:	3302      	adds	r3, #2
 8000422:	3230      	adds	r2, #48	@ 0x30
 8000424:	b2d2      	uxtb	r2, r2
 8000426:	701a      	strb	r2, [r3, #0]
	str[3] = Val%10 + 0x30;
 8000428:	6879      	ldr	r1, [r7, #4]
 800042a:	4b0e      	ldr	r3, [pc, #56]	@ (8000464 <integer_to_ascii+0xb0>)
 800042c:	fba3 2301 	umull	r2, r3, r3, r1
 8000430:	08da      	lsrs	r2, r3, #3
 8000432:	4613      	mov	r3, r2
 8000434:	009b      	lsls	r3, r3, #2
 8000436:	4413      	add	r3, r2
 8000438:	005b      	lsls	r3, r3, #1
 800043a:	1aca      	subs	r2, r1, r3
 800043c:	b2d2      	uxtb	r2, r2
 800043e:	683b      	ldr	r3, [r7, #0]
 8000440:	3303      	adds	r3, #3
 8000442:	3230      	adds	r2, #48	@ 0x30
 8000444:	b2d2      	uxtb	r2, r2
 8000446:	701a      	strb	r2, [r3, #0]
	str[4] = '\0';
 8000448:	683b      	ldr	r3, [r7, #0]
 800044a:	3304      	adds	r3, #4
 800044c:	2200      	movs	r2, #0
 800044e:	701a      	strb	r2, [r3, #0]
}
 8000450:	bf00      	nop
 8000452:	370c      	adds	r7, #12
 8000454:	46bd      	mov	sp, r7
 8000456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800045a:	4770      	bx	lr
 800045c:	10624dd3 	.word	0x10624dd3
 8000460:	51eb851f 	.word	0x51eb851f
 8000464:	cccccccd 	.word	0xcccccccd

08000468 <Delay_ms>:


void Delay_ms(int delay)
{
 8000468:	b480      	push	{r7}
 800046a:	b085      	sub	sp, #20
 800046c:	af00      	add	r7, sp, #0
 800046e:	6078      	str	r0, [r7, #4]
	int i;
	for (;delay>0;delay--)
 8000470:	e00d      	b.n	800048e <Delay_ms+0x26>
	{
		for(i=0;i<3195;i++)
 8000472:	2300      	movs	r3, #0
 8000474:	60fb      	str	r3, [r7, #12]
 8000476:	e002      	b.n	800047e <Delay_ms+0x16>
 8000478:	68fb      	ldr	r3, [r7, #12]
 800047a:	3301      	adds	r3, #1
 800047c:	60fb      	str	r3, [r7, #12]
 800047e:	68fb      	ldr	r3, [r7, #12]
 8000480:	f640 427a 	movw	r2, #3194	@ 0xc7a
 8000484:	4293      	cmp	r3, r2
 8000486:	ddf7      	ble.n	8000478 <Delay_ms+0x10>
	for (;delay>0;delay--)
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	3b01      	subs	r3, #1
 800048c:	607b      	str	r3, [r7, #4]
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	2b00      	cmp	r3, #0
 8000492:	dcee      	bgt.n	8000472 <Delay_ms+0xa>
		{

		}
	}
}
 8000494:	bf00      	nop
 8000496:	bf00      	nop
 8000498:	3714      	adds	r7, #20
 800049a:	46bd      	mov	sp, r7
 800049c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a0:	4770      	bx	lr
	...

080004a4 <UART1_Init>:
	 USART1->DR=(data&0xff);
}


void UART1_Init()
{
 80004a4:	b480      	push	{r7}
 80004a6:	af00      	add	r7, sp, #0
	//enable the clock access for GPIOA,GPIOB
	RCC->AHB1ENR |=(1U<<1);//GPIO B
 80004a8:	4b36      	ldr	r3, [pc, #216]	@ (8000584 <UART1_Init+0xe0>)
 80004aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004ac:	4a35      	ldr	r2, [pc, #212]	@ (8000584 <UART1_Init+0xe0>)
 80004ae:	f043 0302 	orr.w	r3, r3, #2
 80004b2:	6313      	str	r3, [r2, #48]	@ 0x30
	RCC->APB2ENR|=(1U<<4); //USART1
 80004b4:	4b33      	ldr	r3, [pc, #204]	@ (8000584 <UART1_Init+0xe0>)
 80004b6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80004b8:	4a32      	ldr	r2, [pc, #200]	@ (8000584 <UART1_Init+0xe0>)
 80004ba:	f043 0310 	orr.w	r3, r3, #16
 80004be:	6453      	str	r3, [r2, #68]	@ 0x44

	//SET ALT FUNCTION FOR PB6->TX AND PB7-RX
	GPIOB->MODER |=(1U<<13);
 80004c0:	4b31      	ldr	r3, [pc, #196]	@ (8000588 <UART1_Init+0xe4>)
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	4a30      	ldr	r2, [pc, #192]	@ (8000588 <UART1_Init+0xe4>)
 80004c6:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 80004ca:	6013      	str	r3, [r2, #0]
	GPIOB->MODER &=~(1U<<12);
 80004cc:	4b2e      	ldr	r3, [pc, #184]	@ (8000588 <UART1_Init+0xe4>)
 80004ce:	681b      	ldr	r3, [r3, #0]
 80004d0:	4a2d      	ldr	r2, [pc, #180]	@ (8000588 <UART1_Init+0xe4>)
 80004d2:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80004d6:	6013      	str	r3, [r2, #0]
	GPIOB->MODER |=(1U<<15);
 80004d8:	4b2b      	ldr	r3, [pc, #172]	@ (8000588 <UART1_Init+0xe4>)
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	4a2a      	ldr	r2, [pc, #168]	@ (8000588 <UART1_Init+0xe4>)
 80004de:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80004e2:	6013      	str	r3, [r2, #0]
	GPIOB->MODER &=~(1U<<14);
 80004e4:	4b28      	ldr	r3, [pc, #160]	@ (8000588 <UART1_Init+0xe4>)
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	4a27      	ldr	r2, [pc, #156]	@ (8000588 <UART1_Init+0xe4>)
 80004ea:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 80004ee:	6013      	str	r3, [r2, #0]


	GPIOB->AFR[0] |=(1U<<24);
 80004f0:	4b25      	ldr	r3, [pc, #148]	@ (8000588 <UART1_Init+0xe4>)
 80004f2:	6a1b      	ldr	r3, [r3, #32]
 80004f4:	4a24      	ldr	r2, [pc, #144]	@ (8000588 <UART1_Init+0xe4>)
 80004f6:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80004fa:	6213      	str	r3, [r2, #32]
	GPIOB->AFR[0] |=(1U<<25);
 80004fc:	4b22      	ldr	r3, [pc, #136]	@ (8000588 <UART1_Init+0xe4>)
 80004fe:	6a1b      	ldr	r3, [r3, #32]
 8000500:	4a21      	ldr	r2, [pc, #132]	@ (8000588 <UART1_Init+0xe4>)
 8000502:	f043 7300 	orr.w	r3, r3, #33554432	@ 0x2000000
 8000506:	6213      	str	r3, [r2, #32]
	GPIOB->AFR[0] |=(1U<<26);
 8000508:	4b1f      	ldr	r3, [pc, #124]	@ (8000588 <UART1_Init+0xe4>)
 800050a:	6a1b      	ldr	r3, [r3, #32]
 800050c:	4a1e      	ldr	r2, [pc, #120]	@ (8000588 <UART1_Init+0xe4>)
 800050e:	f043 6380 	orr.w	r3, r3, #67108864	@ 0x4000000
 8000512:	6213      	str	r3, [r2, #32]
	GPIOB->AFR[0] &=~(1U<<27);
 8000514:	4b1c      	ldr	r3, [pc, #112]	@ (8000588 <UART1_Init+0xe4>)
 8000516:	6a1b      	ldr	r3, [r3, #32]
 8000518:	4a1b      	ldr	r2, [pc, #108]	@ (8000588 <UART1_Init+0xe4>)
 800051a:	f023 6300 	bic.w	r3, r3, #134217728	@ 0x8000000
 800051e:	6213      	str	r3, [r2, #32]

	GPIOB->AFR[0] |=(1U<<28);
 8000520:	4b19      	ldr	r3, [pc, #100]	@ (8000588 <UART1_Init+0xe4>)
 8000522:	6a1b      	ldr	r3, [r3, #32]
 8000524:	4a18      	ldr	r2, [pc, #96]	@ (8000588 <UART1_Init+0xe4>)
 8000526:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 800052a:	6213      	str	r3, [r2, #32]
	GPIOB->AFR[0] |=(1U<<29);
 800052c:	4b16      	ldr	r3, [pc, #88]	@ (8000588 <UART1_Init+0xe4>)
 800052e:	6a1b      	ldr	r3, [r3, #32]
 8000530:	4a15      	ldr	r2, [pc, #84]	@ (8000588 <UART1_Init+0xe4>)
 8000532:	f043 5300 	orr.w	r3, r3, #536870912	@ 0x20000000
 8000536:	6213      	str	r3, [r2, #32]
	GPIOB->AFR[0] |=(1U<<30);
 8000538:	4b13      	ldr	r3, [pc, #76]	@ (8000588 <UART1_Init+0xe4>)
 800053a:	6a1b      	ldr	r3, [r3, #32]
 800053c:	4a12      	ldr	r2, [pc, #72]	@ (8000588 <UART1_Init+0xe4>)
 800053e:	f043 4380 	orr.w	r3, r3, #1073741824	@ 0x40000000
 8000542:	6213      	str	r3, [r2, #32]
	GPIOB->AFR[0] &=~(1U<<31);
 8000544:	4b10      	ldr	r3, [pc, #64]	@ (8000588 <UART1_Init+0xe4>)
 8000546:	6a1b      	ldr	r3, [r3, #32]
 8000548:	4a0f      	ldr	r2, [pc, #60]	@ (8000588 <UART1_Init+0xe4>)
 800054a:	f023 4300 	bic.w	r3, r3, #2147483648	@ 0x80000000
 800054e:	6213      	str	r3, [r2, #32]


	USART1->CR1 |=(1U<<13);
 8000550:	4b0e      	ldr	r3, [pc, #56]	@ (800058c <UART1_Init+0xe8>)
 8000552:	68db      	ldr	r3, [r3, #12]
 8000554:	4a0d      	ldr	r2, [pc, #52]	@ (800058c <UART1_Init+0xe8>)
 8000556:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 800055a:	60d3      	str	r3, [r2, #12]
	USART1->CR1 |=(1U<<2);
 800055c:	4b0b      	ldr	r3, [pc, #44]	@ (800058c <UART1_Init+0xe8>)
 800055e:	68db      	ldr	r3, [r3, #12]
 8000560:	4a0a      	ldr	r2, [pc, #40]	@ (800058c <UART1_Init+0xe8>)
 8000562:	f043 0304 	orr.w	r3, r3, #4
 8000566:	60d3      	str	r3, [r2, #12]
	USART1->CR1 |=(1U<<3);
 8000568:	4b08      	ldr	r3, [pc, #32]	@ (800058c <UART1_Init+0xe8>)
 800056a:	68db      	ldr	r3, [r3, #12]
 800056c:	4a07      	ldr	r2, [pc, #28]	@ (800058c <UART1_Init+0xe8>)
 800056e:	f043 0308 	orr.w	r3, r3, #8
 8000572:	60d3      	str	r3, [r2, #12]

	USART1->BRR=0X008B; //115200 BAUD RATE
 8000574:	4b05      	ldr	r3, [pc, #20]	@ (800058c <UART1_Init+0xe8>)
 8000576:	228b      	movs	r2, #139	@ 0x8b
 8000578:	609a      	str	r2, [r3, #8]
}
 800057a:	bf00      	nop
 800057c:	46bd      	mov	sp, r7
 800057e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000582:	4770      	bx	lr
 8000584:	40023800 	.word	0x40023800
 8000588:	40020400 	.word	0x40020400
 800058c:	40011000 	.word	0x40011000

08000590 <main>:
	return ch;
}


int main(void)
{
 8000590:	b580      	push	{r7, lr}
 8000592:	b082      	sub	sp, #8
 8000594:	af00      	add	r7, sp, #0
	    char data;
	    unsigned int Data_Adc;
	    //UART INITIALIZATION
		UART1_Init();
 8000596:	f7ff ff85 	bl	80004a4 <UART1_Init>
		//ESP8266 INITIALIZTION
		Init_ESP8266();
 800059a:	f7ff feff 	bl	800039c <Init_ESP8266>
		//WIFI ACCOUNT & PASSWORD
		Wifi_acc();
 800059e:	f7ff fea3 	bl	80002e8 <Wifi_acc>
        //THINGSPEAK COMMAND
		Thing_Speak_Command_Start();
 80005a2:	f7ff feb1 	bl	8000308 <Thing_Speak_Command_Start>
		Delay_ms(500);
 80005a6:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80005aa:	f7ff ff5d 	bl	8000468 <Delay_ms>
		Data_Adc= 30;
 80005ae:	231e      	movs	r3, #30
 80005b0:	607b      	str	r3, [r7, #4]
		//INTEGER TO ASCII
		integer_to_ascii(Data_Adc,data_string);
 80005b2:	4910      	ldr	r1, [pc, #64]	@ (80005f4 <main+0x64>)
 80005b4:	6878      	ldr	r0, [r7, #4]
 80005b6:	f7ff fefd 	bl	80003b4 <integer_to_ascii>
		//DATA COMMAND
		Data_Commands();
 80005ba:	f7ff feb5 	bl	8000328 <Data_Commands>
		Delay_ms(500);
 80005be:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80005c2:	f7ff ff51 	bl	8000468 <Delay_ms>
		Thing_Speak_Command_Start();
 80005c6:	f7ff fe9f 	bl	8000308 <Thing_Speak_Command_Start>
		Delay_ms(500);
 80005ca:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80005ce:	f7ff ff4b 	bl	8000468 <Delay_ms>
		Data_Adc= 60;
 80005d2:	233c      	movs	r3, #60	@ 0x3c
 80005d4:	607b      	str	r3, [r7, #4]
		//INTEGER TO ASCII
		integer_to_ascii(Data_Adc,data_string);
 80005d6:	4907      	ldr	r1, [pc, #28]	@ (80005f4 <main+0x64>)
 80005d8:	6878      	ldr	r0, [r7, #4]
 80005da:	f7ff feeb 	bl	80003b4 <integer_to_ascii>
		//DATA COMMAND
		Data_Commands();
 80005de:	f7ff fea3 	bl	8000328 <Data_Commands>
		Delay_ms(500);
 80005e2:	f44f 70fa 	mov.w	r0, #500	@ 0x1f4
 80005e6:	f7ff ff3f 	bl	8000468 <Delay_ms>
		printf("\n END \n");
 80005ea:	4803      	ldr	r0, [pc, #12]	@ (80005f8 <main+0x68>)
 80005ec:	f000 fa26 	bl	8000a3c <puts>
    	for(;;);
 80005f0:	bf00      	nop
 80005f2:	e7fd      	b.n	80005f0 <main+0x60>
 80005f4:	200001a4 	.word	0x200001a4
 80005f8:	08001720 	.word	0x08001720

080005fc <ITM_SendChar>:
/* ITM register addresses */
#define ITM_STIMULUS_PORT0   	*((volatile uint32_t*) 0xE0000000 )
#define ITM_TRACE_EN          	*((volatile uint32_t*) 0xE0000E00 )

void ITM_SendChar(uint8_t ch)
{
 80005fc:	b480      	push	{r7}
 80005fe:	b083      	sub	sp, #12
 8000600:	af00      	add	r7, sp, #0
 8000602:	4603      	mov	r3, r0
 8000604:	71fb      	strb	r3, [r7, #7]

	//Enable TRCENA
	DEMCR |= ( 1 << 24);
 8000606:	4b0f      	ldr	r3, [pc, #60]	@ (8000644 <ITM_SendChar+0x48>)
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	4a0e      	ldr	r2, [pc, #56]	@ (8000644 <ITM_SendChar+0x48>)
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 8000610:	6013      	str	r3, [r2, #0]

	//enable stimulus port 0
	ITM_TRACE_EN |= ( 1 << 0);
 8000612:	4b0d      	ldr	r3, [pc, #52]	@ (8000648 <ITM_SendChar+0x4c>)
 8000614:	681b      	ldr	r3, [r3, #0]
 8000616:	4a0c      	ldr	r2, [pc, #48]	@ (8000648 <ITM_SendChar+0x4c>)
 8000618:	f043 0301 	orr.w	r3, r3, #1
 800061c:	6013      	str	r3, [r2, #0]

	// read FIFO status in bit [0]:
	while(!(ITM_STIMULUS_PORT0 & 1));
 800061e:	bf00      	nop
 8000620:	f04f 4360 	mov.w	r3, #3758096384	@ 0xe0000000
 8000624:	681b      	ldr	r3, [r3, #0]
 8000626:	f003 0301 	and.w	r3, r3, #1
 800062a:	2b00      	cmp	r3, #0
 800062c:	d0f8      	beq.n	8000620 <ITM_SendChar+0x24>

	//Write to ITM stimulus port0
	ITM_STIMULUS_PORT0 = ch;
 800062e:	f04f 4260 	mov.w	r2, #3758096384	@ 0xe0000000
 8000632:	79fb      	ldrb	r3, [r7, #7]
 8000634:	6013      	str	r3, [r2, #0]
}
 8000636:	bf00      	nop
 8000638:	370c      	adds	r7, #12
 800063a:	46bd      	mov	sp, r7
 800063c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000640:	4770      	bx	lr
 8000642:	bf00      	nop
 8000644:	e000edfc 	.word	0xe000edfc
 8000648:	e0000e00 	.word	0xe0000e00

0800064c <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800064c:	b580      	push	{r7, lr}
 800064e:	b086      	sub	sp, #24
 8000650:	af00      	add	r7, sp, #0
 8000652:	60f8      	str	r0, [r7, #12]
 8000654:	60b9      	str	r1, [r7, #8]
 8000656:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000658:	2300      	movs	r3, #0
 800065a:	617b      	str	r3, [r7, #20]
 800065c:	e00a      	b.n	8000674 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800065e:	f3af 8000 	nop.w
 8000662:	4601      	mov	r1, r0
 8000664:	68bb      	ldr	r3, [r7, #8]
 8000666:	1c5a      	adds	r2, r3, #1
 8000668:	60ba      	str	r2, [r7, #8]
 800066a:	b2ca      	uxtb	r2, r1
 800066c:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800066e:	697b      	ldr	r3, [r7, #20]
 8000670:	3301      	adds	r3, #1
 8000672:	617b      	str	r3, [r7, #20]
 8000674:	697a      	ldr	r2, [r7, #20]
 8000676:	687b      	ldr	r3, [r7, #4]
 8000678:	429a      	cmp	r2, r3
 800067a:	dbf0      	blt.n	800065e <_read+0x12>
  }

  return len;
 800067c:	687b      	ldr	r3, [r7, #4]
}
 800067e:	4618      	mov	r0, r3
 8000680:	3718      	adds	r7, #24
 8000682:	46bd      	mov	sp, r7
 8000684:	bd80      	pop	{r7, pc}

08000686 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000686:	b580      	push	{r7, lr}
 8000688:	b086      	sub	sp, #24
 800068a:	af00      	add	r7, sp, #0
 800068c:	60f8      	str	r0, [r7, #12]
 800068e:	60b9      	str	r1, [r7, #8]
 8000690:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000692:	2300      	movs	r3, #0
 8000694:	617b      	str	r3, [r7, #20]
 8000696:	e009      	b.n	80006ac <_write+0x26>
  {
    //__io_putchar(*ptr++);
	  ITM_SendChar(*ptr++);
 8000698:	68bb      	ldr	r3, [r7, #8]
 800069a:	1c5a      	adds	r2, r3, #1
 800069c:	60ba      	str	r2, [r7, #8]
 800069e:	781b      	ldrb	r3, [r3, #0]
 80006a0:	4618      	mov	r0, r3
 80006a2:	f7ff ffab 	bl	80005fc <ITM_SendChar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80006a6:	697b      	ldr	r3, [r7, #20]
 80006a8:	3301      	adds	r3, #1
 80006aa:	617b      	str	r3, [r7, #20]
 80006ac:	697a      	ldr	r2, [r7, #20]
 80006ae:	687b      	ldr	r3, [r7, #4]
 80006b0:	429a      	cmp	r2, r3
 80006b2:	dbf1      	blt.n	8000698 <_write+0x12>
  }
  return len;
 80006b4:	687b      	ldr	r3, [r7, #4]
}
 80006b6:	4618      	mov	r0, r3
 80006b8:	3718      	adds	r7, #24
 80006ba:	46bd      	mov	sp, r7
 80006bc:	bd80      	pop	{r7, pc}

080006be <_close>:

int _close(int file)
{
 80006be:	b480      	push	{r7}
 80006c0:	b083      	sub	sp, #12
 80006c2:	af00      	add	r7, sp, #0
 80006c4:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 80006c6:	f04f 33ff 	mov.w	r3, #4294967295
}
 80006ca:	4618      	mov	r0, r3
 80006cc:	370c      	adds	r7, #12
 80006ce:	46bd      	mov	sp, r7
 80006d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d4:	4770      	bx	lr

080006d6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80006d6:	b480      	push	{r7}
 80006d8:	b083      	sub	sp, #12
 80006da:	af00      	add	r7, sp, #0
 80006dc:	6078      	str	r0, [r7, #4]
 80006de:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80006e0:	683b      	ldr	r3, [r7, #0]
 80006e2:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 80006e6:	605a      	str	r2, [r3, #4]
  return 0;
 80006e8:	2300      	movs	r3, #0
}
 80006ea:	4618      	mov	r0, r3
 80006ec:	370c      	adds	r7, #12
 80006ee:	46bd      	mov	sp, r7
 80006f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006f4:	4770      	bx	lr

080006f6 <_isatty>:

int _isatty(int file)
{
 80006f6:	b480      	push	{r7}
 80006f8:	b083      	sub	sp, #12
 80006fa:	af00      	add	r7, sp, #0
 80006fc:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80006fe:	2301      	movs	r3, #1
}
 8000700:	4618      	mov	r0, r3
 8000702:	370c      	adds	r7, #12
 8000704:	46bd      	mov	sp, r7
 8000706:	f85d 7b04 	ldr.w	r7, [sp], #4
 800070a:	4770      	bx	lr

0800070c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800070c:	b480      	push	{r7}
 800070e:	b085      	sub	sp, #20
 8000710:	af00      	add	r7, sp, #0
 8000712:	60f8      	str	r0, [r7, #12]
 8000714:	60b9      	str	r1, [r7, #8]
 8000716:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000718:	2300      	movs	r3, #0
}
 800071a:	4618      	mov	r0, r3
 800071c:	3714      	adds	r7, #20
 800071e:	46bd      	mov	sp, r7
 8000720:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000724:	4770      	bx	lr
	...

08000728 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000728:	b580      	push	{r7, lr}
 800072a:	b086      	sub	sp, #24
 800072c:	af00      	add	r7, sp, #0
 800072e:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000730:	4a14      	ldr	r2, [pc, #80]	@ (8000784 <_sbrk+0x5c>)
 8000732:	4b15      	ldr	r3, [pc, #84]	@ (8000788 <_sbrk+0x60>)
 8000734:	1ad3      	subs	r3, r2, r3
 8000736:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000738:	697b      	ldr	r3, [r7, #20]
 800073a:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 800073c:	4b13      	ldr	r3, [pc, #76]	@ (800078c <_sbrk+0x64>)
 800073e:	681b      	ldr	r3, [r3, #0]
 8000740:	2b00      	cmp	r3, #0
 8000742:	d102      	bne.n	800074a <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000744:	4b11      	ldr	r3, [pc, #68]	@ (800078c <_sbrk+0x64>)
 8000746:	4a12      	ldr	r2, [pc, #72]	@ (8000790 <_sbrk+0x68>)
 8000748:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800074a:	4b10      	ldr	r3, [pc, #64]	@ (800078c <_sbrk+0x64>)
 800074c:	681a      	ldr	r2, [r3, #0]
 800074e:	687b      	ldr	r3, [r7, #4]
 8000750:	4413      	add	r3, r2
 8000752:	693a      	ldr	r2, [r7, #16]
 8000754:	429a      	cmp	r2, r3
 8000756:	d207      	bcs.n	8000768 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000758:	f000 fa9e 	bl	8000c98 <__errno>
 800075c:	4603      	mov	r3, r0
 800075e:	220c      	movs	r2, #12
 8000760:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000762:	f04f 33ff 	mov.w	r3, #4294967295
 8000766:	e009      	b.n	800077c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000768:	4b08      	ldr	r3, [pc, #32]	@ (800078c <_sbrk+0x64>)
 800076a:	681b      	ldr	r3, [r3, #0]
 800076c:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800076e:	4b07      	ldr	r3, [pc, #28]	@ (800078c <_sbrk+0x64>)
 8000770:	681a      	ldr	r2, [r3, #0]
 8000772:	687b      	ldr	r3, [r7, #4]
 8000774:	4413      	add	r3, r2
 8000776:	4a05      	ldr	r2, [pc, #20]	@ (800078c <_sbrk+0x64>)
 8000778:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800077a:	68fb      	ldr	r3, [r7, #12]
}
 800077c:	4618      	mov	r0, r3
 800077e:	3718      	adds	r7, #24
 8000780:	46bd      	mov	sp, r7
 8000782:	bd80      	pop	{r7, pc}
 8000784:	20018000 	.word	0x20018000
 8000788:	00000400 	.word	0x00000400
 800078c:	200001ac 	.word	0x200001ac
 8000790:	20000300 	.word	0x20000300

08000794 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000794:	480d      	ldr	r0, [pc, #52]	@ (80007cc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000796:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000798:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800079c:	480c      	ldr	r0, [pc, #48]	@ (80007d0 <LoopForever+0x6>)
  ldr r1, =_edata
 800079e:	490d      	ldr	r1, [pc, #52]	@ (80007d4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007a0:	4a0d      	ldr	r2, [pc, #52]	@ (80007d8 <LoopForever+0xe>)
  movs r3, #0
 80007a2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007a4:	e002      	b.n	80007ac <LoopCopyDataInit>

080007a6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007a6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007a8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007aa:	3304      	adds	r3, #4

080007ac <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80007ac:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80007ae:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80007b0:	d3f9      	bcc.n	80007a6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80007b2:	4a0a      	ldr	r2, [pc, #40]	@ (80007dc <LoopForever+0x12>)
  ldr r4, =_ebss
 80007b4:	4c0a      	ldr	r4, [pc, #40]	@ (80007e0 <LoopForever+0x16>)
  movs r3, #0
 80007b6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80007b8:	e001      	b.n	80007be <LoopFillZerobss>

080007ba <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80007ba:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80007bc:	3204      	adds	r2, #4

080007be <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80007be:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80007c0:	d3fb      	bcc.n	80007ba <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80007c2:	f000 fa6f 	bl	8000ca4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007c6:	f7ff fee3 	bl	8000590 <main>

080007ca <LoopForever>:

LoopForever:
  b LoopForever
 80007ca:	e7fe      	b.n	80007ca <LoopForever>
  ldr   r0, =_estack
 80007cc:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80007d0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007d4:	20000188 	.word	0x20000188
  ldr r2, =_sidata
 80007d8:	0800176c 	.word	0x0800176c
  ldr r2, =_sbss
 80007dc:	20000188 	.word	0x20000188
  ldr r4, =_ebss
 80007e0:	200002fc 	.word	0x200002fc

080007e4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007e4:	e7fe      	b.n	80007e4 <ADC_IRQHandler>
	...

080007e8 <std>:
 80007e8:	2300      	movs	r3, #0
 80007ea:	b510      	push	{r4, lr}
 80007ec:	4604      	mov	r4, r0
 80007ee:	e9c0 3300 	strd	r3, r3, [r0]
 80007f2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80007f6:	6083      	str	r3, [r0, #8]
 80007f8:	8181      	strh	r1, [r0, #12]
 80007fa:	6643      	str	r3, [r0, #100]	@ 0x64
 80007fc:	81c2      	strh	r2, [r0, #14]
 80007fe:	6183      	str	r3, [r0, #24]
 8000800:	4619      	mov	r1, r3
 8000802:	2208      	movs	r2, #8
 8000804:	305c      	adds	r0, #92	@ 0x5c
 8000806:	f000 f9f9 	bl	8000bfc <memset>
 800080a:	4b0d      	ldr	r3, [pc, #52]	@ (8000840 <std+0x58>)
 800080c:	6263      	str	r3, [r4, #36]	@ 0x24
 800080e:	4b0d      	ldr	r3, [pc, #52]	@ (8000844 <std+0x5c>)
 8000810:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000812:	4b0d      	ldr	r3, [pc, #52]	@ (8000848 <std+0x60>)
 8000814:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8000816:	4b0d      	ldr	r3, [pc, #52]	@ (800084c <std+0x64>)
 8000818:	6323      	str	r3, [r4, #48]	@ 0x30
 800081a:	4b0d      	ldr	r3, [pc, #52]	@ (8000850 <std+0x68>)
 800081c:	6224      	str	r4, [r4, #32]
 800081e:	429c      	cmp	r4, r3
 8000820:	d006      	beq.n	8000830 <std+0x48>
 8000822:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8000826:	4294      	cmp	r4, r2
 8000828:	d002      	beq.n	8000830 <std+0x48>
 800082a:	33d0      	adds	r3, #208	@ 0xd0
 800082c:	429c      	cmp	r4, r3
 800082e:	d105      	bne.n	800083c <std+0x54>
 8000830:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000834:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000838:	f000 ba58 	b.w	8000cec <__retarget_lock_init_recursive>
 800083c:	bd10      	pop	{r4, pc}
 800083e:	bf00      	nop
 8000840:	08000a4d 	.word	0x08000a4d
 8000844:	08000a6f 	.word	0x08000a6f
 8000848:	08000aa7 	.word	0x08000aa7
 800084c:	08000acb 	.word	0x08000acb
 8000850:	200001b0 	.word	0x200001b0

08000854 <stdio_exit_handler>:
 8000854:	4a02      	ldr	r2, [pc, #8]	@ (8000860 <stdio_exit_handler+0xc>)
 8000856:	4903      	ldr	r1, [pc, #12]	@ (8000864 <stdio_exit_handler+0x10>)
 8000858:	4803      	ldr	r0, [pc, #12]	@ (8000868 <stdio_exit_handler+0x14>)
 800085a:	f000 b869 	b.w	8000930 <_fwalk_sglue>
 800085e:	bf00      	nop
 8000860:	2000012c 	.word	0x2000012c
 8000864:	0800158d 	.word	0x0800158d
 8000868:	2000013c 	.word	0x2000013c

0800086c <cleanup_stdio>:
 800086c:	6841      	ldr	r1, [r0, #4]
 800086e:	4b0c      	ldr	r3, [pc, #48]	@ (80008a0 <cleanup_stdio+0x34>)
 8000870:	4299      	cmp	r1, r3
 8000872:	b510      	push	{r4, lr}
 8000874:	4604      	mov	r4, r0
 8000876:	d001      	beq.n	800087c <cleanup_stdio+0x10>
 8000878:	f000 fe88 	bl	800158c <_fflush_r>
 800087c:	68a1      	ldr	r1, [r4, #8]
 800087e:	4b09      	ldr	r3, [pc, #36]	@ (80008a4 <cleanup_stdio+0x38>)
 8000880:	4299      	cmp	r1, r3
 8000882:	d002      	beq.n	800088a <cleanup_stdio+0x1e>
 8000884:	4620      	mov	r0, r4
 8000886:	f000 fe81 	bl	800158c <_fflush_r>
 800088a:	68e1      	ldr	r1, [r4, #12]
 800088c:	4b06      	ldr	r3, [pc, #24]	@ (80008a8 <cleanup_stdio+0x3c>)
 800088e:	4299      	cmp	r1, r3
 8000890:	d004      	beq.n	800089c <cleanup_stdio+0x30>
 8000892:	4620      	mov	r0, r4
 8000894:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000898:	f000 be78 	b.w	800158c <_fflush_r>
 800089c:	bd10      	pop	{r4, pc}
 800089e:	bf00      	nop
 80008a0:	200001b0 	.word	0x200001b0
 80008a4:	20000218 	.word	0x20000218
 80008a8:	20000280 	.word	0x20000280

080008ac <global_stdio_init.part.0>:
 80008ac:	b510      	push	{r4, lr}
 80008ae:	4b0b      	ldr	r3, [pc, #44]	@ (80008dc <global_stdio_init.part.0+0x30>)
 80008b0:	4c0b      	ldr	r4, [pc, #44]	@ (80008e0 <global_stdio_init.part.0+0x34>)
 80008b2:	4a0c      	ldr	r2, [pc, #48]	@ (80008e4 <global_stdio_init.part.0+0x38>)
 80008b4:	601a      	str	r2, [r3, #0]
 80008b6:	4620      	mov	r0, r4
 80008b8:	2200      	movs	r2, #0
 80008ba:	2104      	movs	r1, #4
 80008bc:	f7ff ff94 	bl	80007e8 <std>
 80008c0:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80008c4:	2201      	movs	r2, #1
 80008c6:	2109      	movs	r1, #9
 80008c8:	f7ff ff8e 	bl	80007e8 <std>
 80008cc:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80008d0:	2202      	movs	r2, #2
 80008d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80008d6:	2112      	movs	r1, #18
 80008d8:	f7ff bf86 	b.w	80007e8 <std>
 80008dc:	200002e8 	.word	0x200002e8
 80008e0:	200001b0 	.word	0x200001b0
 80008e4:	08000855 	.word	0x08000855

080008e8 <__sfp_lock_acquire>:
 80008e8:	4801      	ldr	r0, [pc, #4]	@ (80008f0 <__sfp_lock_acquire+0x8>)
 80008ea:	f000 ba00 	b.w	8000cee <__retarget_lock_acquire_recursive>
 80008ee:	bf00      	nop
 80008f0:	200002f1 	.word	0x200002f1

080008f4 <__sfp_lock_release>:
 80008f4:	4801      	ldr	r0, [pc, #4]	@ (80008fc <__sfp_lock_release+0x8>)
 80008f6:	f000 b9fb 	b.w	8000cf0 <__retarget_lock_release_recursive>
 80008fa:	bf00      	nop
 80008fc:	200002f1 	.word	0x200002f1

08000900 <__sinit>:
 8000900:	b510      	push	{r4, lr}
 8000902:	4604      	mov	r4, r0
 8000904:	f7ff fff0 	bl	80008e8 <__sfp_lock_acquire>
 8000908:	6a23      	ldr	r3, [r4, #32]
 800090a:	b11b      	cbz	r3, 8000914 <__sinit+0x14>
 800090c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000910:	f7ff bff0 	b.w	80008f4 <__sfp_lock_release>
 8000914:	4b04      	ldr	r3, [pc, #16]	@ (8000928 <__sinit+0x28>)
 8000916:	6223      	str	r3, [r4, #32]
 8000918:	4b04      	ldr	r3, [pc, #16]	@ (800092c <__sinit+0x2c>)
 800091a:	681b      	ldr	r3, [r3, #0]
 800091c:	2b00      	cmp	r3, #0
 800091e:	d1f5      	bne.n	800090c <__sinit+0xc>
 8000920:	f7ff ffc4 	bl	80008ac <global_stdio_init.part.0>
 8000924:	e7f2      	b.n	800090c <__sinit+0xc>
 8000926:	bf00      	nop
 8000928:	0800086d 	.word	0x0800086d
 800092c:	200002e8 	.word	0x200002e8

08000930 <_fwalk_sglue>:
 8000930:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000934:	4607      	mov	r7, r0
 8000936:	4688      	mov	r8, r1
 8000938:	4614      	mov	r4, r2
 800093a:	2600      	movs	r6, #0
 800093c:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000940:	f1b9 0901 	subs.w	r9, r9, #1
 8000944:	d505      	bpl.n	8000952 <_fwalk_sglue+0x22>
 8000946:	6824      	ldr	r4, [r4, #0]
 8000948:	2c00      	cmp	r4, #0
 800094a:	d1f7      	bne.n	800093c <_fwalk_sglue+0xc>
 800094c:	4630      	mov	r0, r6
 800094e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000952:	89ab      	ldrh	r3, [r5, #12]
 8000954:	2b01      	cmp	r3, #1
 8000956:	d907      	bls.n	8000968 <_fwalk_sglue+0x38>
 8000958:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800095c:	3301      	adds	r3, #1
 800095e:	d003      	beq.n	8000968 <_fwalk_sglue+0x38>
 8000960:	4629      	mov	r1, r5
 8000962:	4638      	mov	r0, r7
 8000964:	47c0      	blx	r8
 8000966:	4306      	orrs	r6, r0
 8000968:	3568      	adds	r5, #104	@ 0x68
 800096a:	e7e9      	b.n	8000940 <_fwalk_sglue+0x10>

0800096c <iprintf>:
 800096c:	b40f      	push	{r0, r1, r2, r3}
 800096e:	b507      	push	{r0, r1, r2, lr}
 8000970:	4906      	ldr	r1, [pc, #24]	@ (800098c <iprintf+0x20>)
 8000972:	ab04      	add	r3, sp, #16
 8000974:	6808      	ldr	r0, [r1, #0]
 8000976:	f853 2b04 	ldr.w	r2, [r3], #4
 800097a:	6881      	ldr	r1, [r0, #8]
 800097c:	9301      	str	r3, [sp, #4]
 800097e:	f000 fadb 	bl	8000f38 <_vfiprintf_r>
 8000982:	b003      	add	sp, #12
 8000984:	f85d eb04 	ldr.w	lr, [sp], #4
 8000988:	b004      	add	sp, #16
 800098a:	4770      	bx	lr
 800098c:	20000138 	.word	0x20000138

08000990 <_puts_r>:
 8000990:	6a03      	ldr	r3, [r0, #32]
 8000992:	b570      	push	{r4, r5, r6, lr}
 8000994:	6884      	ldr	r4, [r0, #8]
 8000996:	4605      	mov	r5, r0
 8000998:	460e      	mov	r6, r1
 800099a:	b90b      	cbnz	r3, 80009a0 <_puts_r+0x10>
 800099c:	f7ff ffb0 	bl	8000900 <__sinit>
 80009a0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80009a2:	07db      	lsls	r3, r3, #31
 80009a4:	d405      	bmi.n	80009b2 <_puts_r+0x22>
 80009a6:	89a3      	ldrh	r3, [r4, #12]
 80009a8:	0598      	lsls	r0, r3, #22
 80009aa:	d402      	bmi.n	80009b2 <_puts_r+0x22>
 80009ac:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80009ae:	f000 f99e 	bl	8000cee <__retarget_lock_acquire_recursive>
 80009b2:	89a3      	ldrh	r3, [r4, #12]
 80009b4:	0719      	lsls	r1, r3, #28
 80009b6:	d502      	bpl.n	80009be <_puts_r+0x2e>
 80009b8:	6923      	ldr	r3, [r4, #16]
 80009ba:	2b00      	cmp	r3, #0
 80009bc:	d135      	bne.n	8000a2a <_puts_r+0x9a>
 80009be:	4621      	mov	r1, r4
 80009c0:	4628      	mov	r0, r5
 80009c2:	f000 f8c5 	bl	8000b50 <__swsetup_r>
 80009c6:	b380      	cbz	r0, 8000a2a <_puts_r+0x9a>
 80009c8:	f04f 35ff 	mov.w	r5, #4294967295
 80009cc:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80009ce:	07da      	lsls	r2, r3, #31
 80009d0:	d405      	bmi.n	80009de <_puts_r+0x4e>
 80009d2:	89a3      	ldrh	r3, [r4, #12]
 80009d4:	059b      	lsls	r3, r3, #22
 80009d6:	d402      	bmi.n	80009de <_puts_r+0x4e>
 80009d8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80009da:	f000 f989 	bl	8000cf0 <__retarget_lock_release_recursive>
 80009de:	4628      	mov	r0, r5
 80009e0:	bd70      	pop	{r4, r5, r6, pc}
 80009e2:	2b00      	cmp	r3, #0
 80009e4:	da04      	bge.n	80009f0 <_puts_r+0x60>
 80009e6:	69a2      	ldr	r2, [r4, #24]
 80009e8:	429a      	cmp	r2, r3
 80009ea:	dc17      	bgt.n	8000a1c <_puts_r+0x8c>
 80009ec:	290a      	cmp	r1, #10
 80009ee:	d015      	beq.n	8000a1c <_puts_r+0x8c>
 80009f0:	6823      	ldr	r3, [r4, #0]
 80009f2:	1c5a      	adds	r2, r3, #1
 80009f4:	6022      	str	r2, [r4, #0]
 80009f6:	7019      	strb	r1, [r3, #0]
 80009f8:	68a3      	ldr	r3, [r4, #8]
 80009fa:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80009fe:	3b01      	subs	r3, #1
 8000a00:	60a3      	str	r3, [r4, #8]
 8000a02:	2900      	cmp	r1, #0
 8000a04:	d1ed      	bne.n	80009e2 <_puts_r+0x52>
 8000a06:	2b00      	cmp	r3, #0
 8000a08:	da11      	bge.n	8000a2e <_puts_r+0x9e>
 8000a0a:	4622      	mov	r2, r4
 8000a0c:	210a      	movs	r1, #10
 8000a0e:	4628      	mov	r0, r5
 8000a10:	f000 f85f 	bl	8000ad2 <__swbuf_r>
 8000a14:	3001      	adds	r0, #1
 8000a16:	d0d7      	beq.n	80009c8 <_puts_r+0x38>
 8000a18:	250a      	movs	r5, #10
 8000a1a:	e7d7      	b.n	80009cc <_puts_r+0x3c>
 8000a1c:	4622      	mov	r2, r4
 8000a1e:	4628      	mov	r0, r5
 8000a20:	f000 f857 	bl	8000ad2 <__swbuf_r>
 8000a24:	3001      	adds	r0, #1
 8000a26:	d1e7      	bne.n	80009f8 <_puts_r+0x68>
 8000a28:	e7ce      	b.n	80009c8 <_puts_r+0x38>
 8000a2a:	3e01      	subs	r6, #1
 8000a2c:	e7e4      	b.n	80009f8 <_puts_r+0x68>
 8000a2e:	6823      	ldr	r3, [r4, #0]
 8000a30:	1c5a      	adds	r2, r3, #1
 8000a32:	6022      	str	r2, [r4, #0]
 8000a34:	220a      	movs	r2, #10
 8000a36:	701a      	strb	r2, [r3, #0]
 8000a38:	e7ee      	b.n	8000a18 <_puts_r+0x88>
	...

08000a3c <puts>:
 8000a3c:	4b02      	ldr	r3, [pc, #8]	@ (8000a48 <puts+0xc>)
 8000a3e:	4601      	mov	r1, r0
 8000a40:	6818      	ldr	r0, [r3, #0]
 8000a42:	f7ff bfa5 	b.w	8000990 <_puts_r>
 8000a46:	bf00      	nop
 8000a48:	20000138 	.word	0x20000138

08000a4c <__sread>:
 8000a4c:	b510      	push	{r4, lr}
 8000a4e:	460c      	mov	r4, r1
 8000a50:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a54:	f000 f8fc 	bl	8000c50 <_read_r>
 8000a58:	2800      	cmp	r0, #0
 8000a5a:	bfab      	itete	ge
 8000a5c:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8000a5e:	89a3      	ldrhlt	r3, [r4, #12]
 8000a60:	181b      	addge	r3, r3, r0
 8000a62:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 8000a66:	bfac      	ite	ge
 8000a68:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000a6a:	81a3      	strhlt	r3, [r4, #12]
 8000a6c:	bd10      	pop	{r4, pc}

08000a6e <__swrite>:
 8000a6e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a72:	461f      	mov	r7, r3
 8000a74:	898b      	ldrh	r3, [r1, #12]
 8000a76:	05db      	lsls	r3, r3, #23
 8000a78:	4605      	mov	r5, r0
 8000a7a:	460c      	mov	r4, r1
 8000a7c:	4616      	mov	r6, r2
 8000a7e:	d505      	bpl.n	8000a8c <__swrite+0x1e>
 8000a80:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a84:	2302      	movs	r3, #2
 8000a86:	2200      	movs	r2, #0
 8000a88:	f000 f8d0 	bl	8000c2c <_lseek_r>
 8000a8c:	89a3      	ldrh	r3, [r4, #12]
 8000a8e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000a92:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8000a96:	81a3      	strh	r3, [r4, #12]
 8000a98:	4632      	mov	r2, r6
 8000a9a:	463b      	mov	r3, r7
 8000a9c:	4628      	mov	r0, r5
 8000a9e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000aa2:	f000 b8e7 	b.w	8000c74 <_write_r>

08000aa6 <__sseek>:
 8000aa6:	b510      	push	{r4, lr}
 8000aa8:	460c      	mov	r4, r1
 8000aaa:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000aae:	f000 f8bd 	bl	8000c2c <_lseek_r>
 8000ab2:	1c43      	adds	r3, r0, #1
 8000ab4:	89a3      	ldrh	r3, [r4, #12]
 8000ab6:	bf15      	itete	ne
 8000ab8:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000aba:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000abe:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 8000ac2:	81a3      	strheq	r3, [r4, #12]
 8000ac4:	bf18      	it	ne
 8000ac6:	81a3      	strhne	r3, [r4, #12]
 8000ac8:	bd10      	pop	{r4, pc}

08000aca <__sclose>:
 8000aca:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000ace:	f000 b89d 	b.w	8000c0c <_close_r>

08000ad2 <__swbuf_r>:
 8000ad2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ad4:	460e      	mov	r6, r1
 8000ad6:	4614      	mov	r4, r2
 8000ad8:	4605      	mov	r5, r0
 8000ada:	b118      	cbz	r0, 8000ae4 <__swbuf_r+0x12>
 8000adc:	6a03      	ldr	r3, [r0, #32]
 8000ade:	b90b      	cbnz	r3, 8000ae4 <__swbuf_r+0x12>
 8000ae0:	f7ff ff0e 	bl	8000900 <__sinit>
 8000ae4:	69a3      	ldr	r3, [r4, #24]
 8000ae6:	60a3      	str	r3, [r4, #8]
 8000ae8:	89a3      	ldrh	r3, [r4, #12]
 8000aea:	071a      	lsls	r2, r3, #28
 8000aec:	d501      	bpl.n	8000af2 <__swbuf_r+0x20>
 8000aee:	6923      	ldr	r3, [r4, #16]
 8000af0:	b943      	cbnz	r3, 8000b04 <__swbuf_r+0x32>
 8000af2:	4621      	mov	r1, r4
 8000af4:	4628      	mov	r0, r5
 8000af6:	f000 f82b 	bl	8000b50 <__swsetup_r>
 8000afa:	b118      	cbz	r0, 8000b04 <__swbuf_r+0x32>
 8000afc:	f04f 37ff 	mov.w	r7, #4294967295
 8000b00:	4638      	mov	r0, r7
 8000b02:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b04:	6823      	ldr	r3, [r4, #0]
 8000b06:	6922      	ldr	r2, [r4, #16]
 8000b08:	1a98      	subs	r0, r3, r2
 8000b0a:	6963      	ldr	r3, [r4, #20]
 8000b0c:	b2f6      	uxtb	r6, r6
 8000b0e:	4283      	cmp	r3, r0
 8000b10:	4637      	mov	r7, r6
 8000b12:	dc05      	bgt.n	8000b20 <__swbuf_r+0x4e>
 8000b14:	4621      	mov	r1, r4
 8000b16:	4628      	mov	r0, r5
 8000b18:	f000 fd38 	bl	800158c <_fflush_r>
 8000b1c:	2800      	cmp	r0, #0
 8000b1e:	d1ed      	bne.n	8000afc <__swbuf_r+0x2a>
 8000b20:	68a3      	ldr	r3, [r4, #8]
 8000b22:	3b01      	subs	r3, #1
 8000b24:	60a3      	str	r3, [r4, #8]
 8000b26:	6823      	ldr	r3, [r4, #0]
 8000b28:	1c5a      	adds	r2, r3, #1
 8000b2a:	6022      	str	r2, [r4, #0]
 8000b2c:	701e      	strb	r6, [r3, #0]
 8000b2e:	6962      	ldr	r2, [r4, #20]
 8000b30:	1c43      	adds	r3, r0, #1
 8000b32:	429a      	cmp	r2, r3
 8000b34:	d004      	beq.n	8000b40 <__swbuf_r+0x6e>
 8000b36:	89a3      	ldrh	r3, [r4, #12]
 8000b38:	07db      	lsls	r3, r3, #31
 8000b3a:	d5e1      	bpl.n	8000b00 <__swbuf_r+0x2e>
 8000b3c:	2e0a      	cmp	r6, #10
 8000b3e:	d1df      	bne.n	8000b00 <__swbuf_r+0x2e>
 8000b40:	4621      	mov	r1, r4
 8000b42:	4628      	mov	r0, r5
 8000b44:	f000 fd22 	bl	800158c <_fflush_r>
 8000b48:	2800      	cmp	r0, #0
 8000b4a:	d0d9      	beq.n	8000b00 <__swbuf_r+0x2e>
 8000b4c:	e7d6      	b.n	8000afc <__swbuf_r+0x2a>
	...

08000b50 <__swsetup_r>:
 8000b50:	b538      	push	{r3, r4, r5, lr}
 8000b52:	4b29      	ldr	r3, [pc, #164]	@ (8000bf8 <__swsetup_r+0xa8>)
 8000b54:	4605      	mov	r5, r0
 8000b56:	6818      	ldr	r0, [r3, #0]
 8000b58:	460c      	mov	r4, r1
 8000b5a:	b118      	cbz	r0, 8000b64 <__swsetup_r+0x14>
 8000b5c:	6a03      	ldr	r3, [r0, #32]
 8000b5e:	b90b      	cbnz	r3, 8000b64 <__swsetup_r+0x14>
 8000b60:	f7ff fece 	bl	8000900 <__sinit>
 8000b64:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b68:	0719      	lsls	r1, r3, #28
 8000b6a:	d422      	bmi.n	8000bb2 <__swsetup_r+0x62>
 8000b6c:	06da      	lsls	r2, r3, #27
 8000b6e:	d407      	bmi.n	8000b80 <__swsetup_r+0x30>
 8000b70:	2209      	movs	r2, #9
 8000b72:	602a      	str	r2, [r5, #0]
 8000b74:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000b78:	81a3      	strh	r3, [r4, #12]
 8000b7a:	f04f 30ff 	mov.w	r0, #4294967295
 8000b7e:	e033      	b.n	8000be8 <__swsetup_r+0x98>
 8000b80:	0758      	lsls	r0, r3, #29
 8000b82:	d512      	bpl.n	8000baa <__swsetup_r+0x5a>
 8000b84:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8000b86:	b141      	cbz	r1, 8000b9a <__swsetup_r+0x4a>
 8000b88:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8000b8c:	4299      	cmp	r1, r3
 8000b8e:	d002      	beq.n	8000b96 <__swsetup_r+0x46>
 8000b90:	4628      	mov	r0, r5
 8000b92:	f000 f8af 	bl	8000cf4 <_free_r>
 8000b96:	2300      	movs	r3, #0
 8000b98:	6363      	str	r3, [r4, #52]	@ 0x34
 8000b9a:	89a3      	ldrh	r3, [r4, #12]
 8000b9c:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8000ba0:	81a3      	strh	r3, [r4, #12]
 8000ba2:	2300      	movs	r3, #0
 8000ba4:	6063      	str	r3, [r4, #4]
 8000ba6:	6923      	ldr	r3, [r4, #16]
 8000ba8:	6023      	str	r3, [r4, #0]
 8000baa:	89a3      	ldrh	r3, [r4, #12]
 8000bac:	f043 0308 	orr.w	r3, r3, #8
 8000bb0:	81a3      	strh	r3, [r4, #12]
 8000bb2:	6923      	ldr	r3, [r4, #16]
 8000bb4:	b94b      	cbnz	r3, 8000bca <__swsetup_r+0x7a>
 8000bb6:	89a3      	ldrh	r3, [r4, #12]
 8000bb8:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8000bbc:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8000bc0:	d003      	beq.n	8000bca <__swsetup_r+0x7a>
 8000bc2:	4621      	mov	r1, r4
 8000bc4:	4628      	mov	r0, r5
 8000bc6:	f000 fd2f 	bl	8001628 <__smakebuf_r>
 8000bca:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bce:	f013 0201 	ands.w	r2, r3, #1
 8000bd2:	d00a      	beq.n	8000bea <__swsetup_r+0x9a>
 8000bd4:	2200      	movs	r2, #0
 8000bd6:	60a2      	str	r2, [r4, #8]
 8000bd8:	6962      	ldr	r2, [r4, #20]
 8000bda:	4252      	negs	r2, r2
 8000bdc:	61a2      	str	r2, [r4, #24]
 8000bde:	6922      	ldr	r2, [r4, #16]
 8000be0:	b942      	cbnz	r2, 8000bf4 <__swsetup_r+0xa4>
 8000be2:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8000be6:	d1c5      	bne.n	8000b74 <__swsetup_r+0x24>
 8000be8:	bd38      	pop	{r3, r4, r5, pc}
 8000bea:	0799      	lsls	r1, r3, #30
 8000bec:	bf58      	it	pl
 8000bee:	6962      	ldrpl	r2, [r4, #20]
 8000bf0:	60a2      	str	r2, [r4, #8]
 8000bf2:	e7f4      	b.n	8000bde <__swsetup_r+0x8e>
 8000bf4:	2000      	movs	r0, #0
 8000bf6:	e7f7      	b.n	8000be8 <__swsetup_r+0x98>
 8000bf8:	20000138 	.word	0x20000138

08000bfc <memset>:
 8000bfc:	4402      	add	r2, r0
 8000bfe:	4603      	mov	r3, r0
 8000c00:	4293      	cmp	r3, r2
 8000c02:	d100      	bne.n	8000c06 <memset+0xa>
 8000c04:	4770      	bx	lr
 8000c06:	f803 1b01 	strb.w	r1, [r3], #1
 8000c0a:	e7f9      	b.n	8000c00 <memset+0x4>

08000c0c <_close_r>:
 8000c0c:	b538      	push	{r3, r4, r5, lr}
 8000c0e:	4d06      	ldr	r5, [pc, #24]	@ (8000c28 <_close_r+0x1c>)
 8000c10:	2300      	movs	r3, #0
 8000c12:	4604      	mov	r4, r0
 8000c14:	4608      	mov	r0, r1
 8000c16:	602b      	str	r3, [r5, #0]
 8000c18:	f7ff fd51 	bl	80006be <_close>
 8000c1c:	1c43      	adds	r3, r0, #1
 8000c1e:	d102      	bne.n	8000c26 <_close_r+0x1a>
 8000c20:	682b      	ldr	r3, [r5, #0]
 8000c22:	b103      	cbz	r3, 8000c26 <_close_r+0x1a>
 8000c24:	6023      	str	r3, [r4, #0]
 8000c26:	bd38      	pop	{r3, r4, r5, pc}
 8000c28:	200002ec 	.word	0x200002ec

08000c2c <_lseek_r>:
 8000c2c:	b538      	push	{r3, r4, r5, lr}
 8000c2e:	4d07      	ldr	r5, [pc, #28]	@ (8000c4c <_lseek_r+0x20>)
 8000c30:	4604      	mov	r4, r0
 8000c32:	4608      	mov	r0, r1
 8000c34:	4611      	mov	r1, r2
 8000c36:	2200      	movs	r2, #0
 8000c38:	602a      	str	r2, [r5, #0]
 8000c3a:	461a      	mov	r2, r3
 8000c3c:	f7ff fd66 	bl	800070c <_lseek>
 8000c40:	1c43      	adds	r3, r0, #1
 8000c42:	d102      	bne.n	8000c4a <_lseek_r+0x1e>
 8000c44:	682b      	ldr	r3, [r5, #0]
 8000c46:	b103      	cbz	r3, 8000c4a <_lseek_r+0x1e>
 8000c48:	6023      	str	r3, [r4, #0]
 8000c4a:	bd38      	pop	{r3, r4, r5, pc}
 8000c4c:	200002ec 	.word	0x200002ec

08000c50 <_read_r>:
 8000c50:	b538      	push	{r3, r4, r5, lr}
 8000c52:	4d07      	ldr	r5, [pc, #28]	@ (8000c70 <_read_r+0x20>)
 8000c54:	4604      	mov	r4, r0
 8000c56:	4608      	mov	r0, r1
 8000c58:	4611      	mov	r1, r2
 8000c5a:	2200      	movs	r2, #0
 8000c5c:	602a      	str	r2, [r5, #0]
 8000c5e:	461a      	mov	r2, r3
 8000c60:	f7ff fcf4 	bl	800064c <_read>
 8000c64:	1c43      	adds	r3, r0, #1
 8000c66:	d102      	bne.n	8000c6e <_read_r+0x1e>
 8000c68:	682b      	ldr	r3, [r5, #0]
 8000c6a:	b103      	cbz	r3, 8000c6e <_read_r+0x1e>
 8000c6c:	6023      	str	r3, [r4, #0]
 8000c6e:	bd38      	pop	{r3, r4, r5, pc}
 8000c70:	200002ec 	.word	0x200002ec

08000c74 <_write_r>:
 8000c74:	b538      	push	{r3, r4, r5, lr}
 8000c76:	4d07      	ldr	r5, [pc, #28]	@ (8000c94 <_write_r+0x20>)
 8000c78:	4604      	mov	r4, r0
 8000c7a:	4608      	mov	r0, r1
 8000c7c:	4611      	mov	r1, r2
 8000c7e:	2200      	movs	r2, #0
 8000c80:	602a      	str	r2, [r5, #0]
 8000c82:	461a      	mov	r2, r3
 8000c84:	f7ff fcff 	bl	8000686 <_write>
 8000c88:	1c43      	adds	r3, r0, #1
 8000c8a:	d102      	bne.n	8000c92 <_write_r+0x1e>
 8000c8c:	682b      	ldr	r3, [r5, #0]
 8000c8e:	b103      	cbz	r3, 8000c92 <_write_r+0x1e>
 8000c90:	6023      	str	r3, [r4, #0]
 8000c92:	bd38      	pop	{r3, r4, r5, pc}
 8000c94:	200002ec 	.word	0x200002ec

08000c98 <__errno>:
 8000c98:	4b01      	ldr	r3, [pc, #4]	@ (8000ca0 <__errno+0x8>)
 8000c9a:	6818      	ldr	r0, [r3, #0]
 8000c9c:	4770      	bx	lr
 8000c9e:	bf00      	nop
 8000ca0:	20000138 	.word	0x20000138

08000ca4 <__libc_init_array>:
 8000ca4:	b570      	push	{r4, r5, r6, lr}
 8000ca6:	4d0d      	ldr	r5, [pc, #52]	@ (8000cdc <__libc_init_array+0x38>)
 8000ca8:	4c0d      	ldr	r4, [pc, #52]	@ (8000ce0 <__libc_init_array+0x3c>)
 8000caa:	1b64      	subs	r4, r4, r5
 8000cac:	10a4      	asrs	r4, r4, #2
 8000cae:	2600      	movs	r6, #0
 8000cb0:	42a6      	cmp	r6, r4
 8000cb2:	d109      	bne.n	8000cc8 <__libc_init_array+0x24>
 8000cb4:	4d0b      	ldr	r5, [pc, #44]	@ (8000ce4 <__libc_init_array+0x40>)
 8000cb6:	4c0c      	ldr	r4, [pc, #48]	@ (8000ce8 <__libc_init_array+0x44>)
 8000cb8:	f000 fd24 	bl	8001704 <_init>
 8000cbc:	1b64      	subs	r4, r4, r5
 8000cbe:	10a4      	asrs	r4, r4, #2
 8000cc0:	2600      	movs	r6, #0
 8000cc2:	42a6      	cmp	r6, r4
 8000cc4:	d105      	bne.n	8000cd2 <__libc_init_array+0x2e>
 8000cc6:	bd70      	pop	{r4, r5, r6, pc}
 8000cc8:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ccc:	4798      	blx	r3
 8000cce:	3601      	adds	r6, #1
 8000cd0:	e7ee      	b.n	8000cb0 <__libc_init_array+0xc>
 8000cd2:	f855 3b04 	ldr.w	r3, [r5], #4
 8000cd6:	4798      	blx	r3
 8000cd8:	3601      	adds	r6, #1
 8000cda:	e7f2      	b.n	8000cc2 <__libc_init_array+0x1e>
 8000cdc:	08001764 	.word	0x08001764
 8000ce0:	08001764 	.word	0x08001764
 8000ce4:	08001764 	.word	0x08001764
 8000ce8:	08001768 	.word	0x08001768

08000cec <__retarget_lock_init_recursive>:
 8000cec:	4770      	bx	lr

08000cee <__retarget_lock_acquire_recursive>:
 8000cee:	4770      	bx	lr

08000cf0 <__retarget_lock_release_recursive>:
 8000cf0:	4770      	bx	lr
	...

08000cf4 <_free_r>:
 8000cf4:	b538      	push	{r3, r4, r5, lr}
 8000cf6:	4605      	mov	r5, r0
 8000cf8:	2900      	cmp	r1, #0
 8000cfa:	d041      	beq.n	8000d80 <_free_r+0x8c>
 8000cfc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000d00:	1f0c      	subs	r4, r1, #4
 8000d02:	2b00      	cmp	r3, #0
 8000d04:	bfb8      	it	lt
 8000d06:	18e4      	addlt	r4, r4, r3
 8000d08:	f000 f8e0 	bl	8000ecc <__malloc_lock>
 8000d0c:	4a1d      	ldr	r2, [pc, #116]	@ (8000d84 <_free_r+0x90>)
 8000d0e:	6813      	ldr	r3, [r2, #0]
 8000d10:	b933      	cbnz	r3, 8000d20 <_free_r+0x2c>
 8000d12:	6063      	str	r3, [r4, #4]
 8000d14:	6014      	str	r4, [r2, #0]
 8000d16:	4628      	mov	r0, r5
 8000d18:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000d1c:	f000 b8dc 	b.w	8000ed8 <__malloc_unlock>
 8000d20:	42a3      	cmp	r3, r4
 8000d22:	d908      	bls.n	8000d36 <_free_r+0x42>
 8000d24:	6820      	ldr	r0, [r4, #0]
 8000d26:	1821      	adds	r1, r4, r0
 8000d28:	428b      	cmp	r3, r1
 8000d2a:	bf01      	itttt	eq
 8000d2c:	6819      	ldreq	r1, [r3, #0]
 8000d2e:	685b      	ldreq	r3, [r3, #4]
 8000d30:	1809      	addeq	r1, r1, r0
 8000d32:	6021      	streq	r1, [r4, #0]
 8000d34:	e7ed      	b.n	8000d12 <_free_r+0x1e>
 8000d36:	461a      	mov	r2, r3
 8000d38:	685b      	ldr	r3, [r3, #4]
 8000d3a:	b10b      	cbz	r3, 8000d40 <_free_r+0x4c>
 8000d3c:	42a3      	cmp	r3, r4
 8000d3e:	d9fa      	bls.n	8000d36 <_free_r+0x42>
 8000d40:	6811      	ldr	r1, [r2, #0]
 8000d42:	1850      	adds	r0, r2, r1
 8000d44:	42a0      	cmp	r0, r4
 8000d46:	d10b      	bne.n	8000d60 <_free_r+0x6c>
 8000d48:	6820      	ldr	r0, [r4, #0]
 8000d4a:	4401      	add	r1, r0
 8000d4c:	1850      	adds	r0, r2, r1
 8000d4e:	4283      	cmp	r3, r0
 8000d50:	6011      	str	r1, [r2, #0]
 8000d52:	d1e0      	bne.n	8000d16 <_free_r+0x22>
 8000d54:	6818      	ldr	r0, [r3, #0]
 8000d56:	685b      	ldr	r3, [r3, #4]
 8000d58:	6053      	str	r3, [r2, #4]
 8000d5a:	4408      	add	r0, r1
 8000d5c:	6010      	str	r0, [r2, #0]
 8000d5e:	e7da      	b.n	8000d16 <_free_r+0x22>
 8000d60:	d902      	bls.n	8000d68 <_free_r+0x74>
 8000d62:	230c      	movs	r3, #12
 8000d64:	602b      	str	r3, [r5, #0]
 8000d66:	e7d6      	b.n	8000d16 <_free_r+0x22>
 8000d68:	6820      	ldr	r0, [r4, #0]
 8000d6a:	1821      	adds	r1, r4, r0
 8000d6c:	428b      	cmp	r3, r1
 8000d6e:	bf04      	itt	eq
 8000d70:	6819      	ldreq	r1, [r3, #0]
 8000d72:	685b      	ldreq	r3, [r3, #4]
 8000d74:	6063      	str	r3, [r4, #4]
 8000d76:	bf04      	itt	eq
 8000d78:	1809      	addeq	r1, r1, r0
 8000d7a:	6021      	streq	r1, [r4, #0]
 8000d7c:	6054      	str	r4, [r2, #4]
 8000d7e:	e7ca      	b.n	8000d16 <_free_r+0x22>
 8000d80:	bd38      	pop	{r3, r4, r5, pc}
 8000d82:	bf00      	nop
 8000d84:	200002f8 	.word	0x200002f8

08000d88 <sbrk_aligned>:
 8000d88:	b570      	push	{r4, r5, r6, lr}
 8000d8a:	4e0f      	ldr	r6, [pc, #60]	@ (8000dc8 <sbrk_aligned+0x40>)
 8000d8c:	460c      	mov	r4, r1
 8000d8e:	6831      	ldr	r1, [r6, #0]
 8000d90:	4605      	mov	r5, r0
 8000d92:	b911      	cbnz	r1, 8000d9a <sbrk_aligned+0x12>
 8000d94:	f000 fca6 	bl	80016e4 <_sbrk_r>
 8000d98:	6030      	str	r0, [r6, #0]
 8000d9a:	4621      	mov	r1, r4
 8000d9c:	4628      	mov	r0, r5
 8000d9e:	f000 fca1 	bl	80016e4 <_sbrk_r>
 8000da2:	1c43      	adds	r3, r0, #1
 8000da4:	d103      	bne.n	8000dae <sbrk_aligned+0x26>
 8000da6:	f04f 34ff 	mov.w	r4, #4294967295
 8000daa:	4620      	mov	r0, r4
 8000dac:	bd70      	pop	{r4, r5, r6, pc}
 8000dae:	1cc4      	adds	r4, r0, #3
 8000db0:	f024 0403 	bic.w	r4, r4, #3
 8000db4:	42a0      	cmp	r0, r4
 8000db6:	d0f8      	beq.n	8000daa <sbrk_aligned+0x22>
 8000db8:	1a21      	subs	r1, r4, r0
 8000dba:	4628      	mov	r0, r5
 8000dbc:	f000 fc92 	bl	80016e4 <_sbrk_r>
 8000dc0:	3001      	adds	r0, #1
 8000dc2:	d1f2      	bne.n	8000daa <sbrk_aligned+0x22>
 8000dc4:	e7ef      	b.n	8000da6 <sbrk_aligned+0x1e>
 8000dc6:	bf00      	nop
 8000dc8:	200002f4 	.word	0x200002f4

08000dcc <_malloc_r>:
 8000dcc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000dd0:	1ccd      	adds	r5, r1, #3
 8000dd2:	f025 0503 	bic.w	r5, r5, #3
 8000dd6:	3508      	adds	r5, #8
 8000dd8:	2d0c      	cmp	r5, #12
 8000dda:	bf38      	it	cc
 8000ddc:	250c      	movcc	r5, #12
 8000dde:	2d00      	cmp	r5, #0
 8000de0:	4606      	mov	r6, r0
 8000de2:	db01      	blt.n	8000de8 <_malloc_r+0x1c>
 8000de4:	42a9      	cmp	r1, r5
 8000de6:	d904      	bls.n	8000df2 <_malloc_r+0x26>
 8000de8:	230c      	movs	r3, #12
 8000dea:	6033      	str	r3, [r6, #0]
 8000dec:	2000      	movs	r0, #0
 8000dee:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000df2:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000ec8 <_malloc_r+0xfc>
 8000df6:	f000 f869 	bl	8000ecc <__malloc_lock>
 8000dfa:	f8d8 3000 	ldr.w	r3, [r8]
 8000dfe:	461c      	mov	r4, r3
 8000e00:	bb44      	cbnz	r4, 8000e54 <_malloc_r+0x88>
 8000e02:	4629      	mov	r1, r5
 8000e04:	4630      	mov	r0, r6
 8000e06:	f7ff ffbf 	bl	8000d88 <sbrk_aligned>
 8000e0a:	1c43      	adds	r3, r0, #1
 8000e0c:	4604      	mov	r4, r0
 8000e0e:	d158      	bne.n	8000ec2 <_malloc_r+0xf6>
 8000e10:	f8d8 4000 	ldr.w	r4, [r8]
 8000e14:	4627      	mov	r7, r4
 8000e16:	2f00      	cmp	r7, #0
 8000e18:	d143      	bne.n	8000ea2 <_malloc_r+0xd6>
 8000e1a:	2c00      	cmp	r4, #0
 8000e1c:	d04b      	beq.n	8000eb6 <_malloc_r+0xea>
 8000e1e:	6823      	ldr	r3, [r4, #0]
 8000e20:	4639      	mov	r1, r7
 8000e22:	4630      	mov	r0, r6
 8000e24:	eb04 0903 	add.w	r9, r4, r3
 8000e28:	f000 fc5c 	bl	80016e4 <_sbrk_r>
 8000e2c:	4581      	cmp	r9, r0
 8000e2e:	d142      	bne.n	8000eb6 <_malloc_r+0xea>
 8000e30:	6821      	ldr	r1, [r4, #0]
 8000e32:	1a6d      	subs	r5, r5, r1
 8000e34:	4629      	mov	r1, r5
 8000e36:	4630      	mov	r0, r6
 8000e38:	f7ff ffa6 	bl	8000d88 <sbrk_aligned>
 8000e3c:	3001      	adds	r0, #1
 8000e3e:	d03a      	beq.n	8000eb6 <_malloc_r+0xea>
 8000e40:	6823      	ldr	r3, [r4, #0]
 8000e42:	442b      	add	r3, r5
 8000e44:	6023      	str	r3, [r4, #0]
 8000e46:	f8d8 3000 	ldr.w	r3, [r8]
 8000e4a:	685a      	ldr	r2, [r3, #4]
 8000e4c:	bb62      	cbnz	r2, 8000ea8 <_malloc_r+0xdc>
 8000e4e:	f8c8 7000 	str.w	r7, [r8]
 8000e52:	e00f      	b.n	8000e74 <_malloc_r+0xa8>
 8000e54:	6822      	ldr	r2, [r4, #0]
 8000e56:	1b52      	subs	r2, r2, r5
 8000e58:	d420      	bmi.n	8000e9c <_malloc_r+0xd0>
 8000e5a:	2a0b      	cmp	r2, #11
 8000e5c:	d917      	bls.n	8000e8e <_malloc_r+0xc2>
 8000e5e:	1961      	adds	r1, r4, r5
 8000e60:	42a3      	cmp	r3, r4
 8000e62:	6025      	str	r5, [r4, #0]
 8000e64:	bf18      	it	ne
 8000e66:	6059      	strne	r1, [r3, #4]
 8000e68:	6863      	ldr	r3, [r4, #4]
 8000e6a:	bf08      	it	eq
 8000e6c:	f8c8 1000 	streq.w	r1, [r8]
 8000e70:	5162      	str	r2, [r4, r5]
 8000e72:	604b      	str	r3, [r1, #4]
 8000e74:	4630      	mov	r0, r6
 8000e76:	f000 f82f 	bl	8000ed8 <__malloc_unlock>
 8000e7a:	f104 000b 	add.w	r0, r4, #11
 8000e7e:	1d23      	adds	r3, r4, #4
 8000e80:	f020 0007 	bic.w	r0, r0, #7
 8000e84:	1ac2      	subs	r2, r0, r3
 8000e86:	bf1c      	itt	ne
 8000e88:	1a1b      	subne	r3, r3, r0
 8000e8a:	50a3      	strne	r3, [r4, r2]
 8000e8c:	e7af      	b.n	8000dee <_malloc_r+0x22>
 8000e8e:	6862      	ldr	r2, [r4, #4]
 8000e90:	42a3      	cmp	r3, r4
 8000e92:	bf0c      	ite	eq
 8000e94:	f8c8 2000 	streq.w	r2, [r8]
 8000e98:	605a      	strne	r2, [r3, #4]
 8000e9a:	e7eb      	b.n	8000e74 <_malloc_r+0xa8>
 8000e9c:	4623      	mov	r3, r4
 8000e9e:	6864      	ldr	r4, [r4, #4]
 8000ea0:	e7ae      	b.n	8000e00 <_malloc_r+0x34>
 8000ea2:	463c      	mov	r4, r7
 8000ea4:	687f      	ldr	r7, [r7, #4]
 8000ea6:	e7b6      	b.n	8000e16 <_malloc_r+0x4a>
 8000ea8:	461a      	mov	r2, r3
 8000eaa:	685b      	ldr	r3, [r3, #4]
 8000eac:	42a3      	cmp	r3, r4
 8000eae:	d1fb      	bne.n	8000ea8 <_malloc_r+0xdc>
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	6053      	str	r3, [r2, #4]
 8000eb4:	e7de      	b.n	8000e74 <_malloc_r+0xa8>
 8000eb6:	230c      	movs	r3, #12
 8000eb8:	6033      	str	r3, [r6, #0]
 8000eba:	4630      	mov	r0, r6
 8000ebc:	f000 f80c 	bl	8000ed8 <__malloc_unlock>
 8000ec0:	e794      	b.n	8000dec <_malloc_r+0x20>
 8000ec2:	6005      	str	r5, [r0, #0]
 8000ec4:	e7d6      	b.n	8000e74 <_malloc_r+0xa8>
 8000ec6:	bf00      	nop
 8000ec8:	200002f8 	.word	0x200002f8

08000ecc <__malloc_lock>:
 8000ecc:	4801      	ldr	r0, [pc, #4]	@ (8000ed4 <__malloc_lock+0x8>)
 8000ece:	f7ff bf0e 	b.w	8000cee <__retarget_lock_acquire_recursive>
 8000ed2:	bf00      	nop
 8000ed4:	200002f0 	.word	0x200002f0

08000ed8 <__malloc_unlock>:
 8000ed8:	4801      	ldr	r0, [pc, #4]	@ (8000ee0 <__malloc_unlock+0x8>)
 8000eda:	f7ff bf09 	b.w	8000cf0 <__retarget_lock_release_recursive>
 8000ede:	bf00      	nop
 8000ee0:	200002f0 	.word	0x200002f0

08000ee4 <__sfputc_r>:
 8000ee4:	6893      	ldr	r3, [r2, #8]
 8000ee6:	3b01      	subs	r3, #1
 8000ee8:	2b00      	cmp	r3, #0
 8000eea:	b410      	push	{r4}
 8000eec:	6093      	str	r3, [r2, #8]
 8000eee:	da08      	bge.n	8000f02 <__sfputc_r+0x1e>
 8000ef0:	6994      	ldr	r4, [r2, #24]
 8000ef2:	42a3      	cmp	r3, r4
 8000ef4:	db01      	blt.n	8000efa <__sfputc_r+0x16>
 8000ef6:	290a      	cmp	r1, #10
 8000ef8:	d103      	bne.n	8000f02 <__sfputc_r+0x1e>
 8000efa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000efe:	f7ff bde8 	b.w	8000ad2 <__swbuf_r>
 8000f02:	6813      	ldr	r3, [r2, #0]
 8000f04:	1c58      	adds	r0, r3, #1
 8000f06:	6010      	str	r0, [r2, #0]
 8000f08:	7019      	strb	r1, [r3, #0]
 8000f0a:	4608      	mov	r0, r1
 8000f0c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000f10:	4770      	bx	lr

08000f12 <__sfputs_r>:
 8000f12:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000f14:	4606      	mov	r6, r0
 8000f16:	460f      	mov	r7, r1
 8000f18:	4614      	mov	r4, r2
 8000f1a:	18d5      	adds	r5, r2, r3
 8000f1c:	42ac      	cmp	r4, r5
 8000f1e:	d101      	bne.n	8000f24 <__sfputs_r+0x12>
 8000f20:	2000      	movs	r0, #0
 8000f22:	e007      	b.n	8000f34 <__sfputs_r+0x22>
 8000f24:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000f28:	463a      	mov	r2, r7
 8000f2a:	4630      	mov	r0, r6
 8000f2c:	f7ff ffda 	bl	8000ee4 <__sfputc_r>
 8000f30:	1c43      	adds	r3, r0, #1
 8000f32:	d1f3      	bne.n	8000f1c <__sfputs_r+0xa>
 8000f34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000f38 <_vfiprintf_r>:
 8000f38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000f3c:	460d      	mov	r5, r1
 8000f3e:	b09d      	sub	sp, #116	@ 0x74
 8000f40:	4614      	mov	r4, r2
 8000f42:	4698      	mov	r8, r3
 8000f44:	4606      	mov	r6, r0
 8000f46:	b118      	cbz	r0, 8000f50 <_vfiprintf_r+0x18>
 8000f48:	6a03      	ldr	r3, [r0, #32]
 8000f4a:	b90b      	cbnz	r3, 8000f50 <_vfiprintf_r+0x18>
 8000f4c:	f7ff fcd8 	bl	8000900 <__sinit>
 8000f50:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000f52:	07d9      	lsls	r1, r3, #31
 8000f54:	d405      	bmi.n	8000f62 <_vfiprintf_r+0x2a>
 8000f56:	89ab      	ldrh	r3, [r5, #12]
 8000f58:	059a      	lsls	r2, r3, #22
 8000f5a:	d402      	bmi.n	8000f62 <_vfiprintf_r+0x2a>
 8000f5c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000f5e:	f7ff fec6 	bl	8000cee <__retarget_lock_acquire_recursive>
 8000f62:	89ab      	ldrh	r3, [r5, #12]
 8000f64:	071b      	lsls	r3, r3, #28
 8000f66:	d501      	bpl.n	8000f6c <_vfiprintf_r+0x34>
 8000f68:	692b      	ldr	r3, [r5, #16]
 8000f6a:	b99b      	cbnz	r3, 8000f94 <_vfiprintf_r+0x5c>
 8000f6c:	4629      	mov	r1, r5
 8000f6e:	4630      	mov	r0, r6
 8000f70:	f7ff fdee 	bl	8000b50 <__swsetup_r>
 8000f74:	b170      	cbz	r0, 8000f94 <_vfiprintf_r+0x5c>
 8000f76:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000f78:	07dc      	lsls	r4, r3, #31
 8000f7a:	d504      	bpl.n	8000f86 <_vfiprintf_r+0x4e>
 8000f7c:	f04f 30ff 	mov.w	r0, #4294967295
 8000f80:	b01d      	add	sp, #116	@ 0x74
 8000f82:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000f86:	89ab      	ldrh	r3, [r5, #12]
 8000f88:	0598      	lsls	r0, r3, #22
 8000f8a:	d4f7      	bmi.n	8000f7c <_vfiprintf_r+0x44>
 8000f8c:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000f8e:	f7ff feaf 	bl	8000cf0 <__retarget_lock_release_recursive>
 8000f92:	e7f3      	b.n	8000f7c <_vfiprintf_r+0x44>
 8000f94:	2300      	movs	r3, #0
 8000f96:	9309      	str	r3, [sp, #36]	@ 0x24
 8000f98:	2320      	movs	r3, #32
 8000f9a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000f9e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000fa2:	2330      	movs	r3, #48	@ 0x30
 8000fa4:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8001154 <_vfiprintf_r+0x21c>
 8000fa8:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000fac:	f04f 0901 	mov.w	r9, #1
 8000fb0:	4623      	mov	r3, r4
 8000fb2:	469a      	mov	sl, r3
 8000fb4:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000fb8:	b10a      	cbz	r2, 8000fbe <_vfiprintf_r+0x86>
 8000fba:	2a25      	cmp	r2, #37	@ 0x25
 8000fbc:	d1f9      	bne.n	8000fb2 <_vfiprintf_r+0x7a>
 8000fbe:	ebba 0b04 	subs.w	fp, sl, r4
 8000fc2:	d00b      	beq.n	8000fdc <_vfiprintf_r+0xa4>
 8000fc4:	465b      	mov	r3, fp
 8000fc6:	4622      	mov	r2, r4
 8000fc8:	4629      	mov	r1, r5
 8000fca:	4630      	mov	r0, r6
 8000fcc:	f7ff ffa1 	bl	8000f12 <__sfputs_r>
 8000fd0:	3001      	adds	r0, #1
 8000fd2:	f000 80a7 	beq.w	8001124 <_vfiprintf_r+0x1ec>
 8000fd6:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000fd8:	445a      	add	r2, fp
 8000fda:	9209      	str	r2, [sp, #36]	@ 0x24
 8000fdc:	f89a 3000 	ldrb.w	r3, [sl]
 8000fe0:	2b00      	cmp	r3, #0
 8000fe2:	f000 809f 	beq.w	8001124 <_vfiprintf_r+0x1ec>
 8000fe6:	2300      	movs	r3, #0
 8000fe8:	f04f 32ff 	mov.w	r2, #4294967295
 8000fec:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ff0:	f10a 0a01 	add.w	sl, sl, #1
 8000ff4:	9304      	str	r3, [sp, #16]
 8000ff6:	9307      	str	r3, [sp, #28]
 8000ff8:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000ffc:	931a      	str	r3, [sp, #104]	@ 0x68
 8000ffe:	4654      	mov	r4, sl
 8001000:	2205      	movs	r2, #5
 8001002:	f814 1b01 	ldrb.w	r1, [r4], #1
 8001006:	4853      	ldr	r0, [pc, #332]	@ (8001154 <_vfiprintf_r+0x21c>)
 8001008:	f7ff f8ea 	bl	80001e0 <memchr>
 800100c:	9a04      	ldr	r2, [sp, #16]
 800100e:	b9d8      	cbnz	r0, 8001048 <_vfiprintf_r+0x110>
 8001010:	06d1      	lsls	r1, r2, #27
 8001012:	bf44      	itt	mi
 8001014:	2320      	movmi	r3, #32
 8001016:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 800101a:	0713      	lsls	r3, r2, #28
 800101c:	bf44      	itt	mi
 800101e:	232b      	movmi	r3, #43	@ 0x2b
 8001020:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8001024:	f89a 3000 	ldrb.w	r3, [sl]
 8001028:	2b2a      	cmp	r3, #42	@ 0x2a
 800102a:	d015      	beq.n	8001058 <_vfiprintf_r+0x120>
 800102c:	9a07      	ldr	r2, [sp, #28]
 800102e:	4654      	mov	r4, sl
 8001030:	2000      	movs	r0, #0
 8001032:	f04f 0c0a 	mov.w	ip, #10
 8001036:	4621      	mov	r1, r4
 8001038:	f811 3b01 	ldrb.w	r3, [r1], #1
 800103c:	3b30      	subs	r3, #48	@ 0x30
 800103e:	2b09      	cmp	r3, #9
 8001040:	d94b      	bls.n	80010da <_vfiprintf_r+0x1a2>
 8001042:	b1b0      	cbz	r0, 8001072 <_vfiprintf_r+0x13a>
 8001044:	9207      	str	r2, [sp, #28]
 8001046:	e014      	b.n	8001072 <_vfiprintf_r+0x13a>
 8001048:	eba0 0308 	sub.w	r3, r0, r8
 800104c:	fa09 f303 	lsl.w	r3, r9, r3
 8001050:	4313      	orrs	r3, r2
 8001052:	9304      	str	r3, [sp, #16]
 8001054:	46a2      	mov	sl, r4
 8001056:	e7d2      	b.n	8000ffe <_vfiprintf_r+0xc6>
 8001058:	9b03      	ldr	r3, [sp, #12]
 800105a:	1d19      	adds	r1, r3, #4
 800105c:	681b      	ldr	r3, [r3, #0]
 800105e:	9103      	str	r1, [sp, #12]
 8001060:	2b00      	cmp	r3, #0
 8001062:	bfbb      	ittet	lt
 8001064:	425b      	neglt	r3, r3
 8001066:	f042 0202 	orrlt.w	r2, r2, #2
 800106a:	9307      	strge	r3, [sp, #28]
 800106c:	9307      	strlt	r3, [sp, #28]
 800106e:	bfb8      	it	lt
 8001070:	9204      	strlt	r2, [sp, #16]
 8001072:	7823      	ldrb	r3, [r4, #0]
 8001074:	2b2e      	cmp	r3, #46	@ 0x2e
 8001076:	d10a      	bne.n	800108e <_vfiprintf_r+0x156>
 8001078:	7863      	ldrb	r3, [r4, #1]
 800107a:	2b2a      	cmp	r3, #42	@ 0x2a
 800107c:	d132      	bne.n	80010e4 <_vfiprintf_r+0x1ac>
 800107e:	9b03      	ldr	r3, [sp, #12]
 8001080:	1d1a      	adds	r2, r3, #4
 8001082:	681b      	ldr	r3, [r3, #0]
 8001084:	9203      	str	r2, [sp, #12]
 8001086:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 800108a:	3402      	adds	r4, #2
 800108c:	9305      	str	r3, [sp, #20]
 800108e:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8001164 <_vfiprintf_r+0x22c>
 8001092:	7821      	ldrb	r1, [r4, #0]
 8001094:	2203      	movs	r2, #3
 8001096:	4650      	mov	r0, sl
 8001098:	f7ff f8a2 	bl	80001e0 <memchr>
 800109c:	b138      	cbz	r0, 80010ae <_vfiprintf_r+0x176>
 800109e:	9b04      	ldr	r3, [sp, #16]
 80010a0:	eba0 000a 	sub.w	r0, r0, sl
 80010a4:	2240      	movs	r2, #64	@ 0x40
 80010a6:	4082      	lsls	r2, r0
 80010a8:	4313      	orrs	r3, r2
 80010aa:	3401      	adds	r4, #1
 80010ac:	9304      	str	r3, [sp, #16]
 80010ae:	f814 1b01 	ldrb.w	r1, [r4], #1
 80010b2:	4829      	ldr	r0, [pc, #164]	@ (8001158 <_vfiprintf_r+0x220>)
 80010b4:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 80010b8:	2206      	movs	r2, #6
 80010ba:	f7ff f891 	bl	80001e0 <memchr>
 80010be:	2800      	cmp	r0, #0
 80010c0:	d03f      	beq.n	8001142 <_vfiprintf_r+0x20a>
 80010c2:	4b26      	ldr	r3, [pc, #152]	@ (800115c <_vfiprintf_r+0x224>)
 80010c4:	bb1b      	cbnz	r3, 800110e <_vfiprintf_r+0x1d6>
 80010c6:	9b03      	ldr	r3, [sp, #12]
 80010c8:	3307      	adds	r3, #7
 80010ca:	f023 0307 	bic.w	r3, r3, #7
 80010ce:	3308      	adds	r3, #8
 80010d0:	9303      	str	r3, [sp, #12]
 80010d2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80010d4:	443b      	add	r3, r7
 80010d6:	9309      	str	r3, [sp, #36]	@ 0x24
 80010d8:	e76a      	b.n	8000fb0 <_vfiprintf_r+0x78>
 80010da:	fb0c 3202 	mla	r2, ip, r2, r3
 80010de:	460c      	mov	r4, r1
 80010e0:	2001      	movs	r0, #1
 80010e2:	e7a8      	b.n	8001036 <_vfiprintf_r+0xfe>
 80010e4:	2300      	movs	r3, #0
 80010e6:	3401      	adds	r4, #1
 80010e8:	9305      	str	r3, [sp, #20]
 80010ea:	4619      	mov	r1, r3
 80010ec:	f04f 0c0a 	mov.w	ip, #10
 80010f0:	4620      	mov	r0, r4
 80010f2:	f810 2b01 	ldrb.w	r2, [r0], #1
 80010f6:	3a30      	subs	r2, #48	@ 0x30
 80010f8:	2a09      	cmp	r2, #9
 80010fa:	d903      	bls.n	8001104 <_vfiprintf_r+0x1cc>
 80010fc:	2b00      	cmp	r3, #0
 80010fe:	d0c6      	beq.n	800108e <_vfiprintf_r+0x156>
 8001100:	9105      	str	r1, [sp, #20]
 8001102:	e7c4      	b.n	800108e <_vfiprintf_r+0x156>
 8001104:	fb0c 2101 	mla	r1, ip, r1, r2
 8001108:	4604      	mov	r4, r0
 800110a:	2301      	movs	r3, #1
 800110c:	e7f0      	b.n	80010f0 <_vfiprintf_r+0x1b8>
 800110e:	ab03      	add	r3, sp, #12
 8001110:	9300      	str	r3, [sp, #0]
 8001112:	462a      	mov	r2, r5
 8001114:	4b12      	ldr	r3, [pc, #72]	@ (8001160 <_vfiprintf_r+0x228>)
 8001116:	a904      	add	r1, sp, #16
 8001118:	4630      	mov	r0, r6
 800111a:	f3af 8000 	nop.w
 800111e:	4607      	mov	r7, r0
 8001120:	1c78      	adds	r0, r7, #1
 8001122:	d1d6      	bne.n	80010d2 <_vfiprintf_r+0x19a>
 8001124:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8001126:	07d9      	lsls	r1, r3, #31
 8001128:	d405      	bmi.n	8001136 <_vfiprintf_r+0x1fe>
 800112a:	89ab      	ldrh	r3, [r5, #12]
 800112c:	059a      	lsls	r2, r3, #22
 800112e:	d402      	bmi.n	8001136 <_vfiprintf_r+0x1fe>
 8001130:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8001132:	f7ff fddd 	bl	8000cf0 <__retarget_lock_release_recursive>
 8001136:	89ab      	ldrh	r3, [r5, #12]
 8001138:	065b      	lsls	r3, r3, #25
 800113a:	f53f af1f 	bmi.w	8000f7c <_vfiprintf_r+0x44>
 800113e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8001140:	e71e      	b.n	8000f80 <_vfiprintf_r+0x48>
 8001142:	ab03      	add	r3, sp, #12
 8001144:	9300      	str	r3, [sp, #0]
 8001146:	462a      	mov	r2, r5
 8001148:	4b05      	ldr	r3, [pc, #20]	@ (8001160 <_vfiprintf_r+0x228>)
 800114a:	a904      	add	r1, sp, #16
 800114c:	4630      	mov	r0, r6
 800114e:	f000 f879 	bl	8001244 <_printf_i>
 8001152:	e7e4      	b.n	800111e <_vfiprintf_r+0x1e6>
 8001154:	08001727 	.word	0x08001727
 8001158:	08001731 	.word	0x08001731
 800115c:	00000000 	.word	0x00000000
 8001160:	08000f13 	.word	0x08000f13
 8001164:	0800172d 	.word	0x0800172d

08001168 <_printf_common>:
 8001168:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800116c:	4616      	mov	r6, r2
 800116e:	4698      	mov	r8, r3
 8001170:	688a      	ldr	r2, [r1, #8]
 8001172:	690b      	ldr	r3, [r1, #16]
 8001174:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8001178:	4293      	cmp	r3, r2
 800117a:	bfb8      	it	lt
 800117c:	4613      	movlt	r3, r2
 800117e:	6033      	str	r3, [r6, #0]
 8001180:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8001184:	4607      	mov	r7, r0
 8001186:	460c      	mov	r4, r1
 8001188:	b10a      	cbz	r2, 800118e <_printf_common+0x26>
 800118a:	3301      	adds	r3, #1
 800118c:	6033      	str	r3, [r6, #0]
 800118e:	6823      	ldr	r3, [r4, #0]
 8001190:	0699      	lsls	r1, r3, #26
 8001192:	bf42      	ittt	mi
 8001194:	6833      	ldrmi	r3, [r6, #0]
 8001196:	3302      	addmi	r3, #2
 8001198:	6033      	strmi	r3, [r6, #0]
 800119a:	6825      	ldr	r5, [r4, #0]
 800119c:	f015 0506 	ands.w	r5, r5, #6
 80011a0:	d106      	bne.n	80011b0 <_printf_common+0x48>
 80011a2:	f104 0a19 	add.w	sl, r4, #25
 80011a6:	68e3      	ldr	r3, [r4, #12]
 80011a8:	6832      	ldr	r2, [r6, #0]
 80011aa:	1a9b      	subs	r3, r3, r2
 80011ac:	42ab      	cmp	r3, r5
 80011ae:	dc26      	bgt.n	80011fe <_printf_common+0x96>
 80011b0:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 80011b4:	6822      	ldr	r2, [r4, #0]
 80011b6:	3b00      	subs	r3, #0
 80011b8:	bf18      	it	ne
 80011ba:	2301      	movne	r3, #1
 80011bc:	0692      	lsls	r2, r2, #26
 80011be:	d42b      	bmi.n	8001218 <_printf_common+0xb0>
 80011c0:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 80011c4:	4641      	mov	r1, r8
 80011c6:	4638      	mov	r0, r7
 80011c8:	47c8      	blx	r9
 80011ca:	3001      	adds	r0, #1
 80011cc:	d01e      	beq.n	800120c <_printf_common+0xa4>
 80011ce:	6823      	ldr	r3, [r4, #0]
 80011d0:	6922      	ldr	r2, [r4, #16]
 80011d2:	f003 0306 	and.w	r3, r3, #6
 80011d6:	2b04      	cmp	r3, #4
 80011d8:	bf02      	ittt	eq
 80011da:	68e5      	ldreq	r5, [r4, #12]
 80011dc:	6833      	ldreq	r3, [r6, #0]
 80011de:	1aed      	subeq	r5, r5, r3
 80011e0:	68a3      	ldr	r3, [r4, #8]
 80011e2:	bf0c      	ite	eq
 80011e4:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80011e8:	2500      	movne	r5, #0
 80011ea:	4293      	cmp	r3, r2
 80011ec:	bfc4      	itt	gt
 80011ee:	1a9b      	subgt	r3, r3, r2
 80011f0:	18ed      	addgt	r5, r5, r3
 80011f2:	2600      	movs	r6, #0
 80011f4:	341a      	adds	r4, #26
 80011f6:	42b5      	cmp	r5, r6
 80011f8:	d11a      	bne.n	8001230 <_printf_common+0xc8>
 80011fa:	2000      	movs	r0, #0
 80011fc:	e008      	b.n	8001210 <_printf_common+0xa8>
 80011fe:	2301      	movs	r3, #1
 8001200:	4652      	mov	r2, sl
 8001202:	4641      	mov	r1, r8
 8001204:	4638      	mov	r0, r7
 8001206:	47c8      	blx	r9
 8001208:	3001      	adds	r0, #1
 800120a:	d103      	bne.n	8001214 <_printf_common+0xac>
 800120c:	f04f 30ff 	mov.w	r0, #4294967295
 8001210:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001214:	3501      	adds	r5, #1
 8001216:	e7c6      	b.n	80011a6 <_printf_common+0x3e>
 8001218:	18e1      	adds	r1, r4, r3
 800121a:	1c5a      	adds	r2, r3, #1
 800121c:	2030      	movs	r0, #48	@ 0x30
 800121e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8001222:	4422      	add	r2, r4
 8001224:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8001228:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 800122c:	3302      	adds	r3, #2
 800122e:	e7c7      	b.n	80011c0 <_printf_common+0x58>
 8001230:	2301      	movs	r3, #1
 8001232:	4622      	mov	r2, r4
 8001234:	4641      	mov	r1, r8
 8001236:	4638      	mov	r0, r7
 8001238:	47c8      	blx	r9
 800123a:	3001      	adds	r0, #1
 800123c:	d0e6      	beq.n	800120c <_printf_common+0xa4>
 800123e:	3601      	adds	r6, #1
 8001240:	e7d9      	b.n	80011f6 <_printf_common+0x8e>
	...

08001244 <_printf_i>:
 8001244:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001248:	7e0f      	ldrb	r7, [r1, #24]
 800124a:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 800124c:	2f78      	cmp	r7, #120	@ 0x78
 800124e:	4691      	mov	r9, r2
 8001250:	4680      	mov	r8, r0
 8001252:	460c      	mov	r4, r1
 8001254:	469a      	mov	sl, r3
 8001256:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 800125a:	d807      	bhi.n	800126c <_printf_i+0x28>
 800125c:	2f62      	cmp	r7, #98	@ 0x62
 800125e:	d80a      	bhi.n	8001276 <_printf_i+0x32>
 8001260:	2f00      	cmp	r7, #0
 8001262:	f000 80d2 	beq.w	800140a <_printf_i+0x1c6>
 8001266:	2f58      	cmp	r7, #88	@ 0x58
 8001268:	f000 80b9 	beq.w	80013de <_printf_i+0x19a>
 800126c:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8001270:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8001274:	e03a      	b.n	80012ec <_printf_i+0xa8>
 8001276:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 800127a:	2b15      	cmp	r3, #21
 800127c:	d8f6      	bhi.n	800126c <_printf_i+0x28>
 800127e:	a101      	add	r1, pc, #4	@ (adr r1, 8001284 <_printf_i+0x40>)
 8001280:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8001284:	080012dd 	.word	0x080012dd
 8001288:	080012f1 	.word	0x080012f1
 800128c:	0800126d 	.word	0x0800126d
 8001290:	0800126d 	.word	0x0800126d
 8001294:	0800126d 	.word	0x0800126d
 8001298:	0800126d 	.word	0x0800126d
 800129c:	080012f1 	.word	0x080012f1
 80012a0:	0800126d 	.word	0x0800126d
 80012a4:	0800126d 	.word	0x0800126d
 80012a8:	0800126d 	.word	0x0800126d
 80012ac:	0800126d 	.word	0x0800126d
 80012b0:	080013f1 	.word	0x080013f1
 80012b4:	0800131b 	.word	0x0800131b
 80012b8:	080013ab 	.word	0x080013ab
 80012bc:	0800126d 	.word	0x0800126d
 80012c0:	0800126d 	.word	0x0800126d
 80012c4:	08001413 	.word	0x08001413
 80012c8:	0800126d 	.word	0x0800126d
 80012cc:	0800131b 	.word	0x0800131b
 80012d0:	0800126d 	.word	0x0800126d
 80012d4:	0800126d 	.word	0x0800126d
 80012d8:	080013b3 	.word	0x080013b3
 80012dc:	6833      	ldr	r3, [r6, #0]
 80012de:	1d1a      	adds	r2, r3, #4
 80012e0:	681b      	ldr	r3, [r3, #0]
 80012e2:	6032      	str	r2, [r6, #0]
 80012e4:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80012e8:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 80012ec:	2301      	movs	r3, #1
 80012ee:	e09d      	b.n	800142c <_printf_i+0x1e8>
 80012f0:	6833      	ldr	r3, [r6, #0]
 80012f2:	6820      	ldr	r0, [r4, #0]
 80012f4:	1d19      	adds	r1, r3, #4
 80012f6:	6031      	str	r1, [r6, #0]
 80012f8:	0606      	lsls	r6, r0, #24
 80012fa:	d501      	bpl.n	8001300 <_printf_i+0xbc>
 80012fc:	681d      	ldr	r5, [r3, #0]
 80012fe:	e003      	b.n	8001308 <_printf_i+0xc4>
 8001300:	0645      	lsls	r5, r0, #25
 8001302:	d5fb      	bpl.n	80012fc <_printf_i+0xb8>
 8001304:	f9b3 5000 	ldrsh.w	r5, [r3]
 8001308:	2d00      	cmp	r5, #0
 800130a:	da03      	bge.n	8001314 <_printf_i+0xd0>
 800130c:	232d      	movs	r3, #45	@ 0x2d
 800130e:	426d      	negs	r5, r5
 8001310:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001314:	4859      	ldr	r0, [pc, #356]	@ (800147c <_printf_i+0x238>)
 8001316:	230a      	movs	r3, #10
 8001318:	e011      	b.n	800133e <_printf_i+0xfa>
 800131a:	6821      	ldr	r1, [r4, #0]
 800131c:	6833      	ldr	r3, [r6, #0]
 800131e:	0608      	lsls	r0, r1, #24
 8001320:	f853 5b04 	ldr.w	r5, [r3], #4
 8001324:	d402      	bmi.n	800132c <_printf_i+0xe8>
 8001326:	0649      	lsls	r1, r1, #25
 8001328:	bf48      	it	mi
 800132a:	b2ad      	uxthmi	r5, r5
 800132c:	2f6f      	cmp	r7, #111	@ 0x6f
 800132e:	4853      	ldr	r0, [pc, #332]	@ (800147c <_printf_i+0x238>)
 8001330:	6033      	str	r3, [r6, #0]
 8001332:	bf14      	ite	ne
 8001334:	230a      	movne	r3, #10
 8001336:	2308      	moveq	r3, #8
 8001338:	2100      	movs	r1, #0
 800133a:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 800133e:	6866      	ldr	r6, [r4, #4]
 8001340:	60a6      	str	r6, [r4, #8]
 8001342:	2e00      	cmp	r6, #0
 8001344:	bfa2      	ittt	ge
 8001346:	6821      	ldrge	r1, [r4, #0]
 8001348:	f021 0104 	bicge.w	r1, r1, #4
 800134c:	6021      	strge	r1, [r4, #0]
 800134e:	b90d      	cbnz	r5, 8001354 <_printf_i+0x110>
 8001350:	2e00      	cmp	r6, #0
 8001352:	d04b      	beq.n	80013ec <_printf_i+0x1a8>
 8001354:	4616      	mov	r6, r2
 8001356:	fbb5 f1f3 	udiv	r1, r5, r3
 800135a:	fb03 5711 	mls	r7, r3, r1, r5
 800135e:	5dc7      	ldrb	r7, [r0, r7]
 8001360:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8001364:	462f      	mov	r7, r5
 8001366:	42bb      	cmp	r3, r7
 8001368:	460d      	mov	r5, r1
 800136a:	d9f4      	bls.n	8001356 <_printf_i+0x112>
 800136c:	2b08      	cmp	r3, #8
 800136e:	d10b      	bne.n	8001388 <_printf_i+0x144>
 8001370:	6823      	ldr	r3, [r4, #0]
 8001372:	07df      	lsls	r7, r3, #31
 8001374:	d508      	bpl.n	8001388 <_printf_i+0x144>
 8001376:	6923      	ldr	r3, [r4, #16]
 8001378:	6861      	ldr	r1, [r4, #4]
 800137a:	4299      	cmp	r1, r3
 800137c:	bfde      	ittt	le
 800137e:	2330      	movle	r3, #48	@ 0x30
 8001380:	f806 3c01 	strble.w	r3, [r6, #-1]
 8001384:	f106 36ff 	addle.w	r6, r6, #4294967295
 8001388:	1b92      	subs	r2, r2, r6
 800138a:	6122      	str	r2, [r4, #16]
 800138c:	f8cd a000 	str.w	sl, [sp]
 8001390:	464b      	mov	r3, r9
 8001392:	aa03      	add	r2, sp, #12
 8001394:	4621      	mov	r1, r4
 8001396:	4640      	mov	r0, r8
 8001398:	f7ff fee6 	bl	8001168 <_printf_common>
 800139c:	3001      	adds	r0, #1
 800139e:	d14a      	bne.n	8001436 <_printf_i+0x1f2>
 80013a0:	f04f 30ff 	mov.w	r0, #4294967295
 80013a4:	b004      	add	sp, #16
 80013a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80013aa:	6823      	ldr	r3, [r4, #0]
 80013ac:	f043 0320 	orr.w	r3, r3, #32
 80013b0:	6023      	str	r3, [r4, #0]
 80013b2:	4833      	ldr	r0, [pc, #204]	@ (8001480 <_printf_i+0x23c>)
 80013b4:	2778      	movs	r7, #120	@ 0x78
 80013b6:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 80013ba:	6823      	ldr	r3, [r4, #0]
 80013bc:	6831      	ldr	r1, [r6, #0]
 80013be:	061f      	lsls	r7, r3, #24
 80013c0:	f851 5b04 	ldr.w	r5, [r1], #4
 80013c4:	d402      	bmi.n	80013cc <_printf_i+0x188>
 80013c6:	065f      	lsls	r7, r3, #25
 80013c8:	bf48      	it	mi
 80013ca:	b2ad      	uxthmi	r5, r5
 80013cc:	6031      	str	r1, [r6, #0]
 80013ce:	07d9      	lsls	r1, r3, #31
 80013d0:	bf44      	itt	mi
 80013d2:	f043 0320 	orrmi.w	r3, r3, #32
 80013d6:	6023      	strmi	r3, [r4, #0]
 80013d8:	b11d      	cbz	r5, 80013e2 <_printf_i+0x19e>
 80013da:	2310      	movs	r3, #16
 80013dc:	e7ac      	b.n	8001338 <_printf_i+0xf4>
 80013de:	4827      	ldr	r0, [pc, #156]	@ (800147c <_printf_i+0x238>)
 80013e0:	e7e9      	b.n	80013b6 <_printf_i+0x172>
 80013e2:	6823      	ldr	r3, [r4, #0]
 80013e4:	f023 0320 	bic.w	r3, r3, #32
 80013e8:	6023      	str	r3, [r4, #0]
 80013ea:	e7f6      	b.n	80013da <_printf_i+0x196>
 80013ec:	4616      	mov	r6, r2
 80013ee:	e7bd      	b.n	800136c <_printf_i+0x128>
 80013f0:	6833      	ldr	r3, [r6, #0]
 80013f2:	6825      	ldr	r5, [r4, #0]
 80013f4:	6961      	ldr	r1, [r4, #20]
 80013f6:	1d18      	adds	r0, r3, #4
 80013f8:	6030      	str	r0, [r6, #0]
 80013fa:	062e      	lsls	r6, r5, #24
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	d501      	bpl.n	8001404 <_printf_i+0x1c0>
 8001400:	6019      	str	r1, [r3, #0]
 8001402:	e002      	b.n	800140a <_printf_i+0x1c6>
 8001404:	0668      	lsls	r0, r5, #25
 8001406:	d5fb      	bpl.n	8001400 <_printf_i+0x1bc>
 8001408:	8019      	strh	r1, [r3, #0]
 800140a:	2300      	movs	r3, #0
 800140c:	6123      	str	r3, [r4, #16]
 800140e:	4616      	mov	r6, r2
 8001410:	e7bc      	b.n	800138c <_printf_i+0x148>
 8001412:	6833      	ldr	r3, [r6, #0]
 8001414:	1d1a      	adds	r2, r3, #4
 8001416:	6032      	str	r2, [r6, #0]
 8001418:	681e      	ldr	r6, [r3, #0]
 800141a:	6862      	ldr	r2, [r4, #4]
 800141c:	2100      	movs	r1, #0
 800141e:	4630      	mov	r0, r6
 8001420:	f7fe fede 	bl	80001e0 <memchr>
 8001424:	b108      	cbz	r0, 800142a <_printf_i+0x1e6>
 8001426:	1b80      	subs	r0, r0, r6
 8001428:	6060      	str	r0, [r4, #4]
 800142a:	6863      	ldr	r3, [r4, #4]
 800142c:	6123      	str	r3, [r4, #16]
 800142e:	2300      	movs	r3, #0
 8001430:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8001434:	e7aa      	b.n	800138c <_printf_i+0x148>
 8001436:	6923      	ldr	r3, [r4, #16]
 8001438:	4632      	mov	r2, r6
 800143a:	4649      	mov	r1, r9
 800143c:	4640      	mov	r0, r8
 800143e:	47d0      	blx	sl
 8001440:	3001      	adds	r0, #1
 8001442:	d0ad      	beq.n	80013a0 <_printf_i+0x15c>
 8001444:	6823      	ldr	r3, [r4, #0]
 8001446:	079b      	lsls	r3, r3, #30
 8001448:	d413      	bmi.n	8001472 <_printf_i+0x22e>
 800144a:	68e0      	ldr	r0, [r4, #12]
 800144c:	9b03      	ldr	r3, [sp, #12]
 800144e:	4298      	cmp	r0, r3
 8001450:	bfb8      	it	lt
 8001452:	4618      	movlt	r0, r3
 8001454:	e7a6      	b.n	80013a4 <_printf_i+0x160>
 8001456:	2301      	movs	r3, #1
 8001458:	4632      	mov	r2, r6
 800145a:	4649      	mov	r1, r9
 800145c:	4640      	mov	r0, r8
 800145e:	47d0      	blx	sl
 8001460:	3001      	adds	r0, #1
 8001462:	d09d      	beq.n	80013a0 <_printf_i+0x15c>
 8001464:	3501      	adds	r5, #1
 8001466:	68e3      	ldr	r3, [r4, #12]
 8001468:	9903      	ldr	r1, [sp, #12]
 800146a:	1a5b      	subs	r3, r3, r1
 800146c:	42ab      	cmp	r3, r5
 800146e:	dcf2      	bgt.n	8001456 <_printf_i+0x212>
 8001470:	e7eb      	b.n	800144a <_printf_i+0x206>
 8001472:	2500      	movs	r5, #0
 8001474:	f104 0619 	add.w	r6, r4, #25
 8001478:	e7f5      	b.n	8001466 <_printf_i+0x222>
 800147a:	bf00      	nop
 800147c:	08001738 	.word	0x08001738
 8001480:	08001749 	.word	0x08001749

08001484 <__sflush_r>:
 8001484:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8001488:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800148c:	0716      	lsls	r6, r2, #28
 800148e:	4605      	mov	r5, r0
 8001490:	460c      	mov	r4, r1
 8001492:	d454      	bmi.n	800153e <__sflush_r+0xba>
 8001494:	684b      	ldr	r3, [r1, #4]
 8001496:	2b00      	cmp	r3, #0
 8001498:	dc02      	bgt.n	80014a0 <__sflush_r+0x1c>
 800149a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800149c:	2b00      	cmp	r3, #0
 800149e:	dd48      	ble.n	8001532 <__sflush_r+0xae>
 80014a0:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80014a2:	2e00      	cmp	r6, #0
 80014a4:	d045      	beq.n	8001532 <__sflush_r+0xae>
 80014a6:	2300      	movs	r3, #0
 80014a8:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 80014ac:	682f      	ldr	r7, [r5, #0]
 80014ae:	6a21      	ldr	r1, [r4, #32]
 80014b0:	602b      	str	r3, [r5, #0]
 80014b2:	d030      	beq.n	8001516 <__sflush_r+0x92>
 80014b4:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 80014b6:	89a3      	ldrh	r3, [r4, #12]
 80014b8:	0759      	lsls	r1, r3, #29
 80014ba:	d505      	bpl.n	80014c8 <__sflush_r+0x44>
 80014bc:	6863      	ldr	r3, [r4, #4]
 80014be:	1ad2      	subs	r2, r2, r3
 80014c0:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 80014c2:	b10b      	cbz	r3, 80014c8 <__sflush_r+0x44>
 80014c4:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 80014c6:	1ad2      	subs	r2, r2, r3
 80014c8:	2300      	movs	r3, #0
 80014ca:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 80014cc:	6a21      	ldr	r1, [r4, #32]
 80014ce:	4628      	mov	r0, r5
 80014d0:	47b0      	blx	r6
 80014d2:	1c43      	adds	r3, r0, #1
 80014d4:	89a3      	ldrh	r3, [r4, #12]
 80014d6:	d106      	bne.n	80014e6 <__sflush_r+0x62>
 80014d8:	6829      	ldr	r1, [r5, #0]
 80014da:	291d      	cmp	r1, #29
 80014dc:	d82b      	bhi.n	8001536 <__sflush_r+0xb2>
 80014de:	4a2a      	ldr	r2, [pc, #168]	@ (8001588 <__sflush_r+0x104>)
 80014e0:	410a      	asrs	r2, r1
 80014e2:	07d6      	lsls	r6, r2, #31
 80014e4:	d427      	bmi.n	8001536 <__sflush_r+0xb2>
 80014e6:	2200      	movs	r2, #0
 80014e8:	6062      	str	r2, [r4, #4]
 80014ea:	04d9      	lsls	r1, r3, #19
 80014ec:	6922      	ldr	r2, [r4, #16]
 80014ee:	6022      	str	r2, [r4, #0]
 80014f0:	d504      	bpl.n	80014fc <__sflush_r+0x78>
 80014f2:	1c42      	adds	r2, r0, #1
 80014f4:	d101      	bne.n	80014fa <__sflush_r+0x76>
 80014f6:	682b      	ldr	r3, [r5, #0]
 80014f8:	b903      	cbnz	r3, 80014fc <__sflush_r+0x78>
 80014fa:	6560      	str	r0, [r4, #84]	@ 0x54
 80014fc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80014fe:	602f      	str	r7, [r5, #0]
 8001500:	b1b9      	cbz	r1, 8001532 <__sflush_r+0xae>
 8001502:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001506:	4299      	cmp	r1, r3
 8001508:	d002      	beq.n	8001510 <__sflush_r+0x8c>
 800150a:	4628      	mov	r0, r5
 800150c:	f7ff fbf2 	bl	8000cf4 <_free_r>
 8001510:	2300      	movs	r3, #0
 8001512:	6363      	str	r3, [r4, #52]	@ 0x34
 8001514:	e00d      	b.n	8001532 <__sflush_r+0xae>
 8001516:	2301      	movs	r3, #1
 8001518:	4628      	mov	r0, r5
 800151a:	47b0      	blx	r6
 800151c:	4602      	mov	r2, r0
 800151e:	1c50      	adds	r0, r2, #1
 8001520:	d1c9      	bne.n	80014b6 <__sflush_r+0x32>
 8001522:	682b      	ldr	r3, [r5, #0]
 8001524:	2b00      	cmp	r3, #0
 8001526:	d0c6      	beq.n	80014b6 <__sflush_r+0x32>
 8001528:	2b1d      	cmp	r3, #29
 800152a:	d001      	beq.n	8001530 <__sflush_r+0xac>
 800152c:	2b16      	cmp	r3, #22
 800152e:	d11e      	bne.n	800156e <__sflush_r+0xea>
 8001530:	602f      	str	r7, [r5, #0]
 8001532:	2000      	movs	r0, #0
 8001534:	e022      	b.n	800157c <__sflush_r+0xf8>
 8001536:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800153a:	b21b      	sxth	r3, r3
 800153c:	e01b      	b.n	8001576 <__sflush_r+0xf2>
 800153e:	690f      	ldr	r7, [r1, #16]
 8001540:	2f00      	cmp	r7, #0
 8001542:	d0f6      	beq.n	8001532 <__sflush_r+0xae>
 8001544:	0793      	lsls	r3, r2, #30
 8001546:	680e      	ldr	r6, [r1, #0]
 8001548:	bf08      	it	eq
 800154a:	694b      	ldreq	r3, [r1, #20]
 800154c:	600f      	str	r7, [r1, #0]
 800154e:	bf18      	it	ne
 8001550:	2300      	movne	r3, #0
 8001552:	eba6 0807 	sub.w	r8, r6, r7
 8001556:	608b      	str	r3, [r1, #8]
 8001558:	f1b8 0f00 	cmp.w	r8, #0
 800155c:	dde9      	ble.n	8001532 <__sflush_r+0xae>
 800155e:	6a21      	ldr	r1, [r4, #32]
 8001560:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8001562:	4643      	mov	r3, r8
 8001564:	463a      	mov	r2, r7
 8001566:	4628      	mov	r0, r5
 8001568:	47b0      	blx	r6
 800156a:	2800      	cmp	r0, #0
 800156c:	dc08      	bgt.n	8001580 <__sflush_r+0xfc>
 800156e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001572:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8001576:	81a3      	strh	r3, [r4, #12]
 8001578:	f04f 30ff 	mov.w	r0, #4294967295
 800157c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001580:	4407      	add	r7, r0
 8001582:	eba8 0800 	sub.w	r8, r8, r0
 8001586:	e7e7      	b.n	8001558 <__sflush_r+0xd4>
 8001588:	dfbffffe 	.word	0xdfbffffe

0800158c <_fflush_r>:
 800158c:	b538      	push	{r3, r4, r5, lr}
 800158e:	690b      	ldr	r3, [r1, #16]
 8001590:	4605      	mov	r5, r0
 8001592:	460c      	mov	r4, r1
 8001594:	b913      	cbnz	r3, 800159c <_fflush_r+0x10>
 8001596:	2500      	movs	r5, #0
 8001598:	4628      	mov	r0, r5
 800159a:	bd38      	pop	{r3, r4, r5, pc}
 800159c:	b118      	cbz	r0, 80015a6 <_fflush_r+0x1a>
 800159e:	6a03      	ldr	r3, [r0, #32]
 80015a0:	b90b      	cbnz	r3, 80015a6 <_fflush_r+0x1a>
 80015a2:	f7ff f9ad 	bl	8000900 <__sinit>
 80015a6:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80015aa:	2b00      	cmp	r3, #0
 80015ac:	d0f3      	beq.n	8001596 <_fflush_r+0xa>
 80015ae:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 80015b0:	07d0      	lsls	r0, r2, #31
 80015b2:	d404      	bmi.n	80015be <_fflush_r+0x32>
 80015b4:	0599      	lsls	r1, r3, #22
 80015b6:	d402      	bmi.n	80015be <_fflush_r+0x32>
 80015b8:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80015ba:	f7ff fb98 	bl	8000cee <__retarget_lock_acquire_recursive>
 80015be:	4628      	mov	r0, r5
 80015c0:	4621      	mov	r1, r4
 80015c2:	f7ff ff5f 	bl	8001484 <__sflush_r>
 80015c6:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80015c8:	07da      	lsls	r2, r3, #31
 80015ca:	4605      	mov	r5, r0
 80015cc:	d4e4      	bmi.n	8001598 <_fflush_r+0xc>
 80015ce:	89a3      	ldrh	r3, [r4, #12]
 80015d0:	059b      	lsls	r3, r3, #22
 80015d2:	d4e1      	bmi.n	8001598 <_fflush_r+0xc>
 80015d4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80015d6:	f7ff fb8b 	bl	8000cf0 <__retarget_lock_release_recursive>
 80015da:	e7dd      	b.n	8001598 <_fflush_r+0xc>

080015dc <__swhatbuf_r>:
 80015dc:	b570      	push	{r4, r5, r6, lr}
 80015de:	460c      	mov	r4, r1
 80015e0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80015e4:	2900      	cmp	r1, #0
 80015e6:	b096      	sub	sp, #88	@ 0x58
 80015e8:	4615      	mov	r5, r2
 80015ea:	461e      	mov	r6, r3
 80015ec:	da0d      	bge.n	800160a <__swhatbuf_r+0x2e>
 80015ee:	89a3      	ldrh	r3, [r4, #12]
 80015f0:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80015f4:	f04f 0100 	mov.w	r1, #0
 80015f8:	bf14      	ite	ne
 80015fa:	2340      	movne	r3, #64	@ 0x40
 80015fc:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8001600:	2000      	movs	r0, #0
 8001602:	6031      	str	r1, [r6, #0]
 8001604:	602b      	str	r3, [r5, #0]
 8001606:	b016      	add	sp, #88	@ 0x58
 8001608:	bd70      	pop	{r4, r5, r6, pc}
 800160a:	466a      	mov	r2, sp
 800160c:	f000 f848 	bl	80016a0 <_fstat_r>
 8001610:	2800      	cmp	r0, #0
 8001612:	dbec      	blt.n	80015ee <__swhatbuf_r+0x12>
 8001614:	9901      	ldr	r1, [sp, #4]
 8001616:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800161a:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 800161e:	4259      	negs	r1, r3
 8001620:	4159      	adcs	r1, r3
 8001622:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001626:	e7eb      	b.n	8001600 <__swhatbuf_r+0x24>

08001628 <__smakebuf_r>:
 8001628:	898b      	ldrh	r3, [r1, #12]
 800162a:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800162c:	079d      	lsls	r5, r3, #30
 800162e:	4606      	mov	r6, r0
 8001630:	460c      	mov	r4, r1
 8001632:	d507      	bpl.n	8001644 <__smakebuf_r+0x1c>
 8001634:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8001638:	6023      	str	r3, [r4, #0]
 800163a:	6123      	str	r3, [r4, #16]
 800163c:	2301      	movs	r3, #1
 800163e:	6163      	str	r3, [r4, #20]
 8001640:	b003      	add	sp, #12
 8001642:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001644:	ab01      	add	r3, sp, #4
 8001646:	466a      	mov	r2, sp
 8001648:	f7ff ffc8 	bl	80015dc <__swhatbuf_r>
 800164c:	9f00      	ldr	r7, [sp, #0]
 800164e:	4605      	mov	r5, r0
 8001650:	4639      	mov	r1, r7
 8001652:	4630      	mov	r0, r6
 8001654:	f7ff fbba 	bl	8000dcc <_malloc_r>
 8001658:	b948      	cbnz	r0, 800166e <__smakebuf_r+0x46>
 800165a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800165e:	059a      	lsls	r2, r3, #22
 8001660:	d4ee      	bmi.n	8001640 <__smakebuf_r+0x18>
 8001662:	f023 0303 	bic.w	r3, r3, #3
 8001666:	f043 0302 	orr.w	r3, r3, #2
 800166a:	81a3      	strh	r3, [r4, #12]
 800166c:	e7e2      	b.n	8001634 <__smakebuf_r+0xc>
 800166e:	89a3      	ldrh	r3, [r4, #12]
 8001670:	6020      	str	r0, [r4, #0]
 8001672:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8001676:	81a3      	strh	r3, [r4, #12]
 8001678:	9b01      	ldr	r3, [sp, #4]
 800167a:	e9c4 0704 	strd	r0, r7, [r4, #16]
 800167e:	b15b      	cbz	r3, 8001698 <__smakebuf_r+0x70>
 8001680:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001684:	4630      	mov	r0, r6
 8001686:	f000 f81d 	bl	80016c4 <_isatty_r>
 800168a:	b128      	cbz	r0, 8001698 <__smakebuf_r+0x70>
 800168c:	89a3      	ldrh	r3, [r4, #12]
 800168e:	f023 0303 	bic.w	r3, r3, #3
 8001692:	f043 0301 	orr.w	r3, r3, #1
 8001696:	81a3      	strh	r3, [r4, #12]
 8001698:	89a3      	ldrh	r3, [r4, #12]
 800169a:	431d      	orrs	r5, r3
 800169c:	81a5      	strh	r5, [r4, #12]
 800169e:	e7cf      	b.n	8001640 <__smakebuf_r+0x18>

080016a0 <_fstat_r>:
 80016a0:	b538      	push	{r3, r4, r5, lr}
 80016a2:	4d07      	ldr	r5, [pc, #28]	@ (80016c0 <_fstat_r+0x20>)
 80016a4:	2300      	movs	r3, #0
 80016a6:	4604      	mov	r4, r0
 80016a8:	4608      	mov	r0, r1
 80016aa:	4611      	mov	r1, r2
 80016ac:	602b      	str	r3, [r5, #0]
 80016ae:	f7ff f812 	bl	80006d6 <_fstat>
 80016b2:	1c43      	adds	r3, r0, #1
 80016b4:	d102      	bne.n	80016bc <_fstat_r+0x1c>
 80016b6:	682b      	ldr	r3, [r5, #0]
 80016b8:	b103      	cbz	r3, 80016bc <_fstat_r+0x1c>
 80016ba:	6023      	str	r3, [r4, #0]
 80016bc:	bd38      	pop	{r3, r4, r5, pc}
 80016be:	bf00      	nop
 80016c0:	200002ec 	.word	0x200002ec

080016c4 <_isatty_r>:
 80016c4:	b538      	push	{r3, r4, r5, lr}
 80016c6:	4d06      	ldr	r5, [pc, #24]	@ (80016e0 <_isatty_r+0x1c>)
 80016c8:	2300      	movs	r3, #0
 80016ca:	4604      	mov	r4, r0
 80016cc:	4608      	mov	r0, r1
 80016ce:	602b      	str	r3, [r5, #0]
 80016d0:	f7ff f811 	bl	80006f6 <_isatty>
 80016d4:	1c43      	adds	r3, r0, #1
 80016d6:	d102      	bne.n	80016de <_isatty_r+0x1a>
 80016d8:	682b      	ldr	r3, [r5, #0]
 80016da:	b103      	cbz	r3, 80016de <_isatty_r+0x1a>
 80016dc:	6023      	str	r3, [r4, #0]
 80016de:	bd38      	pop	{r3, r4, r5, pc}
 80016e0:	200002ec 	.word	0x200002ec

080016e4 <_sbrk_r>:
 80016e4:	b538      	push	{r3, r4, r5, lr}
 80016e6:	4d06      	ldr	r5, [pc, #24]	@ (8001700 <_sbrk_r+0x1c>)
 80016e8:	2300      	movs	r3, #0
 80016ea:	4604      	mov	r4, r0
 80016ec:	4608      	mov	r0, r1
 80016ee:	602b      	str	r3, [r5, #0]
 80016f0:	f7ff f81a 	bl	8000728 <_sbrk>
 80016f4:	1c43      	adds	r3, r0, #1
 80016f6:	d102      	bne.n	80016fe <_sbrk_r+0x1a>
 80016f8:	682b      	ldr	r3, [r5, #0]
 80016fa:	b103      	cbz	r3, 80016fe <_sbrk_r+0x1a>
 80016fc:	6023      	str	r3, [r4, #0]
 80016fe:	bd38      	pop	{r3, r4, r5, pc}
 8001700:	200002ec 	.word	0x200002ec

08001704 <_init>:
 8001704:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001706:	bf00      	nop
 8001708:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800170a:	bc08      	pop	{r3}
 800170c:	469e      	mov	lr, r3
 800170e:	4770      	bx	lr

08001710 <_fini>:
 8001710:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001712:	bf00      	nop
 8001714:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001716:	bc08      	pop	{r3}
 8001718:	469e      	mov	lr, r3
 800171a:	4770      	bx	lr
